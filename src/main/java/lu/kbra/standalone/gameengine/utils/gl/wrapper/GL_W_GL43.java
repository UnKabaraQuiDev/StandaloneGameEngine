package lu.kbra.standalone.gameengine.utils.gl.wrapper;

public class GL_W_GL43 implements GL_W_Call {

	public void init() {
		GL_W.WRAPPER = this;
		GL_W.GL_NUM_SHADING_LANGUAGE_VERSIONS = org.lwjgl.opengl.GL43.GL_NUM_SHADING_LANGUAGE_VERSIONS;
		GL_W.GL_VERTEX_ATTRIB_ARRAY_LONG = org.lwjgl.opengl.GL43.GL_VERTEX_ATTRIB_ARRAY_LONG;
		GL_W.GL_COMPRESSED_RGB8_ETC2 = org.lwjgl.opengl.GL43.GL_COMPRESSED_RGB8_ETC2;
		GL_W.GL_COMPRESSED_SRGB8_ETC2 = org.lwjgl.opengl.GL43.GL_COMPRESSED_SRGB8_ETC2;
		GL_W.GL_COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2 = org.lwjgl.opengl.GL43.GL_COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2;
		GL_W.GL_COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2 = org.lwjgl.opengl.GL43.GL_COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2;
		GL_W.GL_COMPRESSED_RGBA8_ETC2_EAC = org.lwjgl.opengl.GL43.GL_COMPRESSED_RGBA8_ETC2_EAC;
		GL_W.GL_COMPRESSED_SRGB8_ALPHA8_ETC2_EAC = org.lwjgl.opengl.GL43.GL_COMPRESSED_SRGB8_ALPHA8_ETC2_EAC;
		GL_W.GL_COMPRESSED_R11_EAC = org.lwjgl.opengl.GL43.GL_COMPRESSED_R11_EAC;
		GL_W.GL_COMPRESSED_SIGNED_R11_EAC = org.lwjgl.opengl.GL43.GL_COMPRESSED_SIGNED_R11_EAC;
		GL_W.GL_COMPRESSED_RG11_EAC = org.lwjgl.opengl.GL43.GL_COMPRESSED_RG11_EAC;
		GL_W.GL_COMPRESSED_SIGNED_RG11_EAC = org.lwjgl.opengl.GL43.GL_COMPRESSED_SIGNED_RG11_EAC;
		GL_W.GL_PRIMITIVE_RESTART_FIXED_INDEX = org.lwjgl.opengl.GL43.GL_PRIMITIVE_RESTART_FIXED_INDEX;
		GL_W.GL_ANY_SAMPLES_PASSED_CONSERVATIVE = org.lwjgl.opengl.GL43.GL_ANY_SAMPLES_PASSED_CONSERVATIVE;
		GL_W.GL_MAX_ELEMENT_INDEX = org.lwjgl.opengl.GL43.GL_MAX_ELEMENT_INDEX;
		GL_W.GL_TEXTURE_IMMUTABLE_LEVELS = org.lwjgl.opengl.GL43.GL_TEXTURE_IMMUTABLE_LEVELS;
		GL_W.GL_COMPUTE_SHADER = org.lwjgl.opengl.GL43.GL_COMPUTE_SHADER;
		GL_W.GL_MAX_COMPUTE_UNIFORM_BLOCKS = org.lwjgl.opengl.GL43.GL_MAX_COMPUTE_UNIFORM_BLOCKS;
		GL_W.GL_MAX_COMPUTE_TEXTURE_IMAGE_UNITS = org.lwjgl.opengl.GL43.GL_MAX_COMPUTE_TEXTURE_IMAGE_UNITS;
		GL_W.GL_MAX_COMPUTE_IMAGE_UNIFORMS = org.lwjgl.opengl.GL43.GL_MAX_COMPUTE_IMAGE_UNIFORMS;
		GL_W.GL_MAX_COMPUTE_SHARED_MEMORY_SIZE = org.lwjgl.opengl.GL43.GL_MAX_COMPUTE_SHARED_MEMORY_SIZE;
		GL_W.GL_MAX_COMPUTE_UNIFORM_COMPONENTS = org.lwjgl.opengl.GL43.GL_MAX_COMPUTE_UNIFORM_COMPONENTS;
		GL_W.GL_MAX_COMPUTE_ATOMIC_COUNTER_BUFFERS = org.lwjgl.opengl.GL43.GL_MAX_COMPUTE_ATOMIC_COUNTER_BUFFERS;
		GL_W.GL_MAX_COMPUTE_ATOMIC_COUNTERS = org.lwjgl.opengl.GL43.GL_MAX_COMPUTE_ATOMIC_COUNTERS;
		GL_W.GL_MAX_COMBINED_COMPUTE_UNIFORM_COMPONENTS = org.lwjgl.opengl.GL43.GL_MAX_COMBINED_COMPUTE_UNIFORM_COMPONENTS;
		GL_W.GL_MAX_COMPUTE_WORK_GROUP_INVOCATIONS = org.lwjgl.opengl.GL43.GL_MAX_COMPUTE_WORK_GROUP_INVOCATIONS;
		GL_W.GL_MAX_COMPUTE_WORK_GROUP_COUNT = org.lwjgl.opengl.GL43.GL_MAX_COMPUTE_WORK_GROUP_COUNT;
		GL_W.GL_MAX_COMPUTE_WORK_GROUP_SIZE = org.lwjgl.opengl.GL43.GL_MAX_COMPUTE_WORK_GROUP_SIZE;
		GL_W.GL_COMPUTE_WORK_GROUP_SIZE = org.lwjgl.opengl.GL43.GL_COMPUTE_WORK_GROUP_SIZE;
		GL_W.GL_UNIFORM_BLOCK_REFERENCED_BY_COMPUTE_SHADER = org.lwjgl.opengl.GL43.GL_UNIFORM_BLOCK_REFERENCED_BY_COMPUTE_SHADER;
		GL_W.GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_COMPUTE_SHADER = org.lwjgl.opengl.GL43.GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_COMPUTE_SHADER;
		GL_W.GL_DISPATCH_INDIRECT_BUFFER = org.lwjgl.opengl.GL43.GL_DISPATCH_INDIRECT_BUFFER;
		GL_W.GL_DISPATCH_INDIRECT_BUFFER_BINDING = org.lwjgl.opengl.GL43.GL_DISPATCH_INDIRECT_BUFFER_BINDING;
		GL_W.GL_COMPUTE_SHADER_BIT = org.lwjgl.opengl.GL43.GL_COMPUTE_SHADER_BIT;
		GL_W.GL_DEBUG_OUTPUT = org.lwjgl.opengl.GL43.GL_DEBUG_OUTPUT;
		GL_W.GL_DEBUG_OUTPUT_SYNCHRONOUS = org.lwjgl.opengl.GL43.GL_DEBUG_OUTPUT_SYNCHRONOUS;
		GL_W.GL_CONTEXT_FLAG_DEBUG_BIT = org.lwjgl.opengl.GL43.GL_CONTEXT_FLAG_DEBUG_BIT;
		GL_W.GL_MAX_DEBUG_MESSAGE_LENGTH = org.lwjgl.opengl.GL43.GL_MAX_DEBUG_MESSAGE_LENGTH;
		GL_W.GL_MAX_DEBUG_LOGGED_MESSAGES = org.lwjgl.opengl.GL43.GL_MAX_DEBUG_LOGGED_MESSAGES;
		GL_W.GL_DEBUG_LOGGED_MESSAGES = org.lwjgl.opengl.GL43.GL_DEBUG_LOGGED_MESSAGES;
		GL_W.GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH = org.lwjgl.opengl.GL43.GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH;
		GL_W.GL_MAX_DEBUG_GROUP_STACK_DEPTH = org.lwjgl.opengl.GL43.GL_MAX_DEBUG_GROUP_STACK_DEPTH;
		GL_W.GL_DEBUG_GROUP_STACK_DEPTH = org.lwjgl.opengl.GL43.GL_DEBUG_GROUP_STACK_DEPTH;
		GL_W.GL_MAX_LABEL_LENGTH = org.lwjgl.opengl.GL43.GL_MAX_LABEL_LENGTH;
		GL_W.GL_DEBUG_CALLBACK_FUNCTION = org.lwjgl.opengl.GL43.GL_DEBUG_CALLBACK_FUNCTION;
		GL_W.GL_DEBUG_CALLBACK_USER_PARAM = org.lwjgl.opengl.GL43.GL_DEBUG_CALLBACK_USER_PARAM;
		GL_W.GL_DEBUG_SOURCE_API = org.lwjgl.opengl.GL43.GL_DEBUG_SOURCE_API;
		GL_W.GL_DEBUG_SOURCE_WINDOW_SYSTEM = org.lwjgl.opengl.GL43.GL_DEBUG_SOURCE_WINDOW_SYSTEM;
		GL_W.GL_DEBUG_SOURCE_SHADER_COMPILER = org.lwjgl.opengl.GL43.GL_DEBUG_SOURCE_SHADER_COMPILER;
		GL_W.GL_DEBUG_SOURCE_THIRD_PARTY = org.lwjgl.opengl.GL43.GL_DEBUG_SOURCE_THIRD_PARTY;
		GL_W.GL_DEBUG_SOURCE_APPLICATION = org.lwjgl.opengl.GL43.GL_DEBUG_SOURCE_APPLICATION;
		GL_W.GL_DEBUG_SOURCE_OTHER = org.lwjgl.opengl.GL43.GL_DEBUG_SOURCE_OTHER;
		GL_W.GL_DEBUG_TYPE_ERROR = org.lwjgl.opengl.GL43.GL_DEBUG_TYPE_ERROR;
		GL_W.GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR = org.lwjgl.opengl.GL43.GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR;
		GL_W.GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR = org.lwjgl.opengl.GL43.GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR;
		GL_W.GL_DEBUG_TYPE_PORTABILITY = org.lwjgl.opengl.GL43.GL_DEBUG_TYPE_PORTABILITY;
		GL_W.GL_DEBUG_TYPE_PERFORMANCE = org.lwjgl.opengl.GL43.GL_DEBUG_TYPE_PERFORMANCE;
		GL_W.GL_DEBUG_TYPE_OTHER = org.lwjgl.opengl.GL43.GL_DEBUG_TYPE_OTHER;
		GL_W.GL_DEBUG_TYPE_MARKER = org.lwjgl.opengl.GL43.GL_DEBUG_TYPE_MARKER;
		GL_W.GL_DEBUG_TYPE_PUSH_GROUP = org.lwjgl.opengl.GL43.GL_DEBUG_TYPE_PUSH_GROUP;
		GL_W.GL_DEBUG_TYPE_POP_GROUP = org.lwjgl.opengl.GL43.GL_DEBUG_TYPE_POP_GROUP;
		GL_W.GL_DEBUG_SEVERITY_HIGH = org.lwjgl.opengl.GL43.GL_DEBUG_SEVERITY_HIGH;
		GL_W.GL_DEBUG_SEVERITY_MEDIUM = org.lwjgl.opengl.GL43.GL_DEBUG_SEVERITY_MEDIUM;
		GL_W.GL_DEBUG_SEVERITY_LOW = org.lwjgl.opengl.GL43.GL_DEBUG_SEVERITY_LOW;
		GL_W.GL_DEBUG_SEVERITY_NOTIFICATION = org.lwjgl.opengl.GL43.GL_DEBUG_SEVERITY_NOTIFICATION;
		GL_W.GL_BUFFER = org.lwjgl.opengl.GL43.GL_BUFFER;
		GL_W.GL_SHADER = org.lwjgl.opengl.GL43.GL_SHADER;
		GL_W.GL_PROGRAM = org.lwjgl.opengl.GL43.GL_PROGRAM;
		GL_W.GL_QUERY = org.lwjgl.opengl.GL43.GL_QUERY;
		GL_W.GL_PROGRAM_PIPELINE = org.lwjgl.opengl.GL43.GL_PROGRAM_PIPELINE;
		GL_W.GL_SAMPLER = org.lwjgl.opengl.GL43.GL_SAMPLER;
		GL_W.GL_DISPLAY_LIST = org.lwjgl.opengl.GL43.GL_DISPLAY_LIST;
		GL_W.GL_MAX_UNIFORM_LOCATIONS = org.lwjgl.opengl.GL43.GL_MAX_UNIFORM_LOCATIONS;
		GL_W.GL_FRAMEBUFFER_DEFAULT_WIDTH = org.lwjgl.opengl.GL43.GL_FRAMEBUFFER_DEFAULT_WIDTH;
		GL_W.GL_FRAMEBUFFER_DEFAULT_HEIGHT = org.lwjgl.opengl.GL43.GL_FRAMEBUFFER_DEFAULT_HEIGHT;
		GL_W.GL_FRAMEBUFFER_DEFAULT_LAYERS = org.lwjgl.opengl.GL43.GL_FRAMEBUFFER_DEFAULT_LAYERS;
		GL_W.GL_FRAMEBUFFER_DEFAULT_SAMPLES = org.lwjgl.opengl.GL43.GL_FRAMEBUFFER_DEFAULT_SAMPLES;
		GL_W.GL_FRAMEBUFFER_DEFAULT_FIXED_SAMPLE_LOCATIONS = org.lwjgl.opengl.GL43.GL_FRAMEBUFFER_DEFAULT_FIXED_SAMPLE_LOCATIONS;
		GL_W.GL_MAX_FRAMEBUFFER_WIDTH = org.lwjgl.opengl.GL43.GL_MAX_FRAMEBUFFER_WIDTH;
		GL_W.GL_MAX_FRAMEBUFFER_HEIGHT = org.lwjgl.opengl.GL43.GL_MAX_FRAMEBUFFER_HEIGHT;
		GL_W.GL_MAX_FRAMEBUFFER_LAYERS = org.lwjgl.opengl.GL43.GL_MAX_FRAMEBUFFER_LAYERS;
		GL_W.GL_MAX_FRAMEBUFFER_SAMPLES = org.lwjgl.opengl.GL43.GL_MAX_FRAMEBUFFER_SAMPLES;
		GL_W.GL_INTERNALFORMAT_SUPPORTED = org.lwjgl.opengl.GL43.GL_INTERNALFORMAT_SUPPORTED;
		GL_W.GL_INTERNALFORMAT_PREFERRED = org.lwjgl.opengl.GL43.GL_INTERNALFORMAT_PREFERRED;
		GL_W.GL_INTERNALFORMAT_RED_SIZE = org.lwjgl.opengl.GL43.GL_INTERNALFORMAT_RED_SIZE;
		GL_W.GL_INTERNALFORMAT_GREEN_SIZE = org.lwjgl.opengl.GL43.GL_INTERNALFORMAT_GREEN_SIZE;
		GL_W.GL_INTERNALFORMAT_BLUE_SIZE = org.lwjgl.opengl.GL43.GL_INTERNALFORMAT_BLUE_SIZE;
		GL_W.GL_INTERNALFORMAT_ALPHA_SIZE = org.lwjgl.opengl.GL43.GL_INTERNALFORMAT_ALPHA_SIZE;
		GL_W.GL_INTERNALFORMAT_DEPTH_SIZE = org.lwjgl.opengl.GL43.GL_INTERNALFORMAT_DEPTH_SIZE;
		GL_W.GL_INTERNALFORMAT_STENCIL_SIZE = org.lwjgl.opengl.GL43.GL_INTERNALFORMAT_STENCIL_SIZE;
		GL_W.GL_INTERNALFORMAT_SHARED_SIZE = org.lwjgl.opengl.GL43.GL_INTERNALFORMAT_SHARED_SIZE;
		GL_W.GL_INTERNALFORMAT_RED_TYPE = org.lwjgl.opengl.GL43.GL_INTERNALFORMAT_RED_TYPE;
		GL_W.GL_INTERNALFORMAT_GREEN_TYPE = org.lwjgl.opengl.GL43.GL_INTERNALFORMAT_GREEN_TYPE;
		GL_W.GL_INTERNALFORMAT_BLUE_TYPE = org.lwjgl.opengl.GL43.GL_INTERNALFORMAT_BLUE_TYPE;
		GL_W.GL_INTERNALFORMAT_ALPHA_TYPE = org.lwjgl.opengl.GL43.GL_INTERNALFORMAT_ALPHA_TYPE;
		GL_W.GL_INTERNALFORMAT_DEPTH_TYPE = org.lwjgl.opengl.GL43.GL_INTERNALFORMAT_DEPTH_TYPE;
		GL_W.GL_INTERNALFORMAT_STENCIL_TYPE = org.lwjgl.opengl.GL43.GL_INTERNALFORMAT_STENCIL_TYPE;
		GL_W.GL_MAX_WIDTH = org.lwjgl.opengl.GL43.GL_MAX_WIDTH;
		GL_W.GL_MAX_HEIGHT = org.lwjgl.opengl.GL43.GL_MAX_HEIGHT;
		GL_W.GL_MAX_DEPTH = org.lwjgl.opengl.GL43.GL_MAX_DEPTH;
		GL_W.GL_MAX_LAYERS = org.lwjgl.opengl.GL43.GL_MAX_LAYERS;
		GL_W.GL_MAX_COMBINED_DIMENSIONS = org.lwjgl.opengl.GL43.GL_MAX_COMBINED_DIMENSIONS;
		GL_W.GL_COLOR_COMPONENTS = org.lwjgl.opengl.GL43.GL_COLOR_COMPONENTS;
		GL_W.GL_DEPTH_COMPONENTS = org.lwjgl.opengl.GL43.GL_DEPTH_COMPONENTS;
		GL_W.GL_STENCIL_COMPONENTS = org.lwjgl.opengl.GL43.GL_STENCIL_COMPONENTS;
		GL_W.GL_COLOR_RENDERABLE = org.lwjgl.opengl.GL43.GL_COLOR_RENDERABLE;
		GL_W.GL_DEPTH_RENDERABLE = org.lwjgl.opengl.GL43.GL_DEPTH_RENDERABLE;
		GL_W.GL_STENCIL_RENDERABLE = org.lwjgl.opengl.GL43.GL_STENCIL_RENDERABLE;
		GL_W.GL_FRAMEBUFFER_RENDERABLE = org.lwjgl.opengl.GL43.GL_FRAMEBUFFER_RENDERABLE;
		GL_W.GL_FRAMEBUFFER_RENDERABLE_LAYERED = org.lwjgl.opengl.GL43.GL_FRAMEBUFFER_RENDERABLE_LAYERED;
		GL_W.GL_FRAMEBUFFER_BLEND = org.lwjgl.opengl.GL43.GL_FRAMEBUFFER_BLEND;
		GL_W.GL_READ_PIXELS = org.lwjgl.opengl.GL43.GL_READ_PIXELS;
		GL_W.GL_READ_PIXELS_FORMAT = org.lwjgl.opengl.GL43.GL_READ_PIXELS_FORMAT;
		GL_W.GL_READ_PIXELS_TYPE = org.lwjgl.opengl.GL43.GL_READ_PIXELS_TYPE;
		GL_W.GL_TEXTURE_IMAGE_FORMAT = org.lwjgl.opengl.GL43.GL_TEXTURE_IMAGE_FORMAT;
		GL_W.GL_TEXTURE_IMAGE_TYPE = org.lwjgl.opengl.GL43.GL_TEXTURE_IMAGE_TYPE;
		GL_W.GL_GET_TEXTURE_IMAGE_FORMAT = org.lwjgl.opengl.GL43.GL_GET_TEXTURE_IMAGE_FORMAT;
		GL_W.GL_GET_TEXTURE_IMAGE_TYPE = org.lwjgl.opengl.GL43.GL_GET_TEXTURE_IMAGE_TYPE;
		GL_W.GL_MIPMAP = org.lwjgl.opengl.GL43.GL_MIPMAP;
		GL_W.GL_MANUAL_GENERATE_MIPMAP = org.lwjgl.opengl.GL43.GL_MANUAL_GENERATE_MIPMAP;
		GL_W.GL_AUTO_GENERATE_MIPMAP = org.lwjgl.opengl.GL43.GL_AUTO_GENERATE_MIPMAP;
		GL_W.GL_COLOR_ENCODING = org.lwjgl.opengl.GL43.GL_COLOR_ENCODING;
		GL_W.GL_SRGB_READ = org.lwjgl.opengl.GL43.GL_SRGB_READ;
		GL_W.GL_SRGB_WRITE = org.lwjgl.opengl.GL43.GL_SRGB_WRITE;
		GL_W.GL_FILTER = org.lwjgl.opengl.GL43.GL_FILTER;
		GL_W.GL_VERTEX_TEXTURE = org.lwjgl.opengl.GL43.GL_VERTEX_TEXTURE;
		GL_W.GL_TESS_CONTROL_TEXTURE = org.lwjgl.opengl.GL43.GL_TESS_CONTROL_TEXTURE;
		GL_W.GL_TESS_EVALUATION_TEXTURE = org.lwjgl.opengl.GL43.GL_TESS_EVALUATION_TEXTURE;
		GL_W.GL_GEOMETRY_TEXTURE = org.lwjgl.opengl.GL43.GL_GEOMETRY_TEXTURE;
		GL_W.GL_FRAGMENT_TEXTURE = org.lwjgl.opengl.GL43.GL_FRAGMENT_TEXTURE;
		GL_W.GL_COMPUTE_TEXTURE = org.lwjgl.opengl.GL43.GL_COMPUTE_TEXTURE;
		GL_W.GL_TEXTURE_SHADOW = org.lwjgl.opengl.GL43.GL_TEXTURE_SHADOW;
		GL_W.GL_TEXTURE_GATHER = org.lwjgl.opengl.GL43.GL_TEXTURE_GATHER;
		GL_W.GL_TEXTURE_GATHER_SHADOW = org.lwjgl.opengl.GL43.GL_TEXTURE_GATHER_SHADOW;
		GL_W.GL_SHADER_IMAGE_LOAD = org.lwjgl.opengl.GL43.GL_SHADER_IMAGE_LOAD;
		GL_W.GL_SHADER_IMAGE_STORE = org.lwjgl.opengl.GL43.GL_SHADER_IMAGE_STORE;
		GL_W.GL_SHADER_IMAGE_ATOMIC = org.lwjgl.opengl.GL43.GL_SHADER_IMAGE_ATOMIC;
		GL_W.GL_IMAGE_TEXEL_SIZE = org.lwjgl.opengl.GL43.GL_IMAGE_TEXEL_SIZE;
		GL_W.GL_IMAGE_COMPATIBILITY_CLASS = org.lwjgl.opengl.GL43.GL_IMAGE_COMPATIBILITY_CLASS;
		GL_W.GL_IMAGE_PIXEL_FORMAT = org.lwjgl.opengl.GL43.GL_IMAGE_PIXEL_FORMAT;
		GL_W.GL_IMAGE_PIXEL_TYPE = org.lwjgl.opengl.GL43.GL_IMAGE_PIXEL_TYPE;
		GL_W.GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_TEST = org.lwjgl.opengl.GL43.GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_TEST;
		GL_W.GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_TEST = org.lwjgl.opengl.GL43.GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_TEST;
		GL_W.GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_WRITE = org.lwjgl.opengl.GL43.GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_WRITE;
		GL_W.GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_WRITE = org.lwjgl.opengl.GL43.GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_WRITE;
		GL_W.GL_TEXTURE_COMPRESSED_BLOCK_WIDTH = org.lwjgl.opengl.GL43.GL_TEXTURE_COMPRESSED_BLOCK_WIDTH;
		GL_W.GL_TEXTURE_COMPRESSED_BLOCK_HEIGHT = org.lwjgl.opengl.GL43.GL_TEXTURE_COMPRESSED_BLOCK_HEIGHT;
		GL_W.GL_TEXTURE_COMPRESSED_BLOCK_SIZE = org.lwjgl.opengl.GL43.GL_TEXTURE_COMPRESSED_BLOCK_SIZE;
		GL_W.GL_CLEAR_BUFFER = org.lwjgl.opengl.GL43.GL_CLEAR_BUFFER;
		GL_W.GL_TEXTURE_VIEW = org.lwjgl.opengl.GL43.GL_TEXTURE_VIEW;
		GL_W.GL_VIEW_COMPATIBILITY_CLASS = org.lwjgl.opengl.GL43.GL_VIEW_COMPATIBILITY_CLASS;
		GL_W.GL_FULL_SUPPORT = org.lwjgl.opengl.GL43.GL_FULL_SUPPORT;
		GL_W.GL_CAVEAT_SUPPORT = org.lwjgl.opengl.GL43.GL_CAVEAT_SUPPORT;
		GL_W.GL_IMAGE_CLASS_4_X_32 = org.lwjgl.opengl.GL43.GL_IMAGE_CLASS_4_X_32;
		GL_W.GL_IMAGE_CLASS_2_X_32 = org.lwjgl.opengl.GL43.GL_IMAGE_CLASS_2_X_32;
		GL_W.GL_IMAGE_CLASS_1_X_32 = org.lwjgl.opengl.GL43.GL_IMAGE_CLASS_1_X_32;
		GL_W.GL_IMAGE_CLASS_4_X_16 = org.lwjgl.opengl.GL43.GL_IMAGE_CLASS_4_X_16;
		GL_W.GL_IMAGE_CLASS_2_X_16 = org.lwjgl.opengl.GL43.GL_IMAGE_CLASS_2_X_16;
		GL_W.GL_IMAGE_CLASS_1_X_16 = org.lwjgl.opengl.GL43.GL_IMAGE_CLASS_1_X_16;
		GL_W.GL_IMAGE_CLASS_4_X_8 = org.lwjgl.opengl.GL43.GL_IMAGE_CLASS_4_X_8;
		GL_W.GL_IMAGE_CLASS_2_X_8 = org.lwjgl.opengl.GL43.GL_IMAGE_CLASS_2_X_8;
		GL_W.GL_IMAGE_CLASS_1_X_8 = org.lwjgl.opengl.GL43.GL_IMAGE_CLASS_1_X_8;
		GL_W.GL_IMAGE_CLASS_11_11_10 = org.lwjgl.opengl.GL43.GL_IMAGE_CLASS_11_11_10;
		GL_W.GL_IMAGE_CLASS_10_10_10_2 = org.lwjgl.opengl.GL43.GL_IMAGE_CLASS_10_10_10_2;
		GL_W.GL_VIEW_CLASS_128_BITS = org.lwjgl.opengl.GL43.GL_VIEW_CLASS_128_BITS;
		GL_W.GL_VIEW_CLASS_96_BITS = org.lwjgl.opengl.GL43.GL_VIEW_CLASS_96_BITS;
		GL_W.GL_VIEW_CLASS_64_BITS = org.lwjgl.opengl.GL43.GL_VIEW_CLASS_64_BITS;
		GL_W.GL_VIEW_CLASS_48_BITS = org.lwjgl.opengl.GL43.GL_VIEW_CLASS_48_BITS;
		GL_W.GL_VIEW_CLASS_32_BITS = org.lwjgl.opengl.GL43.GL_VIEW_CLASS_32_BITS;
		GL_W.GL_VIEW_CLASS_24_BITS = org.lwjgl.opengl.GL43.GL_VIEW_CLASS_24_BITS;
		GL_W.GL_VIEW_CLASS_16_BITS = org.lwjgl.opengl.GL43.GL_VIEW_CLASS_16_BITS;
		GL_W.GL_VIEW_CLASS_8_BITS = org.lwjgl.opengl.GL43.GL_VIEW_CLASS_8_BITS;
		GL_W.GL_VIEW_CLASS_S3TC_DXT1_RGB = org.lwjgl.opengl.GL43.GL_VIEW_CLASS_S3TC_DXT1_RGB;
		GL_W.GL_VIEW_CLASS_S3TC_DXT1_RGBA = org.lwjgl.opengl.GL43.GL_VIEW_CLASS_S3TC_DXT1_RGBA;
		GL_W.GL_VIEW_CLASS_S3TC_DXT3_RGBA = org.lwjgl.opengl.GL43.GL_VIEW_CLASS_S3TC_DXT3_RGBA;
		GL_W.GL_VIEW_CLASS_S3TC_DXT5_RGBA = org.lwjgl.opengl.GL43.GL_VIEW_CLASS_S3TC_DXT5_RGBA;
		GL_W.GL_VIEW_CLASS_RGTC1_RED = org.lwjgl.opengl.GL43.GL_VIEW_CLASS_RGTC1_RED;
		GL_W.GL_VIEW_CLASS_RGTC2_RG = org.lwjgl.opengl.GL43.GL_VIEW_CLASS_RGTC2_RG;
		GL_W.GL_VIEW_CLASS_BPTC_UNORM = org.lwjgl.opengl.GL43.GL_VIEW_CLASS_BPTC_UNORM;
		GL_W.GL_VIEW_CLASS_BPTC_FLOAT = org.lwjgl.opengl.GL43.GL_VIEW_CLASS_BPTC_FLOAT;
		GL_W.GL_UNIFORM = org.lwjgl.opengl.GL43.GL_UNIFORM;
		GL_W.GL_UNIFORM_BLOCK = org.lwjgl.opengl.GL43.GL_UNIFORM_BLOCK;
		GL_W.GL_PROGRAM_INPUT = org.lwjgl.opengl.GL43.GL_PROGRAM_INPUT;
		GL_W.GL_PROGRAM_OUTPUT = org.lwjgl.opengl.GL43.GL_PROGRAM_OUTPUT;
		GL_W.GL_BUFFER_VARIABLE = org.lwjgl.opengl.GL43.GL_BUFFER_VARIABLE;
		GL_W.GL_SHADER_STORAGE_BLOCK = org.lwjgl.opengl.GL43.GL_SHADER_STORAGE_BLOCK;
		GL_W.GL_VERTEX_SUBROUTINE = org.lwjgl.opengl.GL43.GL_VERTEX_SUBROUTINE;
		GL_W.GL_TESS_CONTROL_SUBROUTINE = org.lwjgl.opengl.GL43.GL_TESS_CONTROL_SUBROUTINE;
		GL_W.GL_TESS_EVALUATION_SUBROUTINE = org.lwjgl.opengl.GL43.GL_TESS_EVALUATION_SUBROUTINE;
		GL_W.GL_GEOMETRY_SUBROUTINE = org.lwjgl.opengl.GL43.GL_GEOMETRY_SUBROUTINE;
		GL_W.GL_FRAGMENT_SUBROUTINE = org.lwjgl.opengl.GL43.GL_FRAGMENT_SUBROUTINE;
		GL_W.GL_COMPUTE_SUBROUTINE = org.lwjgl.opengl.GL43.GL_COMPUTE_SUBROUTINE;
		GL_W.GL_VERTEX_SUBROUTINE_UNIFORM = org.lwjgl.opengl.GL43.GL_VERTEX_SUBROUTINE_UNIFORM;
		GL_W.GL_TESS_CONTROL_SUBROUTINE_UNIFORM = org.lwjgl.opengl.GL43.GL_TESS_CONTROL_SUBROUTINE_UNIFORM;
		GL_W.GL_TESS_EVALUATION_SUBROUTINE_UNIFORM = org.lwjgl.opengl.GL43.GL_TESS_EVALUATION_SUBROUTINE_UNIFORM;
		GL_W.GL_GEOMETRY_SUBROUTINE_UNIFORM = org.lwjgl.opengl.GL43.GL_GEOMETRY_SUBROUTINE_UNIFORM;
		GL_W.GL_FRAGMENT_SUBROUTINE_UNIFORM = org.lwjgl.opengl.GL43.GL_FRAGMENT_SUBROUTINE_UNIFORM;
		GL_W.GL_COMPUTE_SUBROUTINE_UNIFORM = org.lwjgl.opengl.GL43.GL_COMPUTE_SUBROUTINE_UNIFORM;
		GL_W.GL_TRANSFORM_FEEDBACK_VARYING = org.lwjgl.opengl.GL43.GL_TRANSFORM_FEEDBACK_VARYING;
		GL_W.GL_ACTIVE_RESOURCES = org.lwjgl.opengl.GL43.GL_ACTIVE_RESOURCES;
		GL_W.GL_MAX_NAME_LENGTH = org.lwjgl.opengl.GL43.GL_MAX_NAME_LENGTH;
		GL_W.GL_MAX_NUM_ACTIVE_VARIABLES = org.lwjgl.opengl.GL43.GL_MAX_NUM_ACTIVE_VARIABLES;
		GL_W.GL_MAX_NUM_COMPATIBLE_SUBROUTINES = org.lwjgl.opengl.GL43.GL_MAX_NUM_COMPATIBLE_SUBROUTINES;
		GL_W.GL_NAME_LENGTH = org.lwjgl.opengl.GL43.GL_NAME_LENGTH;
		GL_W.GL_TYPE = org.lwjgl.opengl.GL43.GL_TYPE;
		GL_W.GL_ARRAY_SIZE = org.lwjgl.opengl.GL43.GL_ARRAY_SIZE;
		GL_W.GL_OFFSET = org.lwjgl.opengl.GL43.GL_OFFSET;
		GL_W.GL_BLOCK_INDEX = org.lwjgl.opengl.GL43.GL_BLOCK_INDEX;
		GL_W.GL_ARRAY_STRIDE = org.lwjgl.opengl.GL43.GL_ARRAY_STRIDE;
		GL_W.GL_MATRIX_STRIDE = org.lwjgl.opengl.GL43.GL_MATRIX_STRIDE;
		GL_W.GL_IS_ROW_MAJOR = org.lwjgl.opengl.GL43.GL_IS_ROW_MAJOR;
		GL_W.GL_ATOMIC_COUNTER_BUFFER_INDEX = org.lwjgl.opengl.GL43.GL_ATOMIC_COUNTER_BUFFER_INDEX;
		GL_W.GL_BUFFER_BINDING = org.lwjgl.opengl.GL43.GL_BUFFER_BINDING;
		GL_W.GL_BUFFER_DATA_SIZE = org.lwjgl.opengl.GL43.GL_BUFFER_DATA_SIZE;
		GL_W.GL_NUM_ACTIVE_VARIABLES = org.lwjgl.opengl.GL43.GL_NUM_ACTIVE_VARIABLES;
		GL_W.GL_ACTIVE_VARIABLES = org.lwjgl.opengl.GL43.GL_ACTIVE_VARIABLES;
		GL_W.GL_REFERENCED_BY_VERTEX_SHADER = org.lwjgl.opengl.GL43.GL_REFERENCED_BY_VERTEX_SHADER;
		GL_W.GL_REFERENCED_BY_TESS_CONTROL_SHADER = org.lwjgl.opengl.GL43.GL_REFERENCED_BY_TESS_CONTROL_SHADER;
		GL_W.GL_REFERENCED_BY_TESS_EVALUATION_SHADER = org.lwjgl.opengl.GL43.GL_REFERENCED_BY_TESS_EVALUATION_SHADER;
		GL_W.GL_REFERENCED_BY_GEOMETRY_SHADER = org.lwjgl.opengl.GL43.GL_REFERENCED_BY_GEOMETRY_SHADER;
		GL_W.GL_REFERENCED_BY_FRAGMENT_SHADER = org.lwjgl.opengl.GL43.GL_REFERENCED_BY_FRAGMENT_SHADER;
		GL_W.GL_REFERENCED_BY_COMPUTE_SHADER = org.lwjgl.opengl.GL43.GL_REFERENCED_BY_COMPUTE_SHADER;
		GL_W.GL_TOP_LEVEL_ARRAY_SIZE = org.lwjgl.opengl.GL43.GL_TOP_LEVEL_ARRAY_SIZE;
		GL_W.GL_TOP_LEVEL_ARRAY_STRIDE = org.lwjgl.opengl.GL43.GL_TOP_LEVEL_ARRAY_STRIDE;
		GL_W.GL_LOCATION = org.lwjgl.opengl.GL43.GL_LOCATION;
		GL_W.GL_LOCATION_INDEX = org.lwjgl.opengl.GL43.GL_LOCATION_INDEX;
		GL_W.GL_IS_PER_PATCH = org.lwjgl.opengl.GL43.GL_IS_PER_PATCH;
		GL_W.GL_SHADER_STORAGE_BUFFER = org.lwjgl.opengl.GL43.GL_SHADER_STORAGE_BUFFER;
		GL_W.GL_SHADER_STORAGE_BUFFER_BINDING = org.lwjgl.opengl.GL43.GL_SHADER_STORAGE_BUFFER_BINDING;
		GL_W.GL_SHADER_STORAGE_BUFFER_START = org.lwjgl.opengl.GL43.GL_SHADER_STORAGE_BUFFER_START;
		GL_W.GL_SHADER_STORAGE_BUFFER_SIZE = org.lwjgl.opengl.GL43.GL_SHADER_STORAGE_BUFFER_SIZE;
		GL_W.GL_MAX_VERTEX_SHADER_STORAGE_BLOCKS = org.lwjgl.opengl.GL43.GL_MAX_VERTEX_SHADER_STORAGE_BLOCKS;
		GL_W.GL_MAX_GEOMETRY_SHADER_STORAGE_BLOCKS = org.lwjgl.opengl.GL43.GL_MAX_GEOMETRY_SHADER_STORAGE_BLOCKS;
		GL_W.GL_MAX_TESS_CONTROL_SHADER_STORAGE_BLOCKS = org.lwjgl.opengl.GL43.GL_MAX_TESS_CONTROL_SHADER_STORAGE_BLOCKS;
		GL_W.GL_MAX_TESS_EVALUATION_SHADER_STORAGE_BLOCKS = org.lwjgl.opengl.GL43.GL_MAX_TESS_EVALUATION_SHADER_STORAGE_BLOCKS;
		GL_W.GL_MAX_FRAGMENT_SHADER_STORAGE_BLOCKS = org.lwjgl.opengl.GL43.GL_MAX_FRAGMENT_SHADER_STORAGE_BLOCKS;
		GL_W.GL_MAX_COMPUTE_SHADER_STORAGE_BLOCKS = org.lwjgl.opengl.GL43.GL_MAX_COMPUTE_SHADER_STORAGE_BLOCKS;
		GL_W.GL_MAX_COMBINED_SHADER_STORAGE_BLOCKS = org.lwjgl.opengl.GL43.GL_MAX_COMBINED_SHADER_STORAGE_BLOCKS;
		GL_W.GL_MAX_SHADER_STORAGE_BUFFER_BINDINGS = org.lwjgl.opengl.GL43.GL_MAX_SHADER_STORAGE_BUFFER_BINDINGS;
		GL_W.GL_MAX_SHADER_STORAGE_BLOCK_SIZE = org.lwjgl.opengl.GL43.GL_MAX_SHADER_STORAGE_BLOCK_SIZE;
		GL_W.GL_SHADER_STORAGE_BUFFER_OFFSET_ALIGNMENT = org.lwjgl.opengl.GL43.GL_SHADER_STORAGE_BUFFER_OFFSET_ALIGNMENT;
		GL_W.GL_SHADER_STORAGE_BARRIER_BIT = org.lwjgl.opengl.GL43.GL_SHADER_STORAGE_BARRIER_BIT;
		GL_W.GL_MAX_COMBINED_SHADER_OUTPUT_RESOURCES = org.lwjgl.opengl.GL43.GL_MAX_COMBINED_SHADER_OUTPUT_RESOURCES;
		GL_W.GL_DEPTH_STENCIL_TEXTURE_MODE = org.lwjgl.opengl.GL43.GL_DEPTH_STENCIL_TEXTURE_MODE;
		GL_W.GL_TEXTURE_BUFFER_OFFSET = org.lwjgl.opengl.GL43.GL_TEXTURE_BUFFER_OFFSET;
		GL_W.GL_TEXTURE_BUFFER_SIZE = org.lwjgl.opengl.GL43.GL_TEXTURE_BUFFER_SIZE;
		GL_W.GL_TEXTURE_BUFFER_OFFSET_ALIGNMENT = org.lwjgl.opengl.GL43.GL_TEXTURE_BUFFER_OFFSET_ALIGNMENT;
		GL_W.GL_TEXTURE_VIEW_MIN_LEVEL = org.lwjgl.opengl.GL43.GL_TEXTURE_VIEW_MIN_LEVEL;
		GL_W.GL_TEXTURE_VIEW_NUM_LEVELS = org.lwjgl.opengl.GL43.GL_TEXTURE_VIEW_NUM_LEVELS;
		GL_W.GL_TEXTURE_VIEW_MIN_LAYER = org.lwjgl.opengl.GL43.GL_TEXTURE_VIEW_MIN_LAYER;
		GL_W.GL_TEXTURE_VIEW_NUM_LAYERS = org.lwjgl.opengl.GL43.GL_TEXTURE_VIEW_NUM_LAYERS;
		GL_W.GL_VERTEX_ATTRIB_BINDING = org.lwjgl.opengl.GL43.GL_VERTEX_ATTRIB_BINDING;
		GL_W.GL_VERTEX_ATTRIB_RELATIVE_OFFSET = org.lwjgl.opengl.GL43.GL_VERTEX_ATTRIB_RELATIVE_OFFSET;
		GL_W.GL_VERTEX_BINDING_DIVISOR = org.lwjgl.opengl.GL43.GL_VERTEX_BINDING_DIVISOR;
		GL_W.GL_VERTEX_BINDING_OFFSET = org.lwjgl.opengl.GL43.GL_VERTEX_BINDING_OFFSET;
		GL_W.GL_VERTEX_BINDING_STRIDE = org.lwjgl.opengl.GL43.GL_VERTEX_BINDING_STRIDE;
		GL_W.GL_VERTEX_BINDING_BUFFER = org.lwjgl.opengl.GL43.GL_VERTEX_BINDING_BUFFER;
		GL_W.GL_MAX_VERTEX_ATTRIB_RELATIVE_OFFSET = org.lwjgl.opengl.GL43.GL_MAX_VERTEX_ATTRIB_RELATIVE_OFFSET;
		GL_W.GL_MAX_VERTEX_ATTRIB_BINDINGS = org.lwjgl.opengl.GL43.GL_MAX_VERTEX_ATTRIB_BINDINGS;
		GL_W.GL_COPY_READ_BUFFER_BINDING = org.lwjgl.opengl.GL43.GL_COPY_READ_BUFFER_BINDING;
		GL_W.GL_COPY_WRITE_BUFFER_BINDING = org.lwjgl.opengl.GL43.GL_COPY_WRITE_BUFFER_BINDING;
		GL_W.GL_TRANSFORM_FEEDBACK_ACTIVE = org.lwjgl.opengl.GL43.GL_TRANSFORM_FEEDBACK_ACTIVE;
		GL_W.GL_TRANSFORM_FEEDBACK_PAUSED = org.lwjgl.opengl.GL43.GL_TRANSFORM_FEEDBACK_PAUSED;
		GL_W.GL_COMPRESSED_RGBA_BPTC_UNORM = org.lwjgl.opengl.GL43.GL_COMPRESSED_RGBA_BPTC_UNORM;
		GL_W.GL_COMPRESSED_SRGB_ALPHA_BPTC_UNORM = org.lwjgl.opengl.GL43.GL_COMPRESSED_SRGB_ALPHA_BPTC_UNORM;
		GL_W.GL_COMPRESSED_RGB_BPTC_SIGNED_FLOAT = org.lwjgl.opengl.GL43.GL_COMPRESSED_RGB_BPTC_SIGNED_FLOAT;
		GL_W.GL_COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT = org.lwjgl.opengl.GL43.GL_COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT;
		GL_W.GL_UNPACK_COMPRESSED_BLOCK_WIDTH = org.lwjgl.opengl.GL43.GL_UNPACK_COMPRESSED_BLOCK_WIDTH;
		GL_W.GL_UNPACK_COMPRESSED_BLOCK_HEIGHT = org.lwjgl.opengl.GL43.GL_UNPACK_COMPRESSED_BLOCK_HEIGHT;
		GL_W.GL_UNPACK_COMPRESSED_BLOCK_DEPTH = org.lwjgl.opengl.GL43.GL_UNPACK_COMPRESSED_BLOCK_DEPTH;
		GL_W.GL_UNPACK_COMPRESSED_BLOCK_SIZE = org.lwjgl.opengl.GL43.GL_UNPACK_COMPRESSED_BLOCK_SIZE;
		GL_W.GL_PACK_COMPRESSED_BLOCK_WIDTH = org.lwjgl.opengl.GL43.GL_PACK_COMPRESSED_BLOCK_WIDTH;
		GL_W.GL_PACK_COMPRESSED_BLOCK_HEIGHT = org.lwjgl.opengl.GL43.GL_PACK_COMPRESSED_BLOCK_HEIGHT;
		GL_W.GL_PACK_COMPRESSED_BLOCK_DEPTH = org.lwjgl.opengl.GL43.GL_PACK_COMPRESSED_BLOCK_DEPTH;
		GL_W.GL_PACK_COMPRESSED_BLOCK_SIZE = org.lwjgl.opengl.GL43.GL_PACK_COMPRESSED_BLOCK_SIZE;
		GL_W.GL_ATOMIC_COUNTER_BUFFER = org.lwjgl.opengl.GL43.GL_ATOMIC_COUNTER_BUFFER;
		GL_W.GL_ATOMIC_COUNTER_BUFFER_BINDING = org.lwjgl.opengl.GL43.GL_ATOMIC_COUNTER_BUFFER_BINDING;
		GL_W.GL_ATOMIC_COUNTER_BUFFER_START = org.lwjgl.opengl.GL43.GL_ATOMIC_COUNTER_BUFFER_START;
		GL_W.GL_ATOMIC_COUNTER_BUFFER_SIZE = org.lwjgl.opengl.GL43.GL_ATOMIC_COUNTER_BUFFER_SIZE;
		GL_W.GL_ATOMIC_COUNTER_BUFFER_DATA_SIZE = org.lwjgl.opengl.GL43.GL_ATOMIC_COUNTER_BUFFER_DATA_SIZE;
		GL_W.GL_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTERS = org.lwjgl.opengl.GL43.GL_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTERS;
		GL_W.GL_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTER_INDICES = org.lwjgl.opengl.GL43.GL_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTER_INDICES;
		GL_W.GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_VERTEX_SHADER = org.lwjgl.opengl.GL43.GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_VERTEX_SHADER;
		GL_W.GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_CONTROL_SHADER = org.lwjgl.opengl.GL43.GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_CONTROL_SHADER;
		GL_W.GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_EVALUATION_SHADER = org.lwjgl.opengl.GL43.GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_EVALUATION_SHADER;
		GL_W.GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_GEOMETRY_SHADER = org.lwjgl.opengl.GL43.GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_GEOMETRY_SHADER;
		GL_W.GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_FRAGMENT_SHADER = org.lwjgl.opengl.GL43.GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_FRAGMENT_SHADER;
		GL_W.GL_MAX_VERTEX_ATOMIC_COUNTER_BUFFERS = org.lwjgl.opengl.GL43.GL_MAX_VERTEX_ATOMIC_COUNTER_BUFFERS;
		GL_W.GL_MAX_TESS_CONTROL_ATOMIC_COUNTER_BUFFERS = org.lwjgl.opengl.GL43.GL_MAX_TESS_CONTROL_ATOMIC_COUNTER_BUFFERS;
		GL_W.GL_MAX_TESS_EVALUATION_ATOMIC_COUNTER_BUFFERS = org.lwjgl.opengl.GL43.GL_MAX_TESS_EVALUATION_ATOMIC_COUNTER_BUFFERS;
		GL_W.GL_MAX_GEOMETRY_ATOMIC_COUNTER_BUFFERS = org.lwjgl.opengl.GL43.GL_MAX_GEOMETRY_ATOMIC_COUNTER_BUFFERS;
		GL_W.GL_MAX_FRAGMENT_ATOMIC_COUNTER_BUFFERS = org.lwjgl.opengl.GL43.GL_MAX_FRAGMENT_ATOMIC_COUNTER_BUFFERS;
		GL_W.GL_MAX_COMBINED_ATOMIC_COUNTER_BUFFERS = org.lwjgl.opengl.GL43.GL_MAX_COMBINED_ATOMIC_COUNTER_BUFFERS;
		GL_W.GL_MAX_VERTEX_ATOMIC_COUNTERS = org.lwjgl.opengl.GL43.GL_MAX_VERTEX_ATOMIC_COUNTERS;
		GL_W.GL_MAX_TESS_CONTROL_ATOMIC_COUNTERS = org.lwjgl.opengl.GL43.GL_MAX_TESS_CONTROL_ATOMIC_COUNTERS;
		GL_W.GL_MAX_TESS_EVALUATION_ATOMIC_COUNTERS = org.lwjgl.opengl.GL43.GL_MAX_TESS_EVALUATION_ATOMIC_COUNTERS;
		GL_W.GL_MAX_GEOMETRY_ATOMIC_COUNTERS = org.lwjgl.opengl.GL43.GL_MAX_GEOMETRY_ATOMIC_COUNTERS;
		GL_W.GL_MAX_FRAGMENT_ATOMIC_COUNTERS = org.lwjgl.opengl.GL43.GL_MAX_FRAGMENT_ATOMIC_COUNTERS;
		GL_W.GL_MAX_COMBINED_ATOMIC_COUNTERS = org.lwjgl.opengl.GL43.GL_MAX_COMBINED_ATOMIC_COUNTERS;
		GL_W.GL_MAX_ATOMIC_COUNTER_BUFFER_SIZE = org.lwjgl.opengl.GL43.GL_MAX_ATOMIC_COUNTER_BUFFER_SIZE;
		GL_W.GL_MAX_ATOMIC_COUNTER_BUFFER_BINDINGS = org.lwjgl.opengl.GL43.GL_MAX_ATOMIC_COUNTER_BUFFER_BINDINGS;
		GL_W.GL_ACTIVE_ATOMIC_COUNTER_BUFFERS = org.lwjgl.opengl.GL43.GL_ACTIVE_ATOMIC_COUNTER_BUFFERS;
		GL_W.GL_UNIFORM_ATOMIC_COUNTER_BUFFER_INDEX = org.lwjgl.opengl.GL43.GL_UNIFORM_ATOMIC_COUNTER_BUFFER_INDEX;
		GL_W.GL_UNSIGNED_INT_ATOMIC_COUNTER = org.lwjgl.opengl.GL43.GL_UNSIGNED_INT_ATOMIC_COUNTER;
		GL_W.GL_TEXTURE_IMMUTABLE_FORMAT = org.lwjgl.opengl.GL43.GL_TEXTURE_IMMUTABLE_FORMAT;
		GL_W.GL_MAX_IMAGE_UNITS = org.lwjgl.opengl.GL43.GL_MAX_IMAGE_UNITS;
		GL_W.GL_MAX_COMBINED_IMAGE_UNITS_AND_FRAGMENT_OUTPUTS = org.lwjgl.opengl.GL43.GL_MAX_COMBINED_IMAGE_UNITS_AND_FRAGMENT_OUTPUTS;
		GL_W.GL_MAX_IMAGE_SAMPLES = org.lwjgl.opengl.GL43.GL_MAX_IMAGE_SAMPLES;
		GL_W.GL_MAX_VERTEX_IMAGE_UNIFORMS = org.lwjgl.opengl.GL43.GL_MAX_VERTEX_IMAGE_UNIFORMS;
		GL_W.GL_MAX_TESS_CONTROL_IMAGE_UNIFORMS = org.lwjgl.opengl.GL43.GL_MAX_TESS_CONTROL_IMAGE_UNIFORMS;
		GL_W.GL_MAX_TESS_EVALUATION_IMAGE_UNIFORMS = org.lwjgl.opengl.GL43.GL_MAX_TESS_EVALUATION_IMAGE_UNIFORMS;
		GL_W.GL_MAX_GEOMETRY_IMAGE_UNIFORMS = org.lwjgl.opengl.GL43.GL_MAX_GEOMETRY_IMAGE_UNIFORMS;
		GL_W.GL_MAX_FRAGMENT_IMAGE_UNIFORMS = org.lwjgl.opengl.GL43.GL_MAX_FRAGMENT_IMAGE_UNIFORMS;
		GL_W.GL_MAX_COMBINED_IMAGE_UNIFORMS = org.lwjgl.opengl.GL43.GL_MAX_COMBINED_IMAGE_UNIFORMS;
		GL_W.GL_IMAGE_BINDING_NAME = org.lwjgl.opengl.GL43.GL_IMAGE_BINDING_NAME;
		GL_W.GL_IMAGE_BINDING_LEVEL = org.lwjgl.opengl.GL43.GL_IMAGE_BINDING_LEVEL;
		GL_W.GL_IMAGE_BINDING_LAYERED = org.lwjgl.opengl.GL43.GL_IMAGE_BINDING_LAYERED;
		GL_W.GL_IMAGE_BINDING_LAYER = org.lwjgl.opengl.GL43.GL_IMAGE_BINDING_LAYER;
		GL_W.GL_IMAGE_BINDING_ACCESS = org.lwjgl.opengl.GL43.GL_IMAGE_BINDING_ACCESS;
		GL_W.GL_IMAGE_BINDING_FORMAT = org.lwjgl.opengl.GL43.GL_IMAGE_BINDING_FORMAT;
		GL_W.GL_VERTEX_ATTRIB_ARRAY_BARRIER_BIT = org.lwjgl.opengl.GL43.GL_VERTEX_ATTRIB_ARRAY_BARRIER_BIT;
		GL_W.GL_ELEMENT_ARRAY_BARRIER_BIT = org.lwjgl.opengl.GL43.GL_ELEMENT_ARRAY_BARRIER_BIT;
		GL_W.GL_UNIFORM_BARRIER_BIT = org.lwjgl.opengl.GL43.GL_UNIFORM_BARRIER_BIT;
		GL_W.GL_TEXTURE_FETCH_BARRIER_BIT = org.lwjgl.opengl.GL43.GL_TEXTURE_FETCH_BARRIER_BIT;
		GL_W.GL_SHADER_IMAGE_ACCESS_BARRIER_BIT = org.lwjgl.opengl.GL43.GL_SHADER_IMAGE_ACCESS_BARRIER_BIT;
		GL_W.GL_COMMAND_BARRIER_BIT = org.lwjgl.opengl.GL43.GL_COMMAND_BARRIER_BIT;
		GL_W.GL_PIXEL_BUFFER_BARRIER_BIT = org.lwjgl.opengl.GL43.GL_PIXEL_BUFFER_BARRIER_BIT;
		GL_W.GL_TEXTURE_UPDATE_BARRIER_BIT = org.lwjgl.opengl.GL43.GL_TEXTURE_UPDATE_BARRIER_BIT;
		GL_W.GL_BUFFER_UPDATE_BARRIER_BIT = org.lwjgl.opengl.GL43.GL_BUFFER_UPDATE_BARRIER_BIT;
		GL_W.GL_FRAMEBUFFER_BARRIER_BIT = org.lwjgl.opengl.GL43.GL_FRAMEBUFFER_BARRIER_BIT;
		GL_W.GL_TRANSFORM_FEEDBACK_BARRIER_BIT = org.lwjgl.opengl.GL43.GL_TRANSFORM_FEEDBACK_BARRIER_BIT;
		GL_W.GL_ATOMIC_COUNTER_BARRIER_BIT = org.lwjgl.opengl.GL43.GL_ATOMIC_COUNTER_BARRIER_BIT;
		GL_W.GL_ALL_BARRIER_BITS = org.lwjgl.opengl.GL43.GL_ALL_BARRIER_BITS;
		GL_W.GL_IMAGE_1D = org.lwjgl.opengl.GL43.GL_IMAGE_1D;
		GL_W.GL_IMAGE_2D = org.lwjgl.opengl.GL43.GL_IMAGE_2D;
		GL_W.GL_IMAGE_3D = org.lwjgl.opengl.GL43.GL_IMAGE_3D;
		GL_W.GL_IMAGE_2D_RECT = org.lwjgl.opengl.GL43.GL_IMAGE_2D_RECT;
		GL_W.GL_IMAGE_CUBE = org.lwjgl.opengl.GL43.GL_IMAGE_CUBE;
		GL_W.GL_IMAGE_BUFFER = org.lwjgl.opengl.GL43.GL_IMAGE_BUFFER;
		GL_W.GL_IMAGE_1D_ARRAY = org.lwjgl.opengl.GL43.GL_IMAGE_1D_ARRAY;
		GL_W.GL_IMAGE_2D_ARRAY = org.lwjgl.opengl.GL43.GL_IMAGE_2D_ARRAY;
		GL_W.GL_IMAGE_CUBE_MAP_ARRAY = org.lwjgl.opengl.GL43.GL_IMAGE_CUBE_MAP_ARRAY;
		GL_W.GL_IMAGE_2D_MULTISAMPLE = org.lwjgl.opengl.GL43.GL_IMAGE_2D_MULTISAMPLE;
		GL_W.GL_IMAGE_2D_MULTISAMPLE_ARRAY = org.lwjgl.opengl.GL43.GL_IMAGE_2D_MULTISAMPLE_ARRAY;
		GL_W.GL_INT_IMAGE_1D = org.lwjgl.opengl.GL43.GL_INT_IMAGE_1D;
		GL_W.GL_INT_IMAGE_2D = org.lwjgl.opengl.GL43.GL_INT_IMAGE_2D;
		GL_W.GL_INT_IMAGE_3D = org.lwjgl.opengl.GL43.GL_INT_IMAGE_3D;
		GL_W.GL_INT_IMAGE_2D_RECT = org.lwjgl.opengl.GL43.GL_INT_IMAGE_2D_RECT;
		GL_W.GL_INT_IMAGE_CUBE = org.lwjgl.opengl.GL43.GL_INT_IMAGE_CUBE;
		GL_W.GL_INT_IMAGE_BUFFER = org.lwjgl.opengl.GL43.GL_INT_IMAGE_BUFFER;
		GL_W.GL_INT_IMAGE_1D_ARRAY = org.lwjgl.opengl.GL43.GL_INT_IMAGE_1D_ARRAY;
		GL_W.GL_INT_IMAGE_2D_ARRAY = org.lwjgl.opengl.GL43.GL_INT_IMAGE_2D_ARRAY;
		GL_W.GL_INT_IMAGE_CUBE_MAP_ARRAY = org.lwjgl.opengl.GL43.GL_INT_IMAGE_CUBE_MAP_ARRAY;
		GL_W.GL_INT_IMAGE_2D_MULTISAMPLE = org.lwjgl.opengl.GL43.GL_INT_IMAGE_2D_MULTISAMPLE;
		GL_W.GL_INT_IMAGE_2D_MULTISAMPLE_ARRAY = org.lwjgl.opengl.GL43.GL_INT_IMAGE_2D_MULTISAMPLE_ARRAY;
		GL_W.GL_UNSIGNED_INT_IMAGE_1D = org.lwjgl.opengl.GL43.GL_UNSIGNED_INT_IMAGE_1D;
		GL_W.GL_UNSIGNED_INT_IMAGE_2D = org.lwjgl.opengl.GL43.GL_UNSIGNED_INT_IMAGE_2D;
		GL_W.GL_UNSIGNED_INT_IMAGE_3D = org.lwjgl.opengl.GL43.GL_UNSIGNED_INT_IMAGE_3D;
		GL_W.GL_UNSIGNED_INT_IMAGE_2D_RECT = org.lwjgl.opengl.GL43.GL_UNSIGNED_INT_IMAGE_2D_RECT;
		GL_W.GL_UNSIGNED_INT_IMAGE_CUBE = org.lwjgl.opengl.GL43.GL_UNSIGNED_INT_IMAGE_CUBE;
		GL_W.GL_UNSIGNED_INT_IMAGE_BUFFER = org.lwjgl.opengl.GL43.GL_UNSIGNED_INT_IMAGE_BUFFER;
		GL_W.GL_UNSIGNED_INT_IMAGE_1D_ARRAY = org.lwjgl.opengl.GL43.GL_UNSIGNED_INT_IMAGE_1D_ARRAY;
		GL_W.GL_UNSIGNED_INT_IMAGE_2D_ARRAY = org.lwjgl.opengl.GL43.GL_UNSIGNED_INT_IMAGE_2D_ARRAY;
		GL_W.GL_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY = org.lwjgl.opengl.GL43.GL_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY;
		GL_W.GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE = org.lwjgl.opengl.GL43.GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE;
		GL_W.GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_ARRAY = org.lwjgl.opengl.GL43.GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_ARRAY;
		GL_W.GL_IMAGE_FORMAT_COMPATIBILITY_TYPE = org.lwjgl.opengl.GL43.GL_IMAGE_FORMAT_COMPATIBILITY_TYPE;
		GL_W.GL_IMAGE_FORMAT_COMPATIBILITY_BY_SIZE = org.lwjgl.opengl.GL43.GL_IMAGE_FORMAT_COMPATIBILITY_BY_SIZE;
		GL_W.GL_IMAGE_FORMAT_COMPATIBILITY_BY_CLASS = org.lwjgl.opengl.GL43.GL_IMAGE_FORMAT_COMPATIBILITY_BY_CLASS;
		GL_W.GL_NUM_SAMPLE_COUNTS = org.lwjgl.opengl.GL43.GL_NUM_SAMPLE_COUNTS;
		GL_W.GL_MIN_MAP_BUFFER_ALIGNMENT = org.lwjgl.opengl.GL43.GL_MIN_MAP_BUFFER_ALIGNMENT;
		GL_W.GL_SHADER_COMPILER = org.lwjgl.opengl.GL43.GL_SHADER_COMPILER;
		GL_W.GL_SHADER_BINARY_FORMATS = org.lwjgl.opengl.GL43.GL_SHADER_BINARY_FORMATS;
		GL_W.GL_NUM_SHADER_BINARY_FORMATS = org.lwjgl.opengl.GL43.GL_NUM_SHADER_BINARY_FORMATS;
		GL_W.GL_MAX_VERTEX_UNIFORM_VECTORS = org.lwjgl.opengl.GL43.GL_MAX_VERTEX_UNIFORM_VECTORS;
		GL_W.GL_MAX_VARYING_VECTORS = org.lwjgl.opengl.GL43.GL_MAX_VARYING_VECTORS;
		GL_W.GL_MAX_FRAGMENT_UNIFORM_VECTORS = org.lwjgl.opengl.GL43.GL_MAX_FRAGMENT_UNIFORM_VECTORS;
		GL_W.GL_IMPLEMENTATION_COLOR_READ_TYPE = org.lwjgl.opengl.GL43.GL_IMPLEMENTATION_COLOR_READ_TYPE;
		GL_W.GL_IMPLEMENTATION_COLOR_READ_FORMAT = org.lwjgl.opengl.GL43.GL_IMPLEMENTATION_COLOR_READ_FORMAT;
		GL_W.GL_FIXED = org.lwjgl.opengl.GL43.GL_FIXED;
		GL_W.GL_LOW_FLOAT = org.lwjgl.opengl.GL43.GL_LOW_FLOAT;
		GL_W.GL_MEDIUM_FLOAT = org.lwjgl.opengl.GL43.GL_MEDIUM_FLOAT;
		GL_W.GL_HIGH_FLOAT = org.lwjgl.opengl.GL43.GL_HIGH_FLOAT;
		GL_W.GL_LOW_INT = org.lwjgl.opengl.GL43.GL_LOW_INT;
		GL_W.GL_MEDIUM_INT = org.lwjgl.opengl.GL43.GL_MEDIUM_INT;
		GL_W.GL_HIGH_INT = org.lwjgl.opengl.GL43.GL_HIGH_INT;
		GL_W.GL_RGB565 = org.lwjgl.opengl.GL43.GL_RGB565;
		GL_W.GL_PROGRAM_BINARY_RETRIEVABLE_HINT = org.lwjgl.opengl.GL43.GL_PROGRAM_BINARY_RETRIEVABLE_HINT;
		GL_W.GL_PROGRAM_BINARY_LENGTH = org.lwjgl.opengl.GL43.GL_PROGRAM_BINARY_LENGTH;
		GL_W.GL_NUM_PROGRAM_BINARY_FORMATS = org.lwjgl.opengl.GL43.GL_NUM_PROGRAM_BINARY_FORMATS;
		GL_W.GL_PROGRAM_BINARY_FORMATS = org.lwjgl.opengl.GL43.GL_PROGRAM_BINARY_FORMATS;
		GL_W.GL_VERTEX_SHADER_BIT = org.lwjgl.opengl.GL43.GL_VERTEX_SHADER_BIT;
		GL_W.GL_FRAGMENT_SHADER_BIT = org.lwjgl.opengl.GL43.GL_FRAGMENT_SHADER_BIT;
		GL_W.GL_GEOMETRY_SHADER_BIT = org.lwjgl.opengl.GL43.GL_GEOMETRY_SHADER_BIT;
		GL_W.GL_TESS_CONTROL_SHADER_BIT = org.lwjgl.opengl.GL43.GL_TESS_CONTROL_SHADER_BIT;
		GL_W.GL_TESS_EVALUATION_SHADER_BIT = org.lwjgl.opengl.GL43.GL_TESS_EVALUATION_SHADER_BIT;
		GL_W.GL_ALL_SHADER_BITS = org.lwjgl.opengl.GL43.GL_ALL_SHADER_BITS;
		GL_W.GL_PROGRAM_SEPARABLE = org.lwjgl.opengl.GL43.GL_PROGRAM_SEPARABLE;
		GL_W.GL_ACTIVE_PROGRAM = org.lwjgl.opengl.GL43.GL_ACTIVE_PROGRAM;
		GL_W.GL_PROGRAM_PIPELINE_BINDING = org.lwjgl.opengl.GL43.GL_PROGRAM_PIPELINE_BINDING;
		GL_W.GL_MAX_VIEWPORTS = org.lwjgl.opengl.GL43.GL_MAX_VIEWPORTS;
		GL_W.GL_VIEWPORT_SUBPIXEL_BITS = org.lwjgl.opengl.GL43.GL_VIEWPORT_SUBPIXEL_BITS;
		GL_W.GL_VIEWPORT_BOUNDS_RANGE = org.lwjgl.opengl.GL43.GL_VIEWPORT_BOUNDS_RANGE;
		GL_W.GL_LAYER_PROVOKING_VERTEX = org.lwjgl.opengl.GL43.GL_LAYER_PROVOKING_VERTEX;
		GL_W.GL_VIEWPORT_INDEX_PROVOKING_VERTEX = org.lwjgl.opengl.GL43.GL_VIEWPORT_INDEX_PROVOKING_VERTEX;
		GL_W.GL_UNDEFINED_VERTEX = org.lwjgl.opengl.GL43.GL_UNDEFINED_VERTEX;
		GL_W.GL_DRAW_INDIRECT_BUFFER = org.lwjgl.opengl.GL43.GL_DRAW_INDIRECT_BUFFER;
		GL_W.GL_DRAW_INDIRECT_BUFFER_BINDING = org.lwjgl.opengl.GL43.GL_DRAW_INDIRECT_BUFFER_BINDING;
		GL_W.GL_GEOMETRY_SHADER_INVOCATIONS = org.lwjgl.opengl.GL43.GL_GEOMETRY_SHADER_INVOCATIONS;
		GL_W.GL_MAX_GEOMETRY_SHADER_INVOCATIONS = org.lwjgl.opengl.GL43.GL_MAX_GEOMETRY_SHADER_INVOCATIONS;
		GL_W.GL_MIN_FRAGMENT_INTERPOLATION_OFFSET = org.lwjgl.opengl.GL43.GL_MIN_FRAGMENT_INTERPOLATION_OFFSET;
		GL_W.GL_MAX_FRAGMENT_INTERPOLATION_OFFSET = org.lwjgl.opengl.GL43.GL_MAX_FRAGMENT_INTERPOLATION_OFFSET;
		GL_W.GL_FRAGMENT_INTERPOLATION_OFFSET_BITS = org.lwjgl.opengl.GL43.GL_FRAGMENT_INTERPOLATION_OFFSET_BITS;
		GL_W.GL_DOUBLE_VEC2 = org.lwjgl.opengl.GL43.GL_DOUBLE_VEC2;
		GL_W.GL_DOUBLE_VEC3 = org.lwjgl.opengl.GL43.GL_DOUBLE_VEC3;
		GL_W.GL_DOUBLE_VEC4 = org.lwjgl.opengl.GL43.GL_DOUBLE_VEC4;
		GL_W.GL_DOUBLE_MAT2 = org.lwjgl.opengl.GL43.GL_DOUBLE_MAT2;
		GL_W.GL_DOUBLE_MAT3 = org.lwjgl.opengl.GL43.GL_DOUBLE_MAT3;
		GL_W.GL_DOUBLE_MAT4 = org.lwjgl.opengl.GL43.GL_DOUBLE_MAT4;
		GL_W.GL_DOUBLE_MAT2x3 = org.lwjgl.opengl.GL43.GL_DOUBLE_MAT2x3;
		GL_W.GL_DOUBLE_MAT2x4 = org.lwjgl.opengl.GL43.GL_DOUBLE_MAT2x4;
		GL_W.GL_DOUBLE_MAT3x2 = org.lwjgl.opengl.GL43.GL_DOUBLE_MAT3x2;
		GL_W.GL_DOUBLE_MAT3x4 = org.lwjgl.opengl.GL43.GL_DOUBLE_MAT3x4;
		GL_W.GL_DOUBLE_MAT4x2 = org.lwjgl.opengl.GL43.GL_DOUBLE_MAT4x2;
		GL_W.GL_DOUBLE_MAT4x3 = org.lwjgl.opengl.GL43.GL_DOUBLE_MAT4x3;
		GL_W.GL_SAMPLE_SHADING = org.lwjgl.opengl.GL43.GL_SAMPLE_SHADING;
		GL_W.GL_MIN_SAMPLE_SHADING_VALUE = org.lwjgl.opengl.GL43.GL_MIN_SAMPLE_SHADING_VALUE;
		GL_W.GL_ACTIVE_SUBROUTINES = org.lwjgl.opengl.GL43.GL_ACTIVE_SUBROUTINES;
		GL_W.GL_ACTIVE_SUBROUTINE_UNIFORMS = org.lwjgl.opengl.GL43.GL_ACTIVE_SUBROUTINE_UNIFORMS;
		GL_W.GL_ACTIVE_SUBROUTINE_UNIFORM_LOCATIONS = org.lwjgl.opengl.GL43.GL_ACTIVE_SUBROUTINE_UNIFORM_LOCATIONS;
		GL_W.GL_ACTIVE_SUBROUTINE_MAX_LENGTH = org.lwjgl.opengl.GL43.GL_ACTIVE_SUBROUTINE_MAX_LENGTH;
		GL_W.GL_ACTIVE_SUBROUTINE_UNIFORM_MAX_LENGTH = org.lwjgl.opengl.GL43.GL_ACTIVE_SUBROUTINE_UNIFORM_MAX_LENGTH;
		GL_W.GL_MAX_SUBROUTINES = org.lwjgl.opengl.GL43.GL_MAX_SUBROUTINES;
		GL_W.GL_MAX_SUBROUTINE_UNIFORM_LOCATIONS = org.lwjgl.opengl.GL43.GL_MAX_SUBROUTINE_UNIFORM_LOCATIONS;
		GL_W.GL_NUM_COMPATIBLE_SUBROUTINES = org.lwjgl.opengl.GL43.GL_NUM_COMPATIBLE_SUBROUTINES;
		GL_W.GL_COMPATIBLE_SUBROUTINES = org.lwjgl.opengl.GL43.GL_COMPATIBLE_SUBROUTINES;
		GL_W.GL_PATCHES = org.lwjgl.opengl.GL43.GL_PATCHES;
		GL_W.GL_PATCH_VERTICES = org.lwjgl.opengl.GL43.GL_PATCH_VERTICES;
		GL_W.GL_PATCH_DEFAULT_INNER_LEVEL = org.lwjgl.opengl.GL43.GL_PATCH_DEFAULT_INNER_LEVEL;
		GL_W.GL_PATCH_DEFAULT_OUTER_LEVEL = org.lwjgl.opengl.GL43.GL_PATCH_DEFAULT_OUTER_LEVEL;
		GL_W.GL_TESS_CONTROL_OUTPUT_VERTICES = org.lwjgl.opengl.GL43.GL_TESS_CONTROL_OUTPUT_VERTICES;
		GL_W.GL_TESS_GEN_MODE = org.lwjgl.opengl.GL43.GL_TESS_GEN_MODE;
		GL_W.GL_TESS_GEN_SPACING = org.lwjgl.opengl.GL43.GL_TESS_GEN_SPACING;
		GL_W.GL_TESS_GEN_VERTEX_ORDER = org.lwjgl.opengl.GL43.GL_TESS_GEN_VERTEX_ORDER;
		GL_W.GL_TESS_GEN_POINT_MODE = org.lwjgl.opengl.GL43.GL_TESS_GEN_POINT_MODE;
		GL_W.GL_ISOLINES = org.lwjgl.opengl.GL43.GL_ISOLINES;
		GL_W.GL_FRACTIONAL_ODD = org.lwjgl.opengl.GL43.GL_FRACTIONAL_ODD;
		GL_W.GL_FRACTIONAL_EVEN = org.lwjgl.opengl.GL43.GL_FRACTIONAL_EVEN;
		GL_W.GL_MAX_PATCH_VERTICES = org.lwjgl.opengl.GL43.GL_MAX_PATCH_VERTICES;
		GL_W.GL_MAX_TESS_GEN_LEVEL = org.lwjgl.opengl.GL43.GL_MAX_TESS_GEN_LEVEL;
		GL_W.GL_MAX_TESS_CONTROL_UNIFORM_COMPONENTS = org.lwjgl.opengl.GL43.GL_MAX_TESS_CONTROL_UNIFORM_COMPONENTS;
		GL_W.GL_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS = org.lwjgl.opengl.GL43.GL_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS;
		GL_W.GL_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS = org.lwjgl.opengl.GL43.GL_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS;
		GL_W.GL_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS = org.lwjgl.opengl.GL43.GL_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS;
		GL_W.GL_MAX_TESS_CONTROL_OUTPUT_COMPONENTS = org.lwjgl.opengl.GL43.GL_MAX_TESS_CONTROL_OUTPUT_COMPONENTS;
		GL_W.GL_MAX_TESS_PATCH_COMPONENTS = org.lwjgl.opengl.GL43.GL_MAX_TESS_PATCH_COMPONENTS;
		GL_W.GL_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS = org.lwjgl.opengl.GL43.GL_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS;
		GL_W.GL_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS = org.lwjgl.opengl.GL43.GL_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS;
		GL_W.GL_MAX_TESS_CONTROL_UNIFORM_BLOCKS = org.lwjgl.opengl.GL43.GL_MAX_TESS_CONTROL_UNIFORM_BLOCKS;
		GL_W.GL_MAX_TESS_EVALUATION_UNIFORM_BLOCKS = org.lwjgl.opengl.GL43.GL_MAX_TESS_EVALUATION_UNIFORM_BLOCKS;
		GL_W.GL_MAX_TESS_CONTROL_INPUT_COMPONENTS = org.lwjgl.opengl.GL43.GL_MAX_TESS_CONTROL_INPUT_COMPONENTS;
		GL_W.GL_MAX_TESS_EVALUATION_INPUT_COMPONENTS = org.lwjgl.opengl.GL43.GL_MAX_TESS_EVALUATION_INPUT_COMPONENTS;
		GL_W.GL_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS = org.lwjgl.opengl.GL43.GL_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS;
		GL_W.GL_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS = org.lwjgl.opengl.GL43.GL_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS;
		GL_W.GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_CONTROL_SHADER = org.lwjgl.opengl.GL43.GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_CONTROL_SHADER;
		GL_W.GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_EVALUATION_SHADER = org.lwjgl.opengl.GL43.GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_EVALUATION_SHADER;
		GL_W.GL_TESS_EVALUATION_SHADER = org.lwjgl.opengl.GL43.GL_TESS_EVALUATION_SHADER;
		GL_W.GL_TESS_CONTROL_SHADER = org.lwjgl.opengl.GL43.GL_TESS_CONTROL_SHADER;
		GL_W.GL_TEXTURE_CUBE_MAP_ARRAY = org.lwjgl.opengl.GL43.GL_TEXTURE_CUBE_MAP_ARRAY;
		GL_W.GL_TEXTURE_BINDING_CUBE_MAP_ARRAY = org.lwjgl.opengl.GL43.GL_TEXTURE_BINDING_CUBE_MAP_ARRAY;
		GL_W.GL_PROXY_TEXTURE_CUBE_MAP_ARRAY = org.lwjgl.opengl.GL43.GL_PROXY_TEXTURE_CUBE_MAP_ARRAY;
		GL_W.GL_SAMPLER_CUBE_MAP_ARRAY = org.lwjgl.opengl.GL43.GL_SAMPLER_CUBE_MAP_ARRAY;
		GL_W.GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW = org.lwjgl.opengl.GL43.GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW;
		GL_W.GL_INT_SAMPLER_CUBE_MAP_ARRAY = org.lwjgl.opengl.GL43.GL_INT_SAMPLER_CUBE_MAP_ARRAY;
		GL_W.GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY = org.lwjgl.opengl.GL43.GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY;
		GL_W.GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET = org.lwjgl.opengl.GL43.GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET;
		GL_W.GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET = org.lwjgl.opengl.GL43.GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET;
		GL_W.GL_TRANSFORM_FEEDBACK = org.lwjgl.opengl.GL43.GL_TRANSFORM_FEEDBACK;
		GL_W.GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED = org.lwjgl.opengl.GL43.GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED;
		GL_W.GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE = org.lwjgl.opengl.GL43.GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE;
		GL_W.GL_TRANSFORM_FEEDBACK_BINDING = org.lwjgl.opengl.GL43.GL_TRANSFORM_FEEDBACK_BINDING;
		GL_W.GL_MAX_TRANSFORM_FEEDBACK_BUFFERS = org.lwjgl.opengl.GL43.GL_MAX_TRANSFORM_FEEDBACK_BUFFERS;
		GL_W.GL_MAX_VERTEX_STREAMS = org.lwjgl.opengl.GL43.GL_MAX_VERTEX_STREAMS;
		GL_W.GL_SRC1_COLOR = org.lwjgl.opengl.GL43.GL_SRC1_COLOR;
		GL_W.GL_ONE_MINUS_SRC1_COLOR = org.lwjgl.opengl.GL43.GL_ONE_MINUS_SRC1_COLOR;
		GL_W.GL_ONE_MINUS_SRC1_ALPHA = org.lwjgl.opengl.GL43.GL_ONE_MINUS_SRC1_ALPHA;
		GL_W.GL_MAX_DUAL_SOURCE_DRAW_BUFFERS = org.lwjgl.opengl.GL43.GL_MAX_DUAL_SOURCE_DRAW_BUFFERS;
		GL_W.GL_ANY_SAMPLES_PASSED = org.lwjgl.opengl.GL43.GL_ANY_SAMPLES_PASSED;
		GL_W.GL_SAMPLER_BINDING = org.lwjgl.opengl.GL43.GL_SAMPLER_BINDING;
		GL_W.GL_RGB10_A2UI = org.lwjgl.opengl.GL43.GL_RGB10_A2UI;
		GL_W.GL_TEXTURE_SWIZZLE_R = org.lwjgl.opengl.GL43.GL_TEXTURE_SWIZZLE_R;
		GL_W.GL_TEXTURE_SWIZZLE_G = org.lwjgl.opengl.GL43.GL_TEXTURE_SWIZZLE_G;
		GL_W.GL_TEXTURE_SWIZZLE_B = org.lwjgl.opengl.GL43.GL_TEXTURE_SWIZZLE_B;
		GL_W.GL_TEXTURE_SWIZZLE_A = org.lwjgl.opengl.GL43.GL_TEXTURE_SWIZZLE_A;
		GL_W.GL_TEXTURE_SWIZZLE_RGBA = org.lwjgl.opengl.GL43.GL_TEXTURE_SWIZZLE_RGBA;
		GL_W.GL_TIME_ELAPSED = org.lwjgl.opengl.GL43.GL_TIME_ELAPSED;
		GL_W.GL_TIMESTAMP = org.lwjgl.opengl.GL43.GL_TIMESTAMP;
		GL_W.GL_VERTEX_ATTRIB_ARRAY_DIVISOR = org.lwjgl.opengl.GL43.GL_VERTEX_ATTRIB_ARRAY_DIVISOR;
		GL_W.GL_INT_2_10_10_10_REV = org.lwjgl.opengl.GL43.GL_INT_2_10_10_10_REV;
		GL_W.GL_CONTEXT_PROFILE_MASK = org.lwjgl.opengl.GL43.GL_CONTEXT_PROFILE_MASK;
		GL_W.GL_CONTEXT_CORE_PROFILE_BIT = org.lwjgl.opengl.GL43.GL_CONTEXT_CORE_PROFILE_BIT;
		GL_W.GL_CONTEXT_COMPATIBILITY_PROFILE_BIT = org.lwjgl.opengl.GL43.GL_CONTEXT_COMPATIBILITY_PROFILE_BIT;
		GL_W.GL_MAX_VERTEX_OUTPUT_COMPONENTS = org.lwjgl.opengl.GL43.GL_MAX_VERTEX_OUTPUT_COMPONENTS;
		GL_W.GL_MAX_GEOMETRY_INPUT_COMPONENTS = org.lwjgl.opengl.GL43.GL_MAX_GEOMETRY_INPUT_COMPONENTS;
		GL_W.GL_MAX_GEOMETRY_OUTPUT_COMPONENTS = org.lwjgl.opengl.GL43.GL_MAX_GEOMETRY_OUTPUT_COMPONENTS;
		GL_W.GL_MAX_FRAGMENT_INPUT_COMPONENTS = org.lwjgl.opengl.GL43.GL_MAX_FRAGMENT_INPUT_COMPONENTS;
		GL_W.GL_FIRST_VERTEX_CONVENTION = org.lwjgl.opengl.GL43.GL_FIRST_VERTEX_CONVENTION;
		GL_W.GL_LAST_VERTEX_CONVENTION = org.lwjgl.opengl.GL43.GL_LAST_VERTEX_CONVENTION;
		GL_W.GL_PROVOKING_VERTEX = org.lwjgl.opengl.GL43.GL_PROVOKING_VERTEX;
		GL_W.GL_QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION = org.lwjgl.opengl.GL43.GL_QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION;
		GL_W.GL_TEXTURE_CUBE_MAP_SEAMLESS = org.lwjgl.opengl.GL43.GL_TEXTURE_CUBE_MAP_SEAMLESS;
		GL_W.GL_SAMPLE_POSITION = org.lwjgl.opengl.GL43.GL_SAMPLE_POSITION;
		GL_W.GL_SAMPLE_MASK = org.lwjgl.opengl.GL43.GL_SAMPLE_MASK;
		GL_W.GL_SAMPLE_MASK_VALUE = org.lwjgl.opengl.GL43.GL_SAMPLE_MASK_VALUE;
		GL_W.GL_TEXTURE_2D_MULTISAMPLE = org.lwjgl.opengl.GL43.GL_TEXTURE_2D_MULTISAMPLE;
		GL_W.GL_PROXY_TEXTURE_2D_MULTISAMPLE = org.lwjgl.opengl.GL43.GL_PROXY_TEXTURE_2D_MULTISAMPLE;
		GL_W.GL_TEXTURE_2D_MULTISAMPLE_ARRAY = org.lwjgl.opengl.GL43.GL_TEXTURE_2D_MULTISAMPLE_ARRAY;
		GL_W.GL_PROXY_TEXTURE_2D_MULTISAMPLE_ARRAY = org.lwjgl.opengl.GL43.GL_PROXY_TEXTURE_2D_MULTISAMPLE_ARRAY;
		GL_W.GL_MAX_SAMPLE_MASK_WORDS = org.lwjgl.opengl.GL43.GL_MAX_SAMPLE_MASK_WORDS;
		GL_W.GL_MAX_COLOR_TEXTURE_SAMPLES = org.lwjgl.opengl.GL43.GL_MAX_COLOR_TEXTURE_SAMPLES;
		GL_W.GL_MAX_DEPTH_TEXTURE_SAMPLES = org.lwjgl.opengl.GL43.GL_MAX_DEPTH_TEXTURE_SAMPLES;
		GL_W.GL_MAX_INTEGER_SAMPLES = org.lwjgl.opengl.GL43.GL_MAX_INTEGER_SAMPLES;
		GL_W.GL_TEXTURE_BINDING_2D_MULTISAMPLE = org.lwjgl.opengl.GL43.GL_TEXTURE_BINDING_2D_MULTISAMPLE;
		GL_W.GL_TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY = org.lwjgl.opengl.GL43.GL_TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY;
		GL_W.GL_TEXTURE_SAMPLES = org.lwjgl.opengl.GL43.GL_TEXTURE_SAMPLES;
		GL_W.GL_TEXTURE_FIXED_SAMPLE_LOCATIONS = org.lwjgl.opengl.GL43.GL_TEXTURE_FIXED_SAMPLE_LOCATIONS;
		GL_W.GL_SAMPLER_2D_MULTISAMPLE = org.lwjgl.opengl.GL43.GL_SAMPLER_2D_MULTISAMPLE;
		GL_W.GL_INT_SAMPLER_2D_MULTISAMPLE = org.lwjgl.opengl.GL43.GL_INT_SAMPLER_2D_MULTISAMPLE;
		GL_W.GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE = org.lwjgl.opengl.GL43.GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE;
		GL_W.GL_SAMPLER_2D_MULTISAMPLE_ARRAY = org.lwjgl.opengl.GL43.GL_SAMPLER_2D_MULTISAMPLE_ARRAY;
		GL_W.GL_INT_SAMPLER_2D_MULTISAMPLE_ARRAY = org.lwjgl.opengl.GL43.GL_INT_SAMPLER_2D_MULTISAMPLE_ARRAY;
		GL_W.GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY = org.lwjgl.opengl.GL43.GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY;
		GL_W.GL_DEPTH_CLAMP = org.lwjgl.opengl.GL43.GL_DEPTH_CLAMP;
		GL_W.GL_GEOMETRY_SHADER = org.lwjgl.opengl.GL43.GL_GEOMETRY_SHADER;
		GL_W.GL_GEOMETRY_VERTICES_OUT = org.lwjgl.opengl.GL43.GL_GEOMETRY_VERTICES_OUT;
		GL_W.GL_GEOMETRY_INPUT_TYPE = org.lwjgl.opengl.GL43.GL_GEOMETRY_INPUT_TYPE;
		GL_W.GL_GEOMETRY_OUTPUT_TYPE = org.lwjgl.opengl.GL43.GL_GEOMETRY_OUTPUT_TYPE;
		GL_W.GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS = org.lwjgl.opengl.GL43.GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS;
		GL_W.GL_MAX_GEOMETRY_UNIFORM_COMPONENTS = org.lwjgl.opengl.GL43.GL_MAX_GEOMETRY_UNIFORM_COMPONENTS;
		GL_W.GL_MAX_GEOMETRY_OUTPUT_VERTICES = org.lwjgl.opengl.GL43.GL_MAX_GEOMETRY_OUTPUT_VERTICES;
		GL_W.GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS = org.lwjgl.opengl.GL43.GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS;
		GL_W.GL_LINES_ADJACENCY = org.lwjgl.opengl.GL43.GL_LINES_ADJACENCY;
		GL_W.GL_LINE_STRIP_ADJACENCY = org.lwjgl.opengl.GL43.GL_LINE_STRIP_ADJACENCY;
		GL_W.GL_TRIANGLES_ADJACENCY = org.lwjgl.opengl.GL43.GL_TRIANGLES_ADJACENCY;
		GL_W.GL_TRIANGLE_STRIP_ADJACENCY = org.lwjgl.opengl.GL43.GL_TRIANGLE_STRIP_ADJACENCY;
		GL_W.GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS = org.lwjgl.opengl.GL43.GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS;
		GL_W.GL_FRAMEBUFFER_ATTACHMENT_LAYERED = org.lwjgl.opengl.GL43.GL_FRAMEBUFFER_ATTACHMENT_LAYERED;
		GL_W.GL_PROGRAM_POINT_SIZE = org.lwjgl.opengl.GL43.GL_PROGRAM_POINT_SIZE;
		GL_W.GL_MAX_SERVER_WAIT_TIMEOUT = org.lwjgl.opengl.GL43.GL_MAX_SERVER_WAIT_TIMEOUT;
		GL_W.GL_OBJECT_TYPE = org.lwjgl.opengl.GL43.GL_OBJECT_TYPE;
		GL_W.GL_SYNC_CONDITION = org.lwjgl.opengl.GL43.GL_SYNC_CONDITION;
		GL_W.GL_SYNC_STATUS = org.lwjgl.opengl.GL43.GL_SYNC_STATUS;
		GL_W.GL_SYNC_FLAGS = org.lwjgl.opengl.GL43.GL_SYNC_FLAGS;
		GL_W.GL_SYNC_FENCE = org.lwjgl.opengl.GL43.GL_SYNC_FENCE;
		GL_W.GL_SYNC_GPU_COMMANDS_COMPLETE = org.lwjgl.opengl.GL43.GL_SYNC_GPU_COMMANDS_COMPLETE;
		GL_W.GL_UNSIGNALED = org.lwjgl.opengl.GL43.GL_UNSIGNALED;
		GL_W.GL_SIGNALED = org.lwjgl.opengl.GL43.GL_SIGNALED;
		GL_W.GL_SYNC_FLUSH_COMMANDS_BIT = org.lwjgl.opengl.GL43.GL_SYNC_FLUSH_COMMANDS_BIT;
		GL_W.GL_ALREADY_SIGNALED = org.lwjgl.opengl.GL43.GL_ALREADY_SIGNALED;
		GL_W.GL_TIMEOUT_EXPIRED = org.lwjgl.opengl.GL43.GL_TIMEOUT_EXPIRED;
		GL_W.GL_CONDITION_SATISFIED = org.lwjgl.opengl.GL43.GL_CONDITION_SATISFIED;
		GL_W.GL_WAIT_FAILED = org.lwjgl.opengl.GL43.GL_WAIT_FAILED;
		GL_W.GL_R8_SNORM = org.lwjgl.opengl.GL43.GL_R8_SNORM;
		GL_W.GL_RG8_SNORM = org.lwjgl.opengl.GL43.GL_RG8_SNORM;
		GL_W.GL_RGB8_SNORM = org.lwjgl.opengl.GL43.GL_RGB8_SNORM;
		GL_W.GL_RGBA8_SNORM = org.lwjgl.opengl.GL43.GL_RGBA8_SNORM;
		GL_W.GL_R16_SNORM = org.lwjgl.opengl.GL43.GL_R16_SNORM;
		GL_W.GL_RG16_SNORM = org.lwjgl.opengl.GL43.GL_RG16_SNORM;
		GL_W.GL_RGB16_SNORM = org.lwjgl.opengl.GL43.GL_RGB16_SNORM;
		GL_W.GL_RGBA16_SNORM = org.lwjgl.opengl.GL43.GL_RGBA16_SNORM;
		GL_W.GL_SIGNED_NORMALIZED = org.lwjgl.opengl.GL43.GL_SIGNED_NORMALIZED;
		GL_W.GL_SAMPLER_BUFFER = org.lwjgl.opengl.GL43.GL_SAMPLER_BUFFER;
		GL_W.GL_INT_SAMPLER_2D_RECT = org.lwjgl.opengl.GL43.GL_INT_SAMPLER_2D_RECT;
		GL_W.GL_INT_SAMPLER_BUFFER = org.lwjgl.opengl.GL43.GL_INT_SAMPLER_BUFFER;
		GL_W.GL_UNSIGNED_INT_SAMPLER_2D_RECT = org.lwjgl.opengl.GL43.GL_UNSIGNED_INT_SAMPLER_2D_RECT;
		GL_W.GL_UNSIGNED_INT_SAMPLER_BUFFER = org.lwjgl.opengl.GL43.GL_UNSIGNED_INT_SAMPLER_BUFFER;
		GL_W.GL_COPY_READ_BUFFER = org.lwjgl.opengl.GL43.GL_COPY_READ_BUFFER;
		GL_W.GL_COPY_WRITE_BUFFER = org.lwjgl.opengl.GL43.GL_COPY_WRITE_BUFFER;
		GL_W.GL_PRIMITIVE_RESTART = org.lwjgl.opengl.GL43.GL_PRIMITIVE_RESTART;
		GL_W.GL_PRIMITIVE_RESTART_INDEX = org.lwjgl.opengl.GL43.GL_PRIMITIVE_RESTART_INDEX;
		GL_W.GL_TEXTURE_BUFFER = org.lwjgl.opengl.GL43.GL_TEXTURE_BUFFER;
		GL_W.GL_MAX_TEXTURE_BUFFER_SIZE = org.lwjgl.opengl.GL43.GL_MAX_TEXTURE_BUFFER_SIZE;
		GL_W.GL_TEXTURE_BINDING_BUFFER = org.lwjgl.opengl.GL43.GL_TEXTURE_BINDING_BUFFER;
		GL_W.GL_TEXTURE_BUFFER_DATA_STORE_BINDING = org.lwjgl.opengl.GL43.GL_TEXTURE_BUFFER_DATA_STORE_BINDING;
		GL_W.GL_TEXTURE_RECTANGLE = org.lwjgl.opengl.GL43.GL_TEXTURE_RECTANGLE;
		GL_W.GL_TEXTURE_BINDING_RECTANGLE = org.lwjgl.opengl.GL43.GL_TEXTURE_BINDING_RECTANGLE;
		GL_W.GL_PROXY_TEXTURE_RECTANGLE = org.lwjgl.opengl.GL43.GL_PROXY_TEXTURE_RECTANGLE;
		GL_W.GL_MAX_RECTANGLE_TEXTURE_SIZE = org.lwjgl.opengl.GL43.GL_MAX_RECTANGLE_TEXTURE_SIZE;
		GL_W.GL_SAMPLER_2D_RECT = org.lwjgl.opengl.GL43.GL_SAMPLER_2D_RECT;
		GL_W.GL_SAMPLER_2D_RECT_SHADOW = org.lwjgl.opengl.GL43.GL_SAMPLER_2D_RECT_SHADOW;
		GL_W.GL_UNIFORM_BUFFER = org.lwjgl.opengl.GL43.GL_UNIFORM_BUFFER;
		GL_W.GL_UNIFORM_BUFFER_BINDING = org.lwjgl.opengl.GL43.GL_UNIFORM_BUFFER_BINDING;
		GL_W.GL_UNIFORM_BUFFER_START = org.lwjgl.opengl.GL43.GL_UNIFORM_BUFFER_START;
		GL_W.GL_UNIFORM_BUFFER_SIZE = org.lwjgl.opengl.GL43.GL_UNIFORM_BUFFER_SIZE;
		GL_W.GL_MAX_VERTEX_UNIFORM_BLOCKS = org.lwjgl.opengl.GL43.GL_MAX_VERTEX_UNIFORM_BLOCKS;
		GL_W.GL_MAX_GEOMETRY_UNIFORM_BLOCKS = org.lwjgl.opengl.GL43.GL_MAX_GEOMETRY_UNIFORM_BLOCKS;
		GL_W.GL_MAX_FRAGMENT_UNIFORM_BLOCKS = org.lwjgl.opengl.GL43.GL_MAX_FRAGMENT_UNIFORM_BLOCKS;
		GL_W.GL_MAX_COMBINED_UNIFORM_BLOCKS = org.lwjgl.opengl.GL43.GL_MAX_COMBINED_UNIFORM_BLOCKS;
		GL_W.GL_MAX_UNIFORM_BUFFER_BINDINGS = org.lwjgl.opengl.GL43.GL_MAX_UNIFORM_BUFFER_BINDINGS;
		GL_W.GL_MAX_UNIFORM_BLOCK_SIZE = org.lwjgl.opengl.GL43.GL_MAX_UNIFORM_BLOCK_SIZE;
		GL_W.GL_MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS = org.lwjgl.opengl.GL43.GL_MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS;
		GL_W.GL_MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS = org.lwjgl.opengl.GL43.GL_MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS;
		GL_W.GL_MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS = org.lwjgl.opengl.GL43.GL_MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS;
		GL_W.GL_UNIFORM_BUFFER_OFFSET_ALIGNMENT = org.lwjgl.opengl.GL43.GL_UNIFORM_BUFFER_OFFSET_ALIGNMENT;
		GL_W.GL_ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH = org.lwjgl.opengl.GL43.GL_ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH;
		GL_W.GL_ACTIVE_UNIFORM_BLOCKS = org.lwjgl.opengl.GL43.GL_ACTIVE_UNIFORM_BLOCKS;
		GL_W.GL_UNIFORM_TYPE = org.lwjgl.opengl.GL43.GL_UNIFORM_TYPE;
		GL_W.GL_UNIFORM_SIZE = org.lwjgl.opengl.GL43.GL_UNIFORM_SIZE;
		GL_W.GL_UNIFORM_NAME_LENGTH = org.lwjgl.opengl.GL43.GL_UNIFORM_NAME_LENGTH;
		GL_W.GL_UNIFORM_BLOCK_INDEX = org.lwjgl.opengl.GL43.GL_UNIFORM_BLOCK_INDEX;
		GL_W.GL_UNIFORM_OFFSET = org.lwjgl.opengl.GL43.GL_UNIFORM_OFFSET;
		GL_W.GL_UNIFORM_ARRAY_STRIDE = org.lwjgl.opengl.GL43.GL_UNIFORM_ARRAY_STRIDE;
		GL_W.GL_UNIFORM_MATRIX_STRIDE = org.lwjgl.opengl.GL43.GL_UNIFORM_MATRIX_STRIDE;
		GL_W.GL_UNIFORM_IS_ROW_MAJOR = org.lwjgl.opengl.GL43.GL_UNIFORM_IS_ROW_MAJOR;
		GL_W.GL_UNIFORM_BLOCK_BINDING = org.lwjgl.opengl.GL43.GL_UNIFORM_BLOCK_BINDING;
		GL_W.GL_UNIFORM_BLOCK_DATA_SIZE = org.lwjgl.opengl.GL43.GL_UNIFORM_BLOCK_DATA_SIZE;
		GL_W.GL_UNIFORM_BLOCK_NAME_LENGTH = org.lwjgl.opengl.GL43.GL_UNIFORM_BLOCK_NAME_LENGTH;
		GL_W.GL_UNIFORM_BLOCK_ACTIVE_UNIFORMS = org.lwjgl.opengl.GL43.GL_UNIFORM_BLOCK_ACTIVE_UNIFORMS;
		GL_W.GL_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES = org.lwjgl.opengl.GL43.GL_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES;
		GL_W.GL_UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER = org.lwjgl.opengl.GL43.GL_UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER;
		GL_W.GL_UNIFORM_BLOCK_REFERENCED_BY_GEOMETRY_SHADER = org.lwjgl.opengl.GL43.GL_UNIFORM_BLOCK_REFERENCED_BY_GEOMETRY_SHADER;
		GL_W.GL_UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER = org.lwjgl.opengl.GL43.GL_UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER;
		GL_W.GL_INVALID_INDEX = org.lwjgl.opengl.GL43.GL_INVALID_INDEX;
		GL_W.GL_MAJOR_VERSION = org.lwjgl.opengl.GL43.GL_MAJOR_VERSION;
		GL_W.GL_MINOR_VERSION = org.lwjgl.opengl.GL43.GL_MINOR_VERSION;
		GL_W.GL_NUM_EXTENSIONS = org.lwjgl.opengl.GL43.GL_NUM_EXTENSIONS;
		GL_W.GL_CONTEXT_FLAGS = org.lwjgl.opengl.GL43.GL_CONTEXT_FLAGS;
		GL_W.GL_CONTEXT_FLAG_FORWARD_COMPATIBLE_BIT = org.lwjgl.opengl.GL43.GL_CONTEXT_FLAG_FORWARD_COMPATIBLE_BIT;
		GL_W.GL_COMPARE_REF_TO_TEXTURE = org.lwjgl.opengl.GL43.GL_COMPARE_REF_TO_TEXTURE;
		GL_W.GL_CLIP_DISTANCE0 = org.lwjgl.opengl.GL43.GL_CLIP_DISTANCE0;
		GL_W.GL_CLIP_DISTANCE1 = org.lwjgl.opengl.GL43.GL_CLIP_DISTANCE1;
		GL_W.GL_CLIP_DISTANCE2 = org.lwjgl.opengl.GL43.GL_CLIP_DISTANCE2;
		GL_W.GL_CLIP_DISTANCE3 = org.lwjgl.opengl.GL43.GL_CLIP_DISTANCE3;
		GL_W.GL_CLIP_DISTANCE4 = org.lwjgl.opengl.GL43.GL_CLIP_DISTANCE4;
		GL_W.GL_CLIP_DISTANCE5 = org.lwjgl.opengl.GL43.GL_CLIP_DISTANCE5;
		GL_W.GL_CLIP_DISTANCE6 = org.lwjgl.opengl.GL43.GL_CLIP_DISTANCE6;
		GL_W.GL_CLIP_DISTANCE7 = org.lwjgl.opengl.GL43.GL_CLIP_DISTANCE7;
		GL_W.GL_MAX_CLIP_DISTANCES = org.lwjgl.opengl.GL43.GL_MAX_CLIP_DISTANCES;
		GL_W.GL_MAX_VARYING_COMPONENTS = org.lwjgl.opengl.GL43.GL_MAX_VARYING_COMPONENTS;
		GL_W.GL_VERTEX_ATTRIB_ARRAY_INTEGER = org.lwjgl.opengl.GL43.GL_VERTEX_ATTRIB_ARRAY_INTEGER;
		GL_W.GL_SAMPLER_1D_ARRAY = org.lwjgl.opengl.GL43.GL_SAMPLER_1D_ARRAY;
		GL_W.GL_SAMPLER_2D_ARRAY = org.lwjgl.opengl.GL43.GL_SAMPLER_2D_ARRAY;
		GL_W.GL_SAMPLER_1D_ARRAY_SHADOW = org.lwjgl.opengl.GL43.GL_SAMPLER_1D_ARRAY_SHADOW;
		GL_W.GL_SAMPLER_2D_ARRAY_SHADOW = org.lwjgl.opengl.GL43.GL_SAMPLER_2D_ARRAY_SHADOW;
		GL_W.GL_SAMPLER_CUBE_SHADOW = org.lwjgl.opengl.GL43.GL_SAMPLER_CUBE_SHADOW;
		GL_W.GL_UNSIGNED_INT_VEC2 = org.lwjgl.opengl.GL43.GL_UNSIGNED_INT_VEC2;
		GL_W.GL_UNSIGNED_INT_VEC3 = org.lwjgl.opengl.GL43.GL_UNSIGNED_INT_VEC3;
		GL_W.GL_UNSIGNED_INT_VEC4 = org.lwjgl.opengl.GL43.GL_UNSIGNED_INT_VEC4;
		GL_W.GL_INT_SAMPLER_1D = org.lwjgl.opengl.GL43.GL_INT_SAMPLER_1D;
		GL_W.GL_INT_SAMPLER_2D = org.lwjgl.opengl.GL43.GL_INT_SAMPLER_2D;
		GL_W.GL_INT_SAMPLER_3D = org.lwjgl.opengl.GL43.GL_INT_SAMPLER_3D;
		GL_W.GL_INT_SAMPLER_CUBE = org.lwjgl.opengl.GL43.GL_INT_SAMPLER_CUBE;
		GL_W.GL_INT_SAMPLER_1D_ARRAY = org.lwjgl.opengl.GL43.GL_INT_SAMPLER_1D_ARRAY;
		GL_W.GL_INT_SAMPLER_2D_ARRAY = org.lwjgl.opengl.GL43.GL_INT_SAMPLER_2D_ARRAY;
		GL_W.GL_UNSIGNED_INT_SAMPLER_1D = org.lwjgl.opengl.GL43.GL_UNSIGNED_INT_SAMPLER_1D;
		GL_W.GL_UNSIGNED_INT_SAMPLER_2D = org.lwjgl.opengl.GL43.GL_UNSIGNED_INT_SAMPLER_2D;
		GL_W.GL_UNSIGNED_INT_SAMPLER_3D = org.lwjgl.opengl.GL43.GL_UNSIGNED_INT_SAMPLER_3D;
		GL_W.GL_UNSIGNED_INT_SAMPLER_CUBE = org.lwjgl.opengl.GL43.GL_UNSIGNED_INT_SAMPLER_CUBE;
		GL_W.GL_UNSIGNED_INT_SAMPLER_1D_ARRAY = org.lwjgl.opengl.GL43.GL_UNSIGNED_INT_SAMPLER_1D_ARRAY;
		GL_W.GL_UNSIGNED_INT_SAMPLER_2D_ARRAY = org.lwjgl.opengl.GL43.GL_UNSIGNED_INT_SAMPLER_2D_ARRAY;
		GL_W.GL_MIN_PROGRAM_TEXEL_OFFSET = org.lwjgl.opengl.GL43.GL_MIN_PROGRAM_TEXEL_OFFSET;
		GL_W.GL_MAX_PROGRAM_TEXEL_OFFSET = org.lwjgl.opengl.GL43.GL_MAX_PROGRAM_TEXEL_OFFSET;
		GL_W.GL_QUERY_WAIT = org.lwjgl.opengl.GL43.GL_QUERY_WAIT;
		GL_W.GL_QUERY_NO_WAIT = org.lwjgl.opengl.GL43.GL_QUERY_NO_WAIT;
		GL_W.GL_QUERY_BY_REGION_WAIT = org.lwjgl.opengl.GL43.GL_QUERY_BY_REGION_WAIT;
		GL_W.GL_QUERY_BY_REGION_NO_WAIT = org.lwjgl.opengl.GL43.GL_QUERY_BY_REGION_NO_WAIT;
		GL_W.GL_MAP_READ_BIT = org.lwjgl.opengl.GL43.GL_MAP_READ_BIT;
		GL_W.GL_MAP_WRITE_BIT = org.lwjgl.opengl.GL43.GL_MAP_WRITE_BIT;
		GL_W.GL_MAP_INVALIDATE_RANGE_BIT = org.lwjgl.opengl.GL43.GL_MAP_INVALIDATE_RANGE_BIT;
		GL_W.GL_MAP_INVALIDATE_BUFFER_BIT = org.lwjgl.opengl.GL43.GL_MAP_INVALIDATE_BUFFER_BIT;
		GL_W.GL_MAP_FLUSH_EXPLICIT_BIT = org.lwjgl.opengl.GL43.GL_MAP_FLUSH_EXPLICIT_BIT;
		GL_W.GL_MAP_UNSYNCHRONIZED_BIT = org.lwjgl.opengl.GL43.GL_MAP_UNSYNCHRONIZED_BIT;
		GL_W.GL_BUFFER_ACCESS_FLAGS = org.lwjgl.opengl.GL43.GL_BUFFER_ACCESS_FLAGS;
		GL_W.GL_BUFFER_MAP_LENGTH = org.lwjgl.opengl.GL43.GL_BUFFER_MAP_LENGTH;
		GL_W.GL_BUFFER_MAP_OFFSET = org.lwjgl.opengl.GL43.GL_BUFFER_MAP_OFFSET;
		GL_W.GL_CLAMP_VERTEX_COLOR = org.lwjgl.opengl.GL43.GL_CLAMP_VERTEX_COLOR;
		GL_W.GL_CLAMP_FRAGMENT_COLOR = org.lwjgl.opengl.GL43.GL_CLAMP_FRAGMENT_COLOR;
		GL_W.GL_CLAMP_READ_COLOR = org.lwjgl.opengl.GL43.GL_CLAMP_READ_COLOR;
		GL_W.GL_FIXED_ONLY = org.lwjgl.opengl.GL43.GL_FIXED_ONLY;
		GL_W.GL_DEPTH_COMPONENT32F = org.lwjgl.opengl.GL43.GL_DEPTH_COMPONENT32F;
		GL_W.GL_DEPTH32F_STENCIL8 = org.lwjgl.opengl.GL43.GL_DEPTH32F_STENCIL8;
		GL_W.GL_FLOAT_32_UNSIGNED_INT_24_8_REV = org.lwjgl.opengl.GL43.GL_FLOAT_32_UNSIGNED_INT_24_8_REV;
		GL_W.GL_TEXTURE_RED_TYPE = org.lwjgl.opengl.GL43.GL_TEXTURE_RED_TYPE;
		GL_W.GL_TEXTURE_GREEN_TYPE = org.lwjgl.opengl.GL43.GL_TEXTURE_GREEN_TYPE;
		GL_W.GL_TEXTURE_BLUE_TYPE = org.lwjgl.opengl.GL43.GL_TEXTURE_BLUE_TYPE;
		GL_W.GL_TEXTURE_ALPHA_TYPE = org.lwjgl.opengl.GL43.GL_TEXTURE_ALPHA_TYPE;
		GL_W.GL_TEXTURE_LUMINANCE_TYPE = org.lwjgl.opengl.GL43.GL_TEXTURE_LUMINANCE_TYPE;
		GL_W.GL_TEXTURE_INTENSITY_TYPE = org.lwjgl.opengl.GL43.GL_TEXTURE_INTENSITY_TYPE;
		GL_W.GL_TEXTURE_DEPTH_TYPE = org.lwjgl.opengl.GL43.GL_TEXTURE_DEPTH_TYPE;
		GL_W.GL_UNSIGNED_NORMALIZED = org.lwjgl.opengl.GL43.GL_UNSIGNED_NORMALIZED;
		GL_W.GL_RGBA32F = org.lwjgl.opengl.GL43.GL_RGBA32F;
		GL_W.GL_RGB32F = org.lwjgl.opengl.GL43.GL_RGB32F;
		GL_W.GL_RGBA16F = org.lwjgl.opengl.GL43.GL_RGBA16F;
		GL_W.GL_RGB16F = org.lwjgl.opengl.GL43.GL_RGB16F;
		GL_W.GL_R11F_G11F_B10F = org.lwjgl.opengl.GL43.GL_R11F_G11F_B10F;
		GL_W.GL_UNSIGNED_INT_10F_11F_11F_REV = org.lwjgl.opengl.GL43.GL_UNSIGNED_INT_10F_11F_11F_REV;
		GL_W.GL_RGB9_E5 = org.lwjgl.opengl.GL43.GL_RGB9_E5;
		GL_W.GL_UNSIGNED_INT_5_9_9_9_REV = org.lwjgl.opengl.GL43.GL_UNSIGNED_INT_5_9_9_9_REV;
		GL_W.GL_TEXTURE_SHARED_SIZE = org.lwjgl.opengl.GL43.GL_TEXTURE_SHARED_SIZE;
		GL_W.GL_FRAMEBUFFER = org.lwjgl.opengl.GL43.GL_FRAMEBUFFER;
		GL_W.GL_READ_FRAMEBUFFER = org.lwjgl.opengl.GL43.GL_READ_FRAMEBUFFER;
		GL_W.GL_DRAW_FRAMEBUFFER = org.lwjgl.opengl.GL43.GL_DRAW_FRAMEBUFFER;
		GL_W.GL_RENDERBUFFER = org.lwjgl.opengl.GL43.GL_RENDERBUFFER;
		GL_W.GL_STENCIL_INDEX1 = org.lwjgl.opengl.GL43.GL_STENCIL_INDEX1;
		GL_W.GL_STENCIL_INDEX4 = org.lwjgl.opengl.GL43.GL_STENCIL_INDEX4;
		GL_W.GL_STENCIL_INDEX8 = org.lwjgl.opengl.GL43.GL_STENCIL_INDEX8;
		GL_W.GL_STENCIL_INDEX16 = org.lwjgl.opengl.GL43.GL_STENCIL_INDEX16;
		GL_W.GL_RENDERBUFFER_WIDTH = org.lwjgl.opengl.GL43.GL_RENDERBUFFER_WIDTH;
		GL_W.GL_RENDERBUFFER_HEIGHT = org.lwjgl.opengl.GL43.GL_RENDERBUFFER_HEIGHT;
		GL_W.GL_RENDERBUFFER_INTERNAL_FORMAT = org.lwjgl.opengl.GL43.GL_RENDERBUFFER_INTERNAL_FORMAT;
		GL_W.GL_RENDERBUFFER_RED_SIZE = org.lwjgl.opengl.GL43.GL_RENDERBUFFER_RED_SIZE;
		GL_W.GL_RENDERBUFFER_GREEN_SIZE = org.lwjgl.opengl.GL43.GL_RENDERBUFFER_GREEN_SIZE;
		GL_W.GL_RENDERBUFFER_BLUE_SIZE = org.lwjgl.opengl.GL43.GL_RENDERBUFFER_BLUE_SIZE;
		GL_W.GL_RENDERBUFFER_ALPHA_SIZE = org.lwjgl.opengl.GL43.GL_RENDERBUFFER_ALPHA_SIZE;
		GL_W.GL_RENDERBUFFER_DEPTH_SIZE = org.lwjgl.opengl.GL43.GL_RENDERBUFFER_DEPTH_SIZE;
		GL_W.GL_RENDERBUFFER_STENCIL_SIZE = org.lwjgl.opengl.GL43.GL_RENDERBUFFER_STENCIL_SIZE;
		GL_W.GL_RENDERBUFFER_SAMPLES = org.lwjgl.opengl.GL43.GL_RENDERBUFFER_SAMPLES;
		GL_W.GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE = org.lwjgl.opengl.GL43.GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE;
		GL_W.GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME = org.lwjgl.opengl.GL43.GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME;
		GL_W.GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL = org.lwjgl.opengl.GL43.GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL;
		GL_W.GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE = org.lwjgl.opengl.GL43.GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE;
		GL_W.GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER = org.lwjgl.opengl.GL43.GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER;
		GL_W.GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING = org.lwjgl.opengl.GL43.GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING;
		GL_W.GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE = org.lwjgl.opengl.GL43.GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE;
		GL_W.GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE = org.lwjgl.opengl.GL43.GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE;
		GL_W.GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE = org.lwjgl.opengl.GL43.GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE;
		GL_W.GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE = org.lwjgl.opengl.GL43.GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE;
		GL_W.GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE = org.lwjgl.opengl.GL43.GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE;
		GL_W.GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE = org.lwjgl.opengl.GL43.GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE;
		GL_W.GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE = org.lwjgl.opengl.GL43.GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE;
		GL_W.GL_FRAMEBUFFER_DEFAULT = org.lwjgl.opengl.GL43.GL_FRAMEBUFFER_DEFAULT;
		GL_W.GL_INDEX = org.lwjgl.opengl.GL43.GL_INDEX;
		GL_W.GL_COLOR_ATTACHMENT0 = org.lwjgl.opengl.GL43.GL_COLOR_ATTACHMENT0;
		GL_W.GL_COLOR_ATTACHMENT1 = org.lwjgl.opengl.GL43.GL_COLOR_ATTACHMENT1;
		GL_W.GL_COLOR_ATTACHMENT2 = org.lwjgl.opengl.GL43.GL_COLOR_ATTACHMENT2;
		GL_W.GL_COLOR_ATTACHMENT3 = org.lwjgl.opengl.GL43.GL_COLOR_ATTACHMENT3;
		GL_W.GL_COLOR_ATTACHMENT4 = org.lwjgl.opengl.GL43.GL_COLOR_ATTACHMENT4;
		GL_W.GL_COLOR_ATTACHMENT5 = org.lwjgl.opengl.GL43.GL_COLOR_ATTACHMENT5;
		GL_W.GL_COLOR_ATTACHMENT6 = org.lwjgl.opengl.GL43.GL_COLOR_ATTACHMENT6;
		GL_W.GL_COLOR_ATTACHMENT7 = org.lwjgl.opengl.GL43.GL_COLOR_ATTACHMENT7;
		GL_W.GL_COLOR_ATTACHMENT8 = org.lwjgl.opengl.GL43.GL_COLOR_ATTACHMENT8;
		GL_W.GL_COLOR_ATTACHMENT9 = org.lwjgl.opengl.GL43.GL_COLOR_ATTACHMENT9;
		GL_W.GL_COLOR_ATTACHMENT10 = org.lwjgl.opengl.GL43.GL_COLOR_ATTACHMENT10;
		GL_W.GL_COLOR_ATTACHMENT11 = org.lwjgl.opengl.GL43.GL_COLOR_ATTACHMENT11;
		GL_W.GL_COLOR_ATTACHMENT12 = org.lwjgl.opengl.GL43.GL_COLOR_ATTACHMENT12;
		GL_W.GL_COLOR_ATTACHMENT13 = org.lwjgl.opengl.GL43.GL_COLOR_ATTACHMENT13;
		GL_W.GL_COLOR_ATTACHMENT14 = org.lwjgl.opengl.GL43.GL_COLOR_ATTACHMENT14;
		GL_W.GL_COLOR_ATTACHMENT15 = org.lwjgl.opengl.GL43.GL_COLOR_ATTACHMENT15;
		GL_W.GL_COLOR_ATTACHMENT16 = org.lwjgl.opengl.GL43.GL_COLOR_ATTACHMENT16;
		GL_W.GL_COLOR_ATTACHMENT17 = org.lwjgl.opengl.GL43.GL_COLOR_ATTACHMENT17;
		GL_W.GL_COLOR_ATTACHMENT18 = org.lwjgl.opengl.GL43.GL_COLOR_ATTACHMENT18;
		GL_W.GL_COLOR_ATTACHMENT19 = org.lwjgl.opengl.GL43.GL_COLOR_ATTACHMENT19;
		GL_W.GL_COLOR_ATTACHMENT20 = org.lwjgl.opengl.GL43.GL_COLOR_ATTACHMENT20;
		GL_W.GL_COLOR_ATTACHMENT21 = org.lwjgl.opengl.GL43.GL_COLOR_ATTACHMENT21;
		GL_W.GL_COLOR_ATTACHMENT22 = org.lwjgl.opengl.GL43.GL_COLOR_ATTACHMENT22;
		GL_W.GL_COLOR_ATTACHMENT23 = org.lwjgl.opengl.GL43.GL_COLOR_ATTACHMENT23;
		GL_W.GL_COLOR_ATTACHMENT24 = org.lwjgl.opengl.GL43.GL_COLOR_ATTACHMENT24;
		GL_W.GL_COLOR_ATTACHMENT25 = org.lwjgl.opengl.GL43.GL_COLOR_ATTACHMENT25;
		GL_W.GL_COLOR_ATTACHMENT26 = org.lwjgl.opengl.GL43.GL_COLOR_ATTACHMENT26;
		GL_W.GL_COLOR_ATTACHMENT27 = org.lwjgl.opengl.GL43.GL_COLOR_ATTACHMENT27;
		GL_W.GL_COLOR_ATTACHMENT28 = org.lwjgl.opengl.GL43.GL_COLOR_ATTACHMENT28;
		GL_W.GL_COLOR_ATTACHMENT29 = org.lwjgl.opengl.GL43.GL_COLOR_ATTACHMENT29;
		GL_W.GL_COLOR_ATTACHMENT30 = org.lwjgl.opengl.GL43.GL_COLOR_ATTACHMENT30;
		GL_W.GL_COLOR_ATTACHMENT31 = org.lwjgl.opengl.GL43.GL_COLOR_ATTACHMENT31;
		GL_W.GL_DEPTH_ATTACHMENT = org.lwjgl.opengl.GL43.GL_DEPTH_ATTACHMENT;
		GL_W.GL_STENCIL_ATTACHMENT = org.lwjgl.opengl.GL43.GL_STENCIL_ATTACHMENT;
		GL_W.GL_DEPTH_STENCIL_ATTACHMENT = org.lwjgl.opengl.GL43.GL_DEPTH_STENCIL_ATTACHMENT;
		GL_W.GL_MAX_SAMPLES = org.lwjgl.opengl.GL43.GL_MAX_SAMPLES;
		GL_W.GL_FRAMEBUFFER_COMPLETE = org.lwjgl.opengl.GL43.GL_FRAMEBUFFER_COMPLETE;
		GL_W.GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT = org.lwjgl.opengl.GL43.GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT;
		GL_W.GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT = org.lwjgl.opengl.GL43.GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT;
		GL_W.GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER = org.lwjgl.opengl.GL43.GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER;
		GL_W.GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER = org.lwjgl.opengl.GL43.GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER;
		GL_W.GL_FRAMEBUFFER_UNSUPPORTED = org.lwjgl.opengl.GL43.GL_FRAMEBUFFER_UNSUPPORTED;
		GL_W.GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE = org.lwjgl.opengl.GL43.GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE;
		GL_W.GL_FRAMEBUFFER_UNDEFINED = org.lwjgl.opengl.GL43.GL_FRAMEBUFFER_UNDEFINED;
		GL_W.GL_FRAMEBUFFER_BINDING = org.lwjgl.opengl.GL43.GL_FRAMEBUFFER_BINDING;
		GL_W.GL_DRAW_FRAMEBUFFER_BINDING = org.lwjgl.opengl.GL43.GL_DRAW_FRAMEBUFFER_BINDING;
		GL_W.GL_READ_FRAMEBUFFER_BINDING = org.lwjgl.opengl.GL43.GL_READ_FRAMEBUFFER_BINDING;
		GL_W.GL_RENDERBUFFER_BINDING = org.lwjgl.opengl.GL43.GL_RENDERBUFFER_BINDING;
		GL_W.GL_MAX_COLOR_ATTACHMENTS = org.lwjgl.opengl.GL43.GL_MAX_COLOR_ATTACHMENTS;
		GL_W.GL_MAX_RENDERBUFFER_SIZE = org.lwjgl.opengl.GL43.GL_MAX_RENDERBUFFER_SIZE;
		GL_W.GL_INVALID_FRAMEBUFFER_OPERATION = org.lwjgl.opengl.GL43.GL_INVALID_FRAMEBUFFER_OPERATION;
		GL_W.GL_DEPTH_STENCIL = org.lwjgl.opengl.GL43.GL_DEPTH_STENCIL;
		GL_W.GL_UNSIGNED_INT_24_8 = org.lwjgl.opengl.GL43.GL_UNSIGNED_INT_24_8;
		GL_W.GL_DEPTH24_STENCIL8 = org.lwjgl.opengl.GL43.GL_DEPTH24_STENCIL8;
		GL_W.GL_TEXTURE_STENCIL_SIZE = org.lwjgl.opengl.GL43.GL_TEXTURE_STENCIL_SIZE;
		GL_W.GL_HALF_FLOAT = org.lwjgl.opengl.GL43.GL_HALF_FLOAT;
		GL_W.GL_RGBA32UI = org.lwjgl.opengl.GL43.GL_RGBA32UI;
		GL_W.GL_RGB32UI = org.lwjgl.opengl.GL43.GL_RGB32UI;
		GL_W.GL_RGBA16UI = org.lwjgl.opengl.GL43.GL_RGBA16UI;
		GL_W.GL_RGB16UI = org.lwjgl.opengl.GL43.GL_RGB16UI;
		GL_W.GL_RGBA8UI = org.lwjgl.opengl.GL43.GL_RGBA8UI;
		GL_W.GL_RGB8UI = org.lwjgl.opengl.GL43.GL_RGB8UI;
		GL_W.GL_RGBA32I = org.lwjgl.opengl.GL43.GL_RGBA32I;
		GL_W.GL_RGB32I = org.lwjgl.opengl.GL43.GL_RGB32I;
		GL_W.GL_RGBA16I = org.lwjgl.opengl.GL43.GL_RGBA16I;
		GL_W.GL_RGB16I = org.lwjgl.opengl.GL43.GL_RGB16I;
		GL_W.GL_RGBA8I = org.lwjgl.opengl.GL43.GL_RGBA8I;
		GL_W.GL_RGB8I = org.lwjgl.opengl.GL43.GL_RGB8I;
		GL_W.GL_RED_INTEGER = org.lwjgl.opengl.GL43.GL_RED_INTEGER;
		GL_W.GL_GREEN_INTEGER = org.lwjgl.opengl.GL43.GL_GREEN_INTEGER;
		GL_W.GL_BLUE_INTEGER = org.lwjgl.opengl.GL43.GL_BLUE_INTEGER;
		GL_W.GL_ALPHA_INTEGER = org.lwjgl.opengl.GL43.GL_ALPHA_INTEGER;
		GL_W.GL_RGB_INTEGER = org.lwjgl.opengl.GL43.GL_RGB_INTEGER;
		GL_W.GL_RGBA_INTEGER = org.lwjgl.opengl.GL43.GL_RGBA_INTEGER;
		GL_W.GL_BGR_INTEGER = org.lwjgl.opengl.GL43.GL_BGR_INTEGER;
		GL_W.GL_BGRA_INTEGER = org.lwjgl.opengl.GL43.GL_BGRA_INTEGER;
		GL_W.GL_TEXTURE_1D_ARRAY = org.lwjgl.opengl.GL43.GL_TEXTURE_1D_ARRAY;
		GL_W.GL_TEXTURE_2D_ARRAY = org.lwjgl.opengl.GL43.GL_TEXTURE_2D_ARRAY;
		GL_W.GL_PROXY_TEXTURE_2D_ARRAY = org.lwjgl.opengl.GL43.GL_PROXY_TEXTURE_2D_ARRAY;
		GL_W.GL_PROXY_TEXTURE_1D_ARRAY = org.lwjgl.opengl.GL43.GL_PROXY_TEXTURE_1D_ARRAY;
		GL_W.GL_TEXTURE_BINDING_1D_ARRAY = org.lwjgl.opengl.GL43.GL_TEXTURE_BINDING_1D_ARRAY;
		GL_W.GL_TEXTURE_BINDING_2D_ARRAY = org.lwjgl.opengl.GL43.GL_TEXTURE_BINDING_2D_ARRAY;
		GL_W.GL_MAX_ARRAY_TEXTURE_LAYERS = org.lwjgl.opengl.GL43.GL_MAX_ARRAY_TEXTURE_LAYERS;
		GL_W.GL_COMPRESSED_RED_RGTC1 = org.lwjgl.opengl.GL43.GL_COMPRESSED_RED_RGTC1;
		GL_W.GL_COMPRESSED_SIGNED_RED_RGTC1 = org.lwjgl.opengl.GL43.GL_COMPRESSED_SIGNED_RED_RGTC1;
		GL_W.GL_COMPRESSED_RG_RGTC2 = org.lwjgl.opengl.GL43.GL_COMPRESSED_RG_RGTC2;
		GL_W.GL_COMPRESSED_SIGNED_RG_RGTC2 = org.lwjgl.opengl.GL43.GL_COMPRESSED_SIGNED_RG_RGTC2;
		GL_W.GL_R8 = org.lwjgl.opengl.GL43.GL_R8;
		GL_W.GL_R16 = org.lwjgl.opengl.GL43.GL_R16;
		GL_W.GL_RG8 = org.lwjgl.opengl.GL43.GL_RG8;
		GL_W.GL_RG16 = org.lwjgl.opengl.GL43.GL_RG16;
		GL_W.GL_R16F = org.lwjgl.opengl.GL43.GL_R16F;
		GL_W.GL_R32F = org.lwjgl.opengl.GL43.GL_R32F;
		GL_W.GL_RG16F = org.lwjgl.opengl.GL43.GL_RG16F;
		GL_W.GL_RG32F = org.lwjgl.opengl.GL43.GL_RG32F;
		GL_W.GL_R8I = org.lwjgl.opengl.GL43.GL_R8I;
		GL_W.GL_R8UI = org.lwjgl.opengl.GL43.GL_R8UI;
		GL_W.GL_R16I = org.lwjgl.opengl.GL43.GL_R16I;
		GL_W.GL_R16UI = org.lwjgl.opengl.GL43.GL_R16UI;
		GL_W.GL_R32I = org.lwjgl.opengl.GL43.GL_R32I;
		GL_W.GL_R32UI = org.lwjgl.opengl.GL43.GL_R32UI;
		GL_W.GL_RG8I = org.lwjgl.opengl.GL43.GL_RG8I;
		GL_W.GL_RG8UI = org.lwjgl.opengl.GL43.GL_RG8UI;
		GL_W.GL_RG16I = org.lwjgl.opengl.GL43.GL_RG16I;
		GL_W.GL_RG16UI = org.lwjgl.opengl.GL43.GL_RG16UI;
		GL_W.GL_RG32I = org.lwjgl.opengl.GL43.GL_RG32I;
		GL_W.GL_RG32UI = org.lwjgl.opengl.GL43.GL_RG32UI;
		GL_W.GL_RG = org.lwjgl.opengl.GL43.GL_RG;
		GL_W.GL_COMPRESSED_RED = org.lwjgl.opengl.GL43.GL_COMPRESSED_RED;
		GL_W.GL_COMPRESSED_RG = org.lwjgl.opengl.GL43.GL_COMPRESSED_RG;
		GL_W.GL_RG_INTEGER = org.lwjgl.opengl.GL43.GL_RG_INTEGER;
		GL_W.GL_TRANSFORM_FEEDBACK_BUFFER = org.lwjgl.opengl.GL43.GL_TRANSFORM_FEEDBACK_BUFFER;
		GL_W.GL_TRANSFORM_FEEDBACK_BUFFER_START = org.lwjgl.opengl.GL43.GL_TRANSFORM_FEEDBACK_BUFFER_START;
		GL_W.GL_TRANSFORM_FEEDBACK_BUFFER_SIZE = org.lwjgl.opengl.GL43.GL_TRANSFORM_FEEDBACK_BUFFER_SIZE;
		GL_W.GL_TRANSFORM_FEEDBACK_BUFFER_BINDING = org.lwjgl.opengl.GL43.GL_TRANSFORM_FEEDBACK_BUFFER_BINDING;
		GL_W.GL_INTERLEAVED_ATTRIBS = org.lwjgl.opengl.GL43.GL_INTERLEAVED_ATTRIBS;
		GL_W.GL_SEPARATE_ATTRIBS = org.lwjgl.opengl.GL43.GL_SEPARATE_ATTRIBS;
		GL_W.GL_PRIMITIVES_GENERATED = org.lwjgl.opengl.GL43.GL_PRIMITIVES_GENERATED;
		GL_W.GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN = org.lwjgl.opengl.GL43.GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN;
		GL_W.GL_RASTERIZER_DISCARD = org.lwjgl.opengl.GL43.GL_RASTERIZER_DISCARD;
		GL_W.GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS = org.lwjgl.opengl.GL43.GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS;
		GL_W.GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS = org.lwjgl.opengl.GL43.GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS;
		GL_W.GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS = org.lwjgl.opengl.GL43.GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS;
		GL_W.GL_TRANSFORM_FEEDBACK_VARYINGS = org.lwjgl.opengl.GL43.GL_TRANSFORM_FEEDBACK_VARYINGS;
		GL_W.GL_TRANSFORM_FEEDBACK_BUFFER_MODE = org.lwjgl.opengl.GL43.GL_TRANSFORM_FEEDBACK_BUFFER_MODE;
		GL_W.GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH = org.lwjgl.opengl.GL43.GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH;
		GL_W.GL_VERTEX_ARRAY_BINDING = org.lwjgl.opengl.GL43.GL_VERTEX_ARRAY_BINDING;
		GL_W.GL_FRAMEBUFFER_SRGB = org.lwjgl.opengl.GL43.GL_FRAMEBUFFER_SRGB;
		GL_W.GL_CURRENT_RASTER_SECONDARY_COLOR = org.lwjgl.opengl.GL43.GL_CURRENT_RASTER_SECONDARY_COLOR;
		GL_W.GL_FLOAT_MAT2x3 = org.lwjgl.opengl.GL43.GL_FLOAT_MAT2x3;
		GL_W.GL_FLOAT_MAT2x4 = org.lwjgl.opengl.GL43.GL_FLOAT_MAT2x4;
		GL_W.GL_FLOAT_MAT3x2 = org.lwjgl.opengl.GL43.GL_FLOAT_MAT3x2;
		GL_W.GL_FLOAT_MAT3x4 = org.lwjgl.opengl.GL43.GL_FLOAT_MAT3x4;
		GL_W.GL_FLOAT_MAT4x2 = org.lwjgl.opengl.GL43.GL_FLOAT_MAT4x2;
		GL_W.GL_FLOAT_MAT4x3 = org.lwjgl.opengl.GL43.GL_FLOAT_MAT4x3;
		GL_W.GL_PIXEL_PACK_BUFFER = org.lwjgl.opengl.GL43.GL_PIXEL_PACK_BUFFER;
		GL_W.GL_PIXEL_UNPACK_BUFFER = org.lwjgl.opengl.GL43.GL_PIXEL_UNPACK_BUFFER;
		GL_W.GL_PIXEL_PACK_BUFFER_BINDING = org.lwjgl.opengl.GL43.GL_PIXEL_PACK_BUFFER_BINDING;
		GL_W.GL_PIXEL_UNPACK_BUFFER_BINDING = org.lwjgl.opengl.GL43.GL_PIXEL_UNPACK_BUFFER_BINDING;
		GL_W.GL_SRGB = org.lwjgl.opengl.GL43.GL_SRGB;
		GL_W.GL_SRGB8 = org.lwjgl.opengl.GL43.GL_SRGB8;
		GL_W.GL_SRGB_ALPHA = org.lwjgl.opengl.GL43.GL_SRGB_ALPHA;
		GL_W.GL_SRGB8_ALPHA8 = org.lwjgl.opengl.GL43.GL_SRGB8_ALPHA8;
		GL_W.GL_SLUMINANCE_ALPHA = org.lwjgl.opengl.GL43.GL_SLUMINANCE_ALPHA;
		GL_W.GL_SLUMINANCE8_ALPHA8 = org.lwjgl.opengl.GL43.GL_SLUMINANCE8_ALPHA8;
		GL_W.GL_SLUMINANCE = org.lwjgl.opengl.GL43.GL_SLUMINANCE;
		GL_W.GL_SLUMINANCE8 = org.lwjgl.opengl.GL43.GL_SLUMINANCE8;
		GL_W.GL_COMPRESSED_SRGB = org.lwjgl.opengl.GL43.GL_COMPRESSED_SRGB;
		GL_W.GL_COMPRESSED_SRGB_ALPHA = org.lwjgl.opengl.GL43.GL_COMPRESSED_SRGB_ALPHA;
		GL_W.GL_COMPRESSED_SLUMINANCE = org.lwjgl.opengl.GL43.GL_COMPRESSED_SLUMINANCE;
		GL_W.GL_COMPRESSED_SLUMINANCE_ALPHA = org.lwjgl.opengl.GL43.GL_COMPRESSED_SLUMINANCE_ALPHA;
		GL_W.GL_SHADING_LANGUAGE_VERSION = org.lwjgl.opengl.GL43.GL_SHADING_LANGUAGE_VERSION;
		GL_W.GL_CURRENT_PROGRAM = org.lwjgl.opengl.GL43.GL_CURRENT_PROGRAM;
		GL_W.GL_SHADER_TYPE = org.lwjgl.opengl.GL43.GL_SHADER_TYPE;
		GL_W.GL_DELETE_STATUS = org.lwjgl.opengl.GL43.GL_DELETE_STATUS;
		GL_W.GL_COMPILE_STATUS = org.lwjgl.opengl.GL43.GL_COMPILE_STATUS;
		GL_W.GL_LINK_STATUS = org.lwjgl.opengl.GL43.GL_LINK_STATUS;
		GL_W.GL_VALIDATE_STATUS = org.lwjgl.opengl.GL43.GL_VALIDATE_STATUS;
		GL_W.GL_INFO_LOG_LENGTH = org.lwjgl.opengl.GL43.GL_INFO_LOG_LENGTH;
		GL_W.GL_ATTACHED_SHADERS = org.lwjgl.opengl.GL43.GL_ATTACHED_SHADERS;
		GL_W.GL_ACTIVE_UNIFORMS = org.lwjgl.opengl.GL43.GL_ACTIVE_UNIFORMS;
		GL_W.GL_ACTIVE_UNIFORM_MAX_LENGTH = org.lwjgl.opengl.GL43.GL_ACTIVE_UNIFORM_MAX_LENGTH;
		GL_W.GL_ACTIVE_ATTRIBUTES = org.lwjgl.opengl.GL43.GL_ACTIVE_ATTRIBUTES;
		GL_W.GL_ACTIVE_ATTRIBUTE_MAX_LENGTH = org.lwjgl.opengl.GL43.GL_ACTIVE_ATTRIBUTE_MAX_LENGTH;
		GL_W.GL_SHADER_SOURCE_LENGTH = org.lwjgl.opengl.GL43.GL_SHADER_SOURCE_LENGTH;
		GL_W.GL_FLOAT_VEC2 = org.lwjgl.opengl.GL43.GL_FLOAT_VEC2;
		GL_W.GL_FLOAT_VEC3 = org.lwjgl.opengl.GL43.GL_FLOAT_VEC3;
		GL_W.GL_FLOAT_VEC4 = org.lwjgl.opengl.GL43.GL_FLOAT_VEC4;
		GL_W.GL_INT_VEC2 = org.lwjgl.opengl.GL43.GL_INT_VEC2;
		GL_W.GL_INT_VEC3 = org.lwjgl.opengl.GL43.GL_INT_VEC3;
		GL_W.GL_INT_VEC4 = org.lwjgl.opengl.GL43.GL_INT_VEC4;
		GL_W.GL_BOOL = org.lwjgl.opengl.GL43.GL_BOOL;
		GL_W.GL_BOOL_VEC2 = org.lwjgl.opengl.GL43.GL_BOOL_VEC2;
		GL_W.GL_BOOL_VEC3 = org.lwjgl.opengl.GL43.GL_BOOL_VEC3;
		GL_W.GL_BOOL_VEC4 = org.lwjgl.opengl.GL43.GL_BOOL_VEC4;
		GL_W.GL_FLOAT_MAT2 = org.lwjgl.opengl.GL43.GL_FLOAT_MAT2;
		GL_W.GL_FLOAT_MAT3 = org.lwjgl.opengl.GL43.GL_FLOAT_MAT3;
		GL_W.GL_FLOAT_MAT4 = org.lwjgl.opengl.GL43.GL_FLOAT_MAT4;
		GL_W.GL_SAMPLER_1D = org.lwjgl.opengl.GL43.GL_SAMPLER_1D;
		GL_W.GL_SAMPLER_2D = org.lwjgl.opengl.GL43.GL_SAMPLER_2D;
		GL_W.GL_SAMPLER_3D = org.lwjgl.opengl.GL43.GL_SAMPLER_3D;
		GL_W.GL_SAMPLER_CUBE = org.lwjgl.opengl.GL43.GL_SAMPLER_CUBE;
		GL_W.GL_SAMPLER_1D_SHADOW = org.lwjgl.opengl.GL43.GL_SAMPLER_1D_SHADOW;
		GL_W.GL_SAMPLER_2D_SHADOW = org.lwjgl.opengl.GL43.GL_SAMPLER_2D_SHADOW;
		GL_W.GL_VERTEX_SHADER = org.lwjgl.opengl.GL43.GL_VERTEX_SHADER;
		GL_W.GL_MAX_VERTEX_UNIFORM_COMPONENTS = org.lwjgl.opengl.GL43.GL_MAX_VERTEX_UNIFORM_COMPONENTS;
		GL_W.GL_MAX_VARYING_FLOATS = org.lwjgl.opengl.GL43.GL_MAX_VARYING_FLOATS;
		GL_W.GL_MAX_VERTEX_ATTRIBS = org.lwjgl.opengl.GL43.GL_MAX_VERTEX_ATTRIBS;
		GL_W.GL_MAX_TEXTURE_IMAGE_UNITS = org.lwjgl.opengl.GL43.GL_MAX_TEXTURE_IMAGE_UNITS;
		GL_W.GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS = org.lwjgl.opengl.GL43.GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS;
		GL_W.GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS = org.lwjgl.opengl.GL43.GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS;
		GL_W.GL_MAX_TEXTURE_COORDS = org.lwjgl.opengl.GL43.GL_MAX_TEXTURE_COORDS;
		GL_W.GL_VERTEX_PROGRAM_POINT_SIZE = org.lwjgl.opengl.GL43.GL_VERTEX_PROGRAM_POINT_SIZE;
		GL_W.GL_VERTEX_PROGRAM_TWO_SIDE = org.lwjgl.opengl.GL43.GL_VERTEX_PROGRAM_TWO_SIDE;
		GL_W.GL_VERTEX_ATTRIB_ARRAY_ENABLED = org.lwjgl.opengl.GL43.GL_VERTEX_ATTRIB_ARRAY_ENABLED;
		GL_W.GL_VERTEX_ATTRIB_ARRAY_SIZE = org.lwjgl.opengl.GL43.GL_VERTEX_ATTRIB_ARRAY_SIZE;
		GL_W.GL_VERTEX_ATTRIB_ARRAY_STRIDE = org.lwjgl.opengl.GL43.GL_VERTEX_ATTRIB_ARRAY_STRIDE;
		GL_W.GL_VERTEX_ATTRIB_ARRAY_TYPE = org.lwjgl.opengl.GL43.GL_VERTEX_ATTRIB_ARRAY_TYPE;
		GL_W.GL_VERTEX_ATTRIB_ARRAY_NORMALIZED = org.lwjgl.opengl.GL43.GL_VERTEX_ATTRIB_ARRAY_NORMALIZED;
		GL_W.GL_CURRENT_VERTEX_ATTRIB = org.lwjgl.opengl.GL43.GL_CURRENT_VERTEX_ATTRIB;
		GL_W.GL_VERTEX_ATTRIB_ARRAY_POINTER = org.lwjgl.opengl.GL43.GL_VERTEX_ATTRIB_ARRAY_POINTER;
		GL_W.GL_FRAGMENT_SHADER = org.lwjgl.opengl.GL43.GL_FRAGMENT_SHADER;
		GL_W.GL_MAX_FRAGMENT_UNIFORM_COMPONENTS = org.lwjgl.opengl.GL43.GL_MAX_FRAGMENT_UNIFORM_COMPONENTS;
		GL_W.GL_FRAGMENT_SHADER_DERIVATIVE_HINT = org.lwjgl.opengl.GL43.GL_FRAGMENT_SHADER_DERIVATIVE_HINT;
		GL_W.GL_MAX_DRAW_BUFFERS = org.lwjgl.opengl.GL43.GL_MAX_DRAW_BUFFERS;
		GL_W.GL_DRAW_BUFFER0 = org.lwjgl.opengl.GL43.GL_DRAW_BUFFER0;
		GL_W.GL_DRAW_BUFFER1 = org.lwjgl.opengl.GL43.GL_DRAW_BUFFER1;
		GL_W.GL_DRAW_BUFFER2 = org.lwjgl.opengl.GL43.GL_DRAW_BUFFER2;
		GL_W.GL_DRAW_BUFFER3 = org.lwjgl.opengl.GL43.GL_DRAW_BUFFER3;
		GL_W.GL_DRAW_BUFFER4 = org.lwjgl.opengl.GL43.GL_DRAW_BUFFER4;
		GL_W.GL_DRAW_BUFFER5 = org.lwjgl.opengl.GL43.GL_DRAW_BUFFER5;
		GL_W.GL_DRAW_BUFFER6 = org.lwjgl.opengl.GL43.GL_DRAW_BUFFER6;
		GL_W.GL_DRAW_BUFFER7 = org.lwjgl.opengl.GL43.GL_DRAW_BUFFER7;
		GL_W.GL_DRAW_BUFFER8 = org.lwjgl.opengl.GL43.GL_DRAW_BUFFER8;
		GL_W.GL_DRAW_BUFFER9 = org.lwjgl.opengl.GL43.GL_DRAW_BUFFER9;
		GL_W.GL_DRAW_BUFFER10 = org.lwjgl.opengl.GL43.GL_DRAW_BUFFER10;
		GL_W.GL_DRAW_BUFFER11 = org.lwjgl.opengl.GL43.GL_DRAW_BUFFER11;
		GL_W.GL_DRAW_BUFFER12 = org.lwjgl.opengl.GL43.GL_DRAW_BUFFER12;
		GL_W.GL_DRAW_BUFFER13 = org.lwjgl.opengl.GL43.GL_DRAW_BUFFER13;
		GL_W.GL_DRAW_BUFFER14 = org.lwjgl.opengl.GL43.GL_DRAW_BUFFER14;
		GL_W.GL_DRAW_BUFFER15 = org.lwjgl.opengl.GL43.GL_DRAW_BUFFER15;
		GL_W.GL_POINT_SPRITE = org.lwjgl.opengl.GL43.GL_POINT_SPRITE;
		GL_W.GL_COORD_REPLACE = org.lwjgl.opengl.GL43.GL_COORD_REPLACE;
		GL_W.GL_POINT_SPRITE_COORD_ORIGIN = org.lwjgl.opengl.GL43.GL_POINT_SPRITE_COORD_ORIGIN;
		GL_W.GL_LOWER_LEFT = org.lwjgl.opengl.GL43.GL_LOWER_LEFT;
		GL_W.GL_UPPER_LEFT = org.lwjgl.opengl.GL43.GL_UPPER_LEFT;
		GL_W.GL_BLEND_EQUATION_RGB = org.lwjgl.opengl.GL43.GL_BLEND_EQUATION_RGB;
		GL_W.GL_BLEND_EQUATION_ALPHA = org.lwjgl.opengl.GL43.GL_BLEND_EQUATION_ALPHA;
		GL_W.GL_STENCIL_BACK_FUNC = org.lwjgl.opengl.GL43.GL_STENCIL_BACK_FUNC;
		GL_W.GL_STENCIL_BACK_FAIL = org.lwjgl.opengl.GL43.GL_STENCIL_BACK_FAIL;
		GL_W.GL_STENCIL_BACK_PASS_DEPTH_FAIL = org.lwjgl.opengl.GL43.GL_STENCIL_BACK_PASS_DEPTH_FAIL;
		GL_W.GL_STENCIL_BACK_PASS_DEPTH_PASS = org.lwjgl.opengl.GL43.GL_STENCIL_BACK_PASS_DEPTH_PASS;
		GL_W.GL_STENCIL_BACK_REF = org.lwjgl.opengl.GL43.GL_STENCIL_BACK_REF;
		GL_W.GL_STENCIL_BACK_VALUE_MASK = org.lwjgl.opengl.GL43.GL_STENCIL_BACK_VALUE_MASK;
		GL_W.GL_STENCIL_BACK_WRITEMASK = org.lwjgl.opengl.GL43.GL_STENCIL_BACK_WRITEMASK;
		GL_W.GL_FOG_COORD_SRC = org.lwjgl.opengl.GL43.GL_FOG_COORD_SRC;
		GL_W.GL_FOG_COORD = org.lwjgl.opengl.GL43.GL_FOG_COORD;
		GL_W.GL_CURRENT_FOG_COORD = org.lwjgl.opengl.GL43.GL_CURRENT_FOG_COORD;
		GL_W.GL_FOG_COORD_ARRAY_TYPE = org.lwjgl.opengl.GL43.GL_FOG_COORD_ARRAY_TYPE;
		GL_W.GL_FOG_COORD_ARRAY_STRIDE = org.lwjgl.opengl.GL43.GL_FOG_COORD_ARRAY_STRIDE;
		GL_W.GL_FOG_COORD_ARRAY_POINTER = org.lwjgl.opengl.GL43.GL_FOG_COORD_ARRAY_POINTER;
		GL_W.GL_FOG_COORD_ARRAY = org.lwjgl.opengl.GL43.GL_FOG_COORD_ARRAY;
		GL_W.GL_FOG_COORD_ARRAY_BUFFER_BINDING = org.lwjgl.opengl.GL43.GL_FOG_COORD_ARRAY_BUFFER_BINDING;
		GL_W.GL_SRC0_RGB = org.lwjgl.opengl.GL43.GL_SRC0_RGB;
		GL_W.GL_SRC1_RGB = org.lwjgl.opengl.GL43.GL_SRC1_RGB;
		GL_W.GL_SRC2_RGB = org.lwjgl.opengl.GL43.GL_SRC2_RGB;
		GL_W.GL_SRC0_ALPHA = org.lwjgl.opengl.GL43.GL_SRC0_ALPHA;
		GL_W.GL_SRC1_ALPHA = org.lwjgl.opengl.GL43.GL_SRC1_ALPHA;
		GL_W.GL_SRC2_ALPHA = org.lwjgl.opengl.GL43.GL_SRC2_ALPHA;
		GL_W.GL_ARRAY_BUFFER = org.lwjgl.opengl.GL43.GL_ARRAY_BUFFER;
		GL_W.GL_ELEMENT_ARRAY_BUFFER = org.lwjgl.opengl.GL43.GL_ELEMENT_ARRAY_BUFFER;
		GL_W.GL_ARRAY_BUFFER_BINDING = org.lwjgl.opengl.GL43.GL_ARRAY_BUFFER_BINDING;
		GL_W.GL_ELEMENT_ARRAY_BUFFER_BINDING = org.lwjgl.opengl.GL43.GL_ELEMENT_ARRAY_BUFFER_BINDING;
		GL_W.GL_VERTEX_ARRAY_BUFFER_BINDING = org.lwjgl.opengl.GL43.GL_VERTEX_ARRAY_BUFFER_BINDING;
		GL_W.GL_NORMAL_ARRAY_BUFFER_BINDING = org.lwjgl.opengl.GL43.GL_NORMAL_ARRAY_BUFFER_BINDING;
		GL_W.GL_COLOR_ARRAY_BUFFER_BINDING = org.lwjgl.opengl.GL43.GL_COLOR_ARRAY_BUFFER_BINDING;
		GL_W.GL_INDEX_ARRAY_BUFFER_BINDING = org.lwjgl.opengl.GL43.GL_INDEX_ARRAY_BUFFER_BINDING;
		GL_W.GL_TEXTURE_COORD_ARRAY_BUFFER_BINDING = org.lwjgl.opengl.GL43.GL_TEXTURE_COORD_ARRAY_BUFFER_BINDING;
		GL_W.GL_EDGE_FLAG_ARRAY_BUFFER_BINDING = org.lwjgl.opengl.GL43.GL_EDGE_FLAG_ARRAY_BUFFER_BINDING;
		GL_W.GL_SECONDARY_COLOR_ARRAY_BUFFER_BINDING = org.lwjgl.opengl.GL43.GL_SECONDARY_COLOR_ARRAY_BUFFER_BINDING;
		GL_W.GL_FOG_COORDINATE_ARRAY_BUFFER_BINDING = org.lwjgl.opengl.GL43.GL_FOG_COORDINATE_ARRAY_BUFFER_BINDING;
		GL_W.GL_WEIGHT_ARRAY_BUFFER_BINDING = org.lwjgl.opengl.GL43.GL_WEIGHT_ARRAY_BUFFER_BINDING;
		GL_W.GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING = org.lwjgl.opengl.GL43.GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING;
		GL_W.GL_STREAM_DRAW = org.lwjgl.opengl.GL43.GL_STREAM_DRAW;
		GL_W.GL_STREAM_READ = org.lwjgl.opengl.GL43.GL_STREAM_READ;
		GL_W.GL_STREAM_COPY = org.lwjgl.opengl.GL43.GL_STREAM_COPY;
		GL_W.GL_STATIC_DRAW = org.lwjgl.opengl.GL43.GL_STATIC_DRAW;
		GL_W.GL_STATIC_READ = org.lwjgl.opengl.GL43.GL_STATIC_READ;
		GL_W.GL_STATIC_COPY = org.lwjgl.opengl.GL43.GL_STATIC_COPY;
		GL_W.GL_DYNAMIC_DRAW = org.lwjgl.opengl.GL43.GL_DYNAMIC_DRAW;
		GL_W.GL_DYNAMIC_READ = org.lwjgl.opengl.GL43.GL_DYNAMIC_READ;
		GL_W.GL_DYNAMIC_COPY = org.lwjgl.opengl.GL43.GL_DYNAMIC_COPY;
		GL_W.GL_READ_ONLY = org.lwjgl.opengl.GL43.GL_READ_ONLY;
		GL_W.GL_WRITE_ONLY = org.lwjgl.opengl.GL43.GL_WRITE_ONLY;
		GL_W.GL_READ_WRITE = org.lwjgl.opengl.GL43.GL_READ_WRITE;
		GL_W.GL_BUFFER_SIZE = org.lwjgl.opengl.GL43.GL_BUFFER_SIZE;
		GL_W.GL_BUFFER_USAGE = org.lwjgl.opengl.GL43.GL_BUFFER_USAGE;
		GL_W.GL_BUFFER_ACCESS = org.lwjgl.opengl.GL43.GL_BUFFER_ACCESS;
		GL_W.GL_BUFFER_MAPPED = org.lwjgl.opengl.GL43.GL_BUFFER_MAPPED;
		GL_W.GL_BUFFER_MAP_POINTER = org.lwjgl.opengl.GL43.GL_BUFFER_MAP_POINTER;
		GL_W.GL_SAMPLES_PASSED = org.lwjgl.opengl.GL43.GL_SAMPLES_PASSED;
		GL_W.GL_QUERY_COUNTER_BITS = org.lwjgl.opengl.GL43.GL_QUERY_COUNTER_BITS;
		GL_W.GL_CURRENT_QUERY = org.lwjgl.opengl.GL43.GL_CURRENT_QUERY;
		GL_W.GL_QUERY_RESULT = org.lwjgl.opengl.GL43.GL_QUERY_RESULT;
		GL_W.GL_QUERY_RESULT_AVAILABLE = org.lwjgl.opengl.GL43.GL_QUERY_RESULT_AVAILABLE;
		GL_W.GL_GENERATE_MIPMAP = org.lwjgl.opengl.GL43.GL_GENERATE_MIPMAP;
		GL_W.GL_GENERATE_MIPMAP_HINT = org.lwjgl.opengl.GL43.GL_GENERATE_MIPMAP_HINT;
		GL_W.GL_CONSTANT_COLOR = org.lwjgl.opengl.GL43.GL_CONSTANT_COLOR;
		GL_W.GL_ONE_MINUS_CONSTANT_COLOR = org.lwjgl.opengl.GL43.GL_ONE_MINUS_CONSTANT_COLOR;
		GL_W.GL_CONSTANT_ALPHA = org.lwjgl.opengl.GL43.GL_CONSTANT_ALPHA;
		GL_W.GL_ONE_MINUS_CONSTANT_ALPHA = org.lwjgl.opengl.GL43.GL_ONE_MINUS_CONSTANT_ALPHA;
		GL_W.GL_FUNC_ADD = org.lwjgl.opengl.GL43.GL_FUNC_ADD;
		GL_W.GL_MIN = org.lwjgl.opengl.GL43.GL_MIN;
		GL_W.GL_MAX = org.lwjgl.opengl.GL43.GL_MAX;
		GL_W.GL_FUNC_SUBTRACT = org.lwjgl.opengl.GL43.GL_FUNC_SUBTRACT;
		GL_W.GL_FUNC_REVERSE_SUBTRACT = org.lwjgl.opengl.GL43.GL_FUNC_REVERSE_SUBTRACT;
		GL_W.GL_DEPTH_COMPONENT16 = org.lwjgl.opengl.GL43.GL_DEPTH_COMPONENT16;
		GL_W.GL_DEPTH_COMPONENT24 = org.lwjgl.opengl.GL43.GL_DEPTH_COMPONENT24;
		GL_W.GL_DEPTH_COMPONENT32 = org.lwjgl.opengl.GL43.GL_DEPTH_COMPONENT32;
		GL_W.GL_TEXTURE_DEPTH_SIZE = org.lwjgl.opengl.GL43.GL_TEXTURE_DEPTH_SIZE;
		GL_W.GL_DEPTH_TEXTURE_MODE = org.lwjgl.opengl.GL43.GL_DEPTH_TEXTURE_MODE;
		GL_W.GL_TEXTURE_COMPARE_MODE = org.lwjgl.opengl.GL43.GL_TEXTURE_COMPARE_MODE;
		GL_W.GL_TEXTURE_COMPARE_FUNC = org.lwjgl.opengl.GL43.GL_TEXTURE_COMPARE_FUNC;
		GL_W.GL_COMPARE_R_TO_TEXTURE = org.lwjgl.opengl.GL43.GL_COMPARE_R_TO_TEXTURE;
		GL_W.GL_FOG_COORDINATE_SOURCE = org.lwjgl.opengl.GL43.GL_FOG_COORDINATE_SOURCE;
		GL_W.GL_FOG_COORDINATE = org.lwjgl.opengl.GL43.GL_FOG_COORDINATE;
		GL_W.GL_FRAGMENT_DEPTH = org.lwjgl.opengl.GL43.GL_FRAGMENT_DEPTH;
		GL_W.GL_CURRENT_FOG_COORDINATE = org.lwjgl.opengl.GL43.GL_CURRENT_FOG_COORDINATE;
		GL_W.GL_FOG_COORDINATE_ARRAY_TYPE = org.lwjgl.opengl.GL43.GL_FOG_COORDINATE_ARRAY_TYPE;
		GL_W.GL_FOG_COORDINATE_ARRAY_STRIDE = org.lwjgl.opengl.GL43.GL_FOG_COORDINATE_ARRAY_STRIDE;
		GL_W.GL_FOG_COORDINATE_ARRAY_POINTER = org.lwjgl.opengl.GL43.GL_FOG_COORDINATE_ARRAY_POINTER;
		GL_W.GL_FOG_COORDINATE_ARRAY = org.lwjgl.opengl.GL43.GL_FOG_COORDINATE_ARRAY;
		GL_W.GL_POINT_SIZE_MIN = org.lwjgl.opengl.GL43.GL_POINT_SIZE_MIN;
		GL_W.GL_POINT_SIZE_MAX = org.lwjgl.opengl.GL43.GL_POINT_SIZE_MAX;
		GL_W.GL_POINT_FADE_THRESHOLD_SIZE = org.lwjgl.opengl.GL43.GL_POINT_FADE_THRESHOLD_SIZE;
		GL_W.GL_POINT_DISTANCE_ATTENUATION = org.lwjgl.opengl.GL43.GL_POINT_DISTANCE_ATTENUATION;
		GL_W.GL_COLOR_SUM = org.lwjgl.opengl.GL43.GL_COLOR_SUM;
		GL_W.GL_CURRENT_SECONDARY_COLOR = org.lwjgl.opengl.GL43.GL_CURRENT_SECONDARY_COLOR;
		GL_W.GL_SECONDARY_COLOR_ARRAY_SIZE = org.lwjgl.opengl.GL43.GL_SECONDARY_COLOR_ARRAY_SIZE;
		GL_W.GL_SECONDARY_COLOR_ARRAY_TYPE = org.lwjgl.opengl.GL43.GL_SECONDARY_COLOR_ARRAY_TYPE;
		GL_W.GL_SECONDARY_COLOR_ARRAY_STRIDE = org.lwjgl.opengl.GL43.GL_SECONDARY_COLOR_ARRAY_STRIDE;
		GL_W.GL_SECONDARY_COLOR_ARRAY_POINTER = org.lwjgl.opengl.GL43.GL_SECONDARY_COLOR_ARRAY_POINTER;
		GL_W.GL_SECONDARY_COLOR_ARRAY = org.lwjgl.opengl.GL43.GL_SECONDARY_COLOR_ARRAY;
		GL_W.GL_BLEND_DST_RGB = org.lwjgl.opengl.GL43.GL_BLEND_DST_RGB;
		GL_W.GL_BLEND_SRC_RGB = org.lwjgl.opengl.GL43.GL_BLEND_SRC_RGB;
		GL_W.GL_BLEND_DST_ALPHA = org.lwjgl.opengl.GL43.GL_BLEND_DST_ALPHA;
		GL_W.GL_BLEND_SRC_ALPHA = org.lwjgl.opengl.GL43.GL_BLEND_SRC_ALPHA;
		GL_W.GL_INCR_WRAP = org.lwjgl.opengl.GL43.GL_INCR_WRAP;
		GL_W.GL_DECR_WRAP = org.lwjgl.opengl.GL43.GL_DECR_WRAP;
		GL_W.GL_TEXTURE_FILTER_CONTROL = org.lwjgl.opengl.GL43.GL_TEXTURE_FILTER_CONTROL;
		GL_W.GL_TEXTURE_LOD_BIAS = org.lwjgl.opengl.GL43.GL_TEXTURE_LOD_BIAS;
		GL_W.GL_MAX_TEXTURE_LOD_BIAS = org.lwjgl.opengl.GL43.GL_MAX_TEXTURE_LOD_BIAS;
		GL_W.GL_MIRRORED_REPEAT = org.lwjgl.opengl.GL43.GL_MIRRORED_REPEAT;
		GL_W.GL_COMPRESSED_ALPHA = org.lwjgl.opengl.GL43.GL_COMPRESSED_ALPHA;
		GL_W.GL_COMPRESSED_LUMINANCE = org.lwjgl.opengl.GL43.GL_COMPRESSED_LUMINANCE;
		GL_W.GL_COMPRESSED_LUMINANCE_ALPHA = org.lwjgl.opengl.GL43.GL_COMPRESSED_LUMINANCE_ALPHA;
		GL_W.GL_COMPRESSED_INTENSITY = org.lwjgl.opengl.GL43.GL_COMPRESSED_INTENSITY;
		GL_W.GL_COMPRESSED_RGB = org.lwjgl.opengl.GL43.GL_COMPRESSED_RGB;
		GL_W.GL_COMPRESSED_RGBA = org.lwjgl.opengl.GL43.GL_COMPRESSED_RGBA;
		GL_W.GL_TEXTURE_COMPRESSION_HINT = org.lwjgl.opengl.GL43.GL_TEXTURE_COMPRESSION_HINT;
		GL_W.GL_TEXTURE_COMPRESSED_IMAGE_SIZE = org.lwjgl.opengl.GL43.GL_TEXTURE_COMPRESSED_IMAGE_SIZE;
		GL_W.GL_TEXTURE_COMPRESSED = org.lwjgl.opengl.GL43.GL_TEXTURE_COMPRESSED;
		GL_W.GL_NUM_COMPRESSED_TEXTURE_FORMATS = org.lwjgl.opengl.GL43.GL_NUM_COMPRESSED_TEXTURE_FORMATS;
		GL_W.GL_COMPRESSED_TEXTURE_FORMATS = org.lwjgl.opengl.GL43.GL_COMPRESSED_TEXTURE_FORMATS;
		GL_W.GL_NORMAL_MAP = org.lwjgl.opengl.GL43.GL_NORMAL_MAP;
		GL_W.GL_REFLECTION_MAP = org.lwjgl.opengl.GL43.GL_REFLECTION_MAP;
		GL_W.GL_TEXTURE_CUBE_MAP = org.lwjgl.opengl.GL43.GL_TEXTURE_CUBE_MAP;
		GL_W.GL_TEXTURE_BINDING_CUBE_MAP = org.lwjgl.opengl.GL43.GL_TEXTURE_BINDING_CUBE_MAP;
		GL_W.GL_TEXTURE_CUBE_MAP_POSITIVE_X = org.lwjgl.opengl.GL43.GL_TEXTURE_CUBE_MAP_POSITIVE_X;
		GL_W.GL_TEXTURE_CUBE_MAP_NEGATIVE_X = org.lwjgl.opengl.GL43.GL_TEXTURE_CUBE_MAP_NEGATIVE_X;
		GL_W.GL_TEXTURE_CUBE_MAP_POSITIVE_Y = org.lwjgl.opengl.GL43.GL_TEXTURE_CUBE_MAP_POSITIVE_Y;
		GL_W.GL_TEXTURE_CUBE_MAP_NEGATIVE_Y = org.lwjgl.opengl.GL43.GL_TEXTURE_CUBE_MAP_NEGATIVE_Y;
		GL_W.GL_TEXTURE_CUBE_MAP_POSITIVE_Z = org.lwjgl.opengl.GL43.GL_TEXTURE_CUBE_MAP_POSITIVE_Z;
		GL_W.GL_TEXTURE_CUBE_MAP_NEGATIVE_Z = org.lwjgl.opengl.GL43.GL_TEXTURE_CUBE_MAP_NEGATIVE_Z;
		GL_W.GL_PROXY_TEXTURE_CUBE_MAP = org.lwjgl.opengl.GL43.GL_PROXY_TEXTURE_CUBE_MAP;
		GL_W.GL_MAX_CUBE_MAP_TEXTURE_SIZE = org.lwjgl.opengl.GL43.GL_MAX_CUBE_MAP_TEXTURE_SIZE;
		GL_W.GL_MULTISAMPLE = org.lwjgl.opengl.GL43.GL_MULTISAMPLE;
		GL_W.GL_SAMPLE_ALPHA_TO_COVERAGE = org.lwjgl.opengl.GL43.GL_SAMPLE_ALPHA_TO_COVERAGE;
		GL_W.GL_SAMPLE_ALPHA_TO_ONE = org.lwjgl.opengl.GL43.GL_SAMPLE_ALPHA_TO_ONE;
		GL_W.GL_SAMPLE_COVERAGE = org.lwjgl.opengl.GL43.GL_SAMPLE_COVERAGE;
		GL_W.GL_MULTISAMPLE_BIT = org.lwjgl.opengl.GL43.GL_MULTISAMPLE_BIT;
		GL_W.GL_SAMPLE_BUFFERS = org.lwjgl.opengl.GL43.GL_SAMPLE_BUFFERS;
		GL_W.GL_SAMPLES = org.lwjgl.opengl.GL43.GL_SAMPLES;
		GL_W.GL_SAMPLE_COVERAGE_VALUE = org.lwjgl.opengl.GL43.GL_SAMPLE_COVERAGE_VALUE;
		GL_W.GL_SAMPLE_COVERAGE_INVERT = org.lwjgl.opengl.GL43.GL_SAMPLE_COVERAGE_INVERT;
		GL_W.GL_TEXTURE0 = org.lwjgl.opengl.GL43.GL_TEXTURE0;
		GL_W.GL_TEXTURE1 = org.lwjgl.opengl.GL43.GL_TEXTURE1;
		GL_W.GL_TEXTURE2 = org.lwjgl.opengl.GL43.GL_TEXTURE2;
		GL_W.GL_TEXTURE3 = org.lwjgl.opengl.GL43.GL_TEXTURE3;
		GL_W.GL_TEXTURE4 = org.lwjgl.opengl.GL43.GL_TEXTURE4;
		GL_W.GL_TEXTURE5 = org.lwjgl.opengl.GL43.GL_TEXTURE5;
		GL_W.GL_TEXTURE6 = org.lwjgl.opengl.GL43.GL_TEXTURE6;
		GL_W.GL_TEXTURE7 = org.lwjgl.opengl.GL43.GL_TEXTURE7;
		GL_W.GL_TEXTURE8 = org.lwjgl.opengl.GL43.GL_TEXTURE8;
		GL_W.GL_TEXTURE9 = org.lwjgl.opengl.GL43.GL_TEXTURE9;
		GL_W.GL_TEXTURE10 = org.lwjgl.opengl.GL43.GL_TEXTURE10;
		GL_W.GL_TEXTURE11 = org.lwjgl.opengl.GL43.GL_TEXTURE11;
		GL_W.GL_TEXTURE12 = org.lwjgl.opengl.GL43.GL_TEXTURE12;
		GL_W.GL_TEXTURE13 = org.lwjgl.opengl.GL43.GL_TEXTURE13;
		GL_W.GL_TEXTURE14 = org.lwjgl.opengl.GL43.GL_TEXTURE14;
		GL_W.GL_TEXTURE15 = org.lwjgl.opengl.GL43.GL_TEXTURE15;
		GL_W.GL_TEXTURE16 = org.lwjgl.opengl.GL43.GL_TEXTURE16;
		GL_W.GL_TEXTURE17 = org.lwjgl.opengl.GL43.GL_TEXTURE17;
		GL_W.GL_TEXTURE18 = org.lwjgl.opengl.GL43.GL_TEXTURE18;
		GL_W.GL_TEXTURE19 = org.lwjgl.opengl.GL43.GL_TEXTURE19;
		GL_W.GL_TEXTURE20 = org.lwjgl.opengl.GL43.GL_TEXTURE20;
		GL_W.GL_TEXTURE21 = org.lwjgl.opengl.GL43.GL_TEXTURE21;
		GL_W.GL_TEXTURE22 = org.lwjgl.opengl.GL43.GL_TEXTURE22;
		GL_W.GL_TEXTURE23 = org.lwjgl.opengl.GL43.GL_TEXTURE23;
		GL_W.GL_TEXTURE24 = org.lwjgl.opengl.GL43.GL_TEXTURE24;
		GL_W.GL_TEXTURE25 = org.lwjgl.opengl.GL43.GL_TEXTURE25;
		GL_W.GL_TEXTURE26 = org.lwjgl.opengl.GL43.GL_TEXTURE26;
		GL_W.GL_TEXTURE27 = org.lwjgl.opengl.GL43.GL_TEXTURE27;
		GL_W.GL_TEXTURE28 = org.lwjgl.opengl.GL43.GL_TEXTURE28;
		GL_W.GL_TEXTURE29 = org.lwjgl.opengl.GL43.GL_TEXTURE29;
		GL_W.GL_TEXTURE30 = org.lwjgl.opengl.GL43.GL_TEXTURE30;
		GL_W.GL_TEXTURE31 = org.lwjgl.opengl.GL43.GL_TEXTURE31;
		GL_W.GL_ACTIVE_TEXTURE = org.lwjgl.opengl.GL43.GL_ACTIVE_TEXTURE;
		GL_W.GL_CLIENT_ACTIVE_TEXTURE = org.lwjgl.opengl.GL43.GL_CLIENT_ACTIVE_TEXTURE;
		GL_W.GL_MAX_TEXTURE_UNITS = org.lwjgl.opengl.GL43.GL_MAX_TEXTURE_UNITS;
		GL_W.GL_COMBINE = org.lwjgl.opengl.GL43.GL_COMBINE;
		GL_W.GL_COMBINE_RGB = org.lwjgl.opengl.GL43.GL_COMBINE_RGB;
		GL_W.GL_COMBINE_ALPHA = org.lwjgl.opengl.GL43.GL_COMBINE_ALPHA;
		GL_W.GL_SOURCE0_RGB = org.lwjgl.opengl.GL43.GL_SOURCE0_RGB;
		GL_W.GL_SOURCE1_RGB = org.lwjgl.opengl.GL43.GL_SOURCE1_RGB;
		GL_W.GL_SOURCE2_RGB = org.lwjgl.opengl.GL43.GL_SOURCE2_RGB;
		GL_W.GL_SOURCE0_ALPHA = org.lwjgl.opengl.GL43.GL_SOURCE0_ALPHA;
		GL_W.GL_SOURCE1_ALPHA = org.lwjgl.opengl.GL43.GL_SOURCE1_ALPHA;
		GL_W.GL_SOURCE2_ALPHA = org.lwjgl.opengl.GL43.GL_SOURCE2_ALPHA;
		GL_W.GL_OPERAND0_RGB = org.lwjgl.opengl.GL43.GL_OPERAND0_RGB;
		GL_W.GL_OPERAND1_RGB = org.lwjgl.opengl.GL43.GL_OPERAND1_RGB;
		GL_W.GL_OPERAND2_RGB = org.lwjgl.opengl.GL43.GL_OPERAND2_RGB;
		GL_W.GL_OPERAND0_ALPHA = org.lwjgl.opengl.GL43.GL_OPERAND0_ALPHA;
		GL_W.GL_OPERAND1_ALPHA = org.lwjgl.opengl.GL43.GL_OPERAND1_ALPHA;
		GL_W.GL_OPERAND2_ALPHA = org.lwjgl.opengl.GL43.GL_OPERAND2_ALPHA;
		GL_W.GL_RGB_SCALE = org.lwjgl.opengl.GL43.GL_RGB_SCALE;
		GL_W.GL_ADD_SIGNED = org.lwjgl.opengl.GL43.GL_ADD_SIGNED;
		GL_W.GL_INTERPOLATE = org.lwjgl.opengl.GL43.GL_INTERPOLATE;
		GL_W.GL_SUBTRACT = org.lwjgl.opengl.GL43.GL_SUBTRACT;
		GL_W.GL_CONSTANT = org.lwjgl.opengl.GL43.GL_CONSTANT;
		GL_W.GL_PRIMARY_COLOR = org.lwjgl.opengl.GL43.GL_PRIMARY_COLOR;
		GL_W.GL_PREVIOUS = org.lwjgl.opengl.GL43.GL_PREVIOUS;
		GL_W.GL_DOT3_RGB = org.lwjgl.opengl.GL43.GL_DOT3_RGB;
		GL_W.GL_DOT3_RGBA = org.lwjgl.opengl.GL43.GL_DOT3_RGBA;
		GL_W.GL_CLAMP_TO_BORDER = org.lwjgl.opengl.GL43.GL_CLAMP_TO_BORDER;
		GL_W.GL_TRANSPOSE_MODELVIEW_MATRIX = org.lwjgl.opengl.GL43.GL_TRANSPOSE_MODELVIEW_MATRIX;
		GL_W.GL_TRANSPOSE_PROJECTION_MATRIX = org.lwjgl.opengl.GL43.GL_TRANSPOSE_PROJECTION_MATRIX;
		GL_W.GL_TRANSPOSE_TEXTURE_MATRIX = org.lwjgl.opengl.GL43.GL_TRANSPOSE_TEXTURE_MATRIX;
		GL_W.GL_TRANSPOSE_COLOR_MATRIX = org.lwjgl.opengl.GL43.GL_TRANSPOSE_COLOR_MATRIX;
		GL_W.GL_ALIASED_POINT_SIZE_RANGE = org.lwjgl.opengl.GL43.GL_ALIASED_POINT_SIZE_RANGE;
		GL_W.GL_ALIASED_LINE_WIDTH_RANGE = org.lwjgl.opengl.GL43.GL_ALIASED_LINE_WIDTH_RANGE;
		GL_W.GL_SMOOTH_POINT_SIZE_RANGE = org.lwjgl.opengl.GL43.GL_SMOOTH_POINT_SIZE_RANGE;
		GL_W.GL_SMOOTH_POINT_SIZE_GRANULARITY = org.lwjgl.opengl.GL43.GL_SMOOTH_POINT_SIZE_GRANULARITY;
		GL_W.GL_SMOOTH_LINE_WIDTH_RANGE = org.lwjgl.opengl.GL43.GL_SMOOTH_LINE_WIDTH_RANGE;
		GL_W.GL_SMOOTH_LINE_WIDTH_GRANULARITY = org.lwjgl.opengl.GL43.GL_SMOOTH_LINE_WIDTH_GRANULARITY;
		GL_W.GL_TEXTURE_BINDING_3D = org.lwjgl.opengl.GL43.GL_TEXTURE_BINDING_3D;
		GL_W.GL_PACK_SKIP_IMAGES = org.lwjgl.opengl.GL43.GL_PACK_SKIP_IMAGES;
		GL_W.GL_PACK_IMAGE_HEIGHT = org.lwjgl.opengl.GL43.GL_PACK_IMAGE_HEIGHT;
		GL_W.GL_UNPACK_SKIP_IMAGES = org.lwjgl.opengl.GL43.GL_UNPACK_SKIP_IMAGES;
		GL_W.GL_UNPACK_IMAGE_HEIGHT = org.lwjgl.opengl.GL43.GL_UNPACK_IMAGE_HEIGHT;
		GL_W.GL_TEXTURE_3D = org.lwjgl.opengl.GL43.GL_TEXTURE_3D;
		GL_W.GL_PROXY_TEXTURE_3D = org.lwjgl.opengl.GL43.GL_PROXY_TEXTURE_3D;
		GL_W.GL_TEXTURE_DEPTH = org.lwjgl.opengl.GL43.GL_TEXTURE_DEPTH;
		GL_W.GL_TEXTURE_WRAP_R = org.lwjgl.opengl.GL43.GL_TEXTURE_WRAP_R;
		GL_W.GL_MAX_3D_TEXTURE_SIZE = org.lwjgl.opengl.GL43.GL_MAX_3D_TEXTURE_SIZE;
		GL_W.GL_BGR = org.lwjgl.opengl.GL43.GL_BGR;
		GL_W.GL_BGRA = org.lwjgl.opengl.GL43.GL_BGRA;
		GL_W.GL_UNSIGNED_BYTE_3_3_2 = org.lwjgl.opengl.GL43.GL_UNSIGNED_BYTE_3_3_2;
		GL_W.GL_UNSIGNED_BYTE_2_3_3_REV = org.lwjgl.opengl.GL43.GL_UNSIGNED_BYTE_2_3_3_REV;
		GL_W.GL_UNSIGNED_SHORT_5_6_5 = org.lwjgl.opengl.GL43.GL_UNSIGNED_SHORT_5_6_5;
		GL_W.GL_UNSIGNED_SHORT_5_6_5_REV = org.lwjgl.opengl.GL43.GL_UNSIGNED_SHORT_5_6_5_REV;
		GL_W.GL_UNSIGNED_SHORT_4_4_4_4 = org.lwjgl.opengl.GL43.GL_UNSIGNED_SHORT_4_4_4_4;
		GL_W.GL_UNSIGNED_SHORT_4_4_4_4_REV = org.lwjgl.opengl.GL43.GL_UNSIGNED_SHORT_4_4_4_4_REV;
		GL_W.GL_UNSIGNED_SHORT_5_5_5_1 = org.lwjgl.opengl.GL43.GL_UNSIGNED_SHORT_5_5_5_1;
		GL_W.GL_UNSIGNED_SHORT_1_5_5_5_REV = org.lwjgl.opengl.GL43.GL_UNSIGNED_SHORT_1_5_5_5_REV;
		GL_W.GL_UNSIGNED_INT_8_8_8_8 = org.lwjgl.opengl.GL43.GL_UNSIGNED_INT_8_8_8_8;
		GL_W.GL_UNSIGNED_INT_8_8_8_8_REV = org.lwjgl.opengl.GL43.GL_UNSIGNED_INT_8_8_8_8_REV;
		GL_W.GL_UNSIGNED_INT_10_10_10_2 = org.lwjgl.opengl.GL43.GL_UNSIGNED_INT_10_10_10_2;
		GL_W.GL_UNSIGNED_INT_2_10_10_10_REV = org.lwjgl.opengl.GL43.GL_UNSIGNED_INT_2_10_10_10_REV;
		GL_W.GL_RESCALE_NORMAL = org.lwjgl.opengl.GL43.GL_RESCALE_NORMAL;
		GL_W.GL_LIGHT_MODEL_COLOR_CONTROL = org.lwjgl.opengl.GL43.GL_LIGHT_MODEL_COLOR_CONTROL;
		GL_W.GL_SINGLE_COLOR = org.lwjgl.opengl.GL43.GL_SINGLE_COLOR;
		GL_W.GL_SEPARATE_SPECULAR_COLOR = org.lwjgl.opengl.GL43.GL_SEPARATE_SPECULAR_COLOR;
		GL_W.GL_CLAMP_TO_EDGE = org.lwjgl.opengl.GL43.GL_CLAMP_TO_EDGE;
		GL_W.GL_TEXTURE_MIN_LOD = org.lwjgl.opengl.GL43.GL_TEXTURE_MIN_LOD;
		GL_W.GL_TEXTURE_MAX_LOD = org.lwjgl.opengl.GL43.GL_TEXTURE_MAX_LOD;
		GL_W.GL_TEXTURE_BASE_LEVEL = org.lwjgl.opengl.GL43.GL_TEXTURE_BASE_LEVEL;
		GL_W.GL_TEXTURE_MAX_LEVEL = org.lwjgl.opengl.GL43.GL_TEXTURE_MAX_LEVEL;
		GL_W.GL_MAX_ELEMENTS_VERTICES = org.lwjgl.opengl.GL43.GL_MAX_ELEMENTS_VERTICES;
		GL_W.GL_MAX_ELEMENTS_INDICES = org.lwjgl.opengl.GL43.GL_MAX_ELEMENTS_INDICES;
		GL_W.GL_ACCUM = org.lwjgl.opengl.GL43.GL_ACCUM;
		GL_W.GL_LOAD = org.lwjgl.opengl.GL43.GL_LOAD;
		GL_W.GL_RETURN = org.lwjgl.opengl.GL43.GL_RETURN;
		GL_W.GL_MULT = org.lwjgl.opengl.GL43.GL_MULT;
		GL_W.GL_ADD = org.lwjgl.opengl.GL43.GL_ADD;
		GL_W.GL_NEVER = org.lwjgl.opengl.GL43.GL_NEVER;
		GL_W.GL_LESS = org.lwjgl.opengl.GL43.GL_LESS;
		GL_W.GL_EQUAL = org.lwjgl.opengl.GL43.GL_EQUAL;
		GL_W.GL_LEQUAL = org.lwjgl.opengl.GL43.GL_LEQUAL;
		GL_W.GL_GREATER = org.lwjgl.opengl.GL43.GL_GREATER;
		GL_W.GL_NOTEQUAL = org.lwjgl.opengl.GL43.GL_NOTEQUAL;
		GL_W.GL_GEQUAL = org.lwjgl.opengl.GL43.GL_GEQUAL;
		GL_W.GL_ALWAYS = org.lwjgl.opengl.GL43.GL_ALWAYS;
		GL_W.GL_CURRENT_BIT = org.lwjgl.opengl.GL43.GL_CURRENT_BIT;
		GL_W.GL_POINT_BIT = org.lwjgl.opengl.GL43.GL_POINT_BIT;
		GL_W.GL_LINE_BIT = org.lwjgl.opengl.GL43.GL_LINE_BIT;
		GL_W.GL_POLYGON_BIT = org.lwjgl.opengl.GL43.GL_POLYGON_BIT;
		GL_W.GL_POLYGON_STIPPLE_BIT = org.lwjgl.opengl.GL43.GL_POLYGON_STIPPLE_BIT;
		GL_W.GL_PIXEL_MODE_BIT = org.lwjgl.opengl.GL43.GL_PIXEL_MODE_BIT;
		GL_W.GL_LIGHTING_BIT = org.lwjgl.opengl.GL43.GL_LIGHTING_BIT;
		GL_W.GL_FOG_BIT = org.lwjgl.opengl.GL43.GL_FOG_BIT;
		GL_W.GL_DEPTH_BUFFER_BIT = org.lwjgl.opengl.GL43.GL_DEPTH_BUFFER_BIT;
		GL_W.GL_ACCUM_BUFFER_BIT = org.lwjgl.opengl.GL43.GL_ACCUM_BUFFER_BIT;
		GL_W.GL_STENCIL_BUFFER_BIT = org.lwjgl.opengl.GL43.GL_STENCIL_BUFFER_BIT;
		GL_W.GL_VIEWPORT_BIT = org.lwjgl.opengl.GL43.GL_VIEWPORT_BIT;
		GL_W.GL_TRANSFORM_BIT = org.lwjgl.opengl.GL43.GL_TRANSFORM_BIT;
		GL_W.GL_ENABLE_BIT = org.lwjgl.opengl.GL43.GL_ENABLE_BIT;
		GL_W.GL_COLOR_BUFFER_BIT = org.lwjgl.opengl.GL43.GL_COLOR_BUFFER_BIT;
		GL_W.GL_HINT_BIT = org.lwjgl.opengl.GL43.GL_HINT_BIT;
		GL_W.GL_EVAL_BIT = org.lwjgl.opengl.GL43.GL_EVAL_BIT;
		GL_W.GL_LIST_BIT = org.lwjgl.opengl.GL43.GL_LIST_BIT;
		GL_W.GL_TEXTURE_BIT = org.lwjgl.opengl.GL43.GL_TEXTURE_BIT;
		GL_W.GL_SCISSOR_BIT = org.lwjgl.opengl.GL43.GL_SCISSOR_BIT;
		GL_W.GL_ALL_ATTRIB_BITS = org.lwjgl.opengl.GL43.GL_ALL_ATTRIB_BITS;
		GL_W.GL_POINTS = org.lwjgl.opengl.GL43.GL_POINTS;
		GL_W.GL_LINES = org.lwjgl.opengl.GL43.GL_LINES;
		GL_W.GL_LINE_LOOP = org.lwjgl.opengl.GL43.GL_LINE_LOOP;
		GL_W.GL_LINE_STRIP = org.lwjgl.opengl.GL43.GL_LINE_STRIP;
		GL_W.GL_TRIANGLES = org.lwjgl.opengl.GL43.GL_TRIANGLES;
		GL_W.GL_TRIANGLE_STRIP = org.lwjgl.opengl.GL43.GL_TRIANGLE_STRIP;
		GL_W.GL_TRIANGLE_FAN = org.lwjgl.opengl.GL43.GL_TRIANGLE_FAN;
		GL_W.GL_QUADS = org.lwjgl.opengl.GL43.GL_QUADS;
		GL_W.GL_QUAD_STRIP = org.lwjgl.opengl.GL43.GL_QUAD_STRIP;
		GL_W.GL_POLYGON = org.lwjgl.opengl.GL43.GL_POLYGON;
		GL_W.GL_ZERO = org.lwjgl.opengl.GL43.GL_ZERO;
		GL_W.GL_ONE = org.lwjgl.opengl.GL43.GL_ONE;
		GL_W.GL_SRC_COLOR = org.lwjgl.opengl.GL43.GL_SRC_COLOR;
		GL_W.GL_ONE_MINUS_SRC_COLOR = org.lwjgl.opengl.GL43.GL_ONE_MINUS_SRC_COLOR;
		GL_W.GL_SRC_ALPHA = org.lwjgl.opengl.GL43.GL_SRC_ALPHA;
		GL_W.GL_ONE_MINUS_SRC_ALPHA = org.lwjgl.opengl.GL43.GL_ONE_MINUS_SRC_ALPHA;
		GL_W.GL_DST_ALPHA = org.lwjgl.opengl.GL43.GL_DST_ALPHA;
		GL_W.GL_ONE_MINUS_DST_ALPHA = org.lwjgl.opengl.GL43.GL_ONE_MINUS_DST_ALPHA;
		GL_W.GL_DST_COLOR = org.lwjgl.opengl.GL43.GL_DST_COLOR;
		GL_W.GL_ONE_MINUS_DST_COLOR = org.lwjgl.opengl.GL43.GL_ONE_MINUS_DST_COLOR;
		GL_W.GL_SRC_ALPHA_SATURATE = org.lwjgl.opengl.GL43.GL_SRC_ALPHA_SATURATE;
		GL_W.GL_TRUE = org.lwjgl.opengl.GL43.GL_TRUE;
		GL_W.GL_FALSE = org.lwjgl.opengl.GL43.GL_FALSE;
		GL_W.GL_CLIP_PLANE0 = org.lwjgl.opengl.GL43.GL_CLIP_PLANE0;
		GL_W.GL_CLIP_PLANE1 = org.lwjgl.opengl.GL43.GL_CLIP_PLANE1;
		GL_W.GL_CLIP_PLANE2 = org.lwjgl.opengl.GL43.GL_CLIP_PLANE2;
		GL_W.GL_CLIP_PLANE3 = org.lwjgl.opengl.GL43.GL_CLIP_PLANE3;
		GL_W.GL_CLIP_PLANE4 = org.lwjgl.opengl.GL43.GL_CLIP_PLANE4;
		GL_W.GL_CLIP_PLANE5 = org.lwjgl.opengl.GL43.GL_CLIP_PLANE5;
		GL_W.GL_BYTE = org.lwjgl.opengl.GL43.GL_BYTE;
		GL_W.GL_UNSIGNED_BYTE = org.lwjgl.opengl.GL43.GL_UNSIGNED_BYTE;
		GL_W.GL_SHORT = org.lwjgl.opengl.GL43.GL_SHORT;
		GL_W.GL_UNSIGNED_SHORT = org.lwjgl.opengl.GL43.GL_UNSIGNED_SHORT;
		GL_W.GL_INT = org.lwjgl.opengl.GL43.GL_INT;
		GL_W.GL_UNSIGNED_INT = org.lwjgl.opengl.GL43.GL_UNSIGNED_INT;
		GL_W.GL_FLOAT = org.lwjgl.opengl.GL43.GL_FLOAT;
		GL_W.GL_2_BYTES = org.lwjgl.opengl.GL43.GL_2_BYTES;
		GL_W.GL_3_BYTES = org.lwjgl.opengl.GL43.GL_3_BYTES;
		GL_W.GL_4_BYTES = org.lwjgl.opengl.GL43.GL_4_BYTES;
		GL_W.GL_DOUBLE = org.lwjgl.opengl.GL43.GL_DOUBLE;
		GL_W.GL_NONE = org.lwjgl.opengl.GL43.GL_NONE;
		GL_W.GL_FRONT_LEFT = org.lwjgl.opengl.GL43.GL_FRONT_LEFT;
		GL_W.GL_FRONT_RIGHT = org.lwjgl.opengl.GL43.GL_FRONT_RIGHT;
		GL_W.GL_BACK_LEFT = org.lwjgl.opengl.GL43.GL_BACK_LEFT;
		GL_W.GL_BACK_RIGHT = org.lwjgl.opengl.GL43.GL_BACK_RIGHT;
		GL_W.GL_FRONT = org.lwjgl.opengl.GL43.GL_FRONT;
		GL_W.GL_BACK = org.lwjgl.opengl.GL43.GL_BACK;
		GL_W.GL_LEFT = org.lwjgl.opengl.GL43.GL_LEFT;
		GL_W.GL_RIGHT = org.lwjgl.opengl.GL43.GL_RIGHT;
		GL_W.GL_FRONT_AND_BACK = org.lwjgl.opengl.GL43.GL_FRONT_AND_BACK;
		GL_W.GL_AUX0 = org.lwjgl.opengl.GL43.GL_AUX0;
		GL_W.GL_AUX1 = org.lwjgl.opengl.GL43.GL_AUX1;
		GL_W.GL_AUX2 = org.lwjgl.opengl.GL43.GL_AUX2;
		GL_W.GL_AUX3 = org.lwjgl.opengl.GL43.GL_AUX3;
		GL_W.GL_NO_ERROR = org.lwjgl.opengl.GL43.GL_NO_ERROR;
		GL_W.GL_INVALID_ENUM = org.lwjgl.opengl.GL43.GL_INVALID_ENUM;
		GL_W.GL_INVALID_VALUE = org.lwjgl.opengl.GL43.GL_INVALID_VALUE;
		GL_W.GL_INVALID_OPERATION = org.lwjgl.opengl.GL43.GL_INVALID_OPERATION;
		GL_W.GL_STACK_OVERFLOW = org.lwjgl.opengl.GL43.GL_STACK_OVERFLOW;
		GL_W.GL_STACK_UNDERFLOW = org.lwjgl.opengl.GL43.GL_STACK_UNDERFLOW;
		GL_W.GL_OUT_OF_MEMORY = org.lwjgl.opengl.GL43.GL_OUT_OF_MEMORY;
		GL_W.GL_2D = org.lwjgl.opengl.GL43.GL_2D;
		GL_W.GL_3D = org.lwjgl.opengl.GL43.GL_3D;
		GL_W.GL_3D_COLOR = org.lwjgl.opengl.GL43.GL_3D_COLOR;
		GL_W.GL_3D_COLOR_TEXTURE = org.lwjgl.opengl.GL43.GL_3D_COLOR_TEXTURE;
		GL_W.GL_4D_COLOR_TEXTURE = org.lwjgl.opengl.GL43.GL_4D_COLOR_TEXTURE;
		GL_W.GL_PASS_THROUGH_TOKEN = org.lwjgl.opengl.GL43.GL_PASS_THROUGH_TOKEN;
		GL_W.GL_POINT_TOKEN = org.lwjgl.opengl.GL43.GL_POINT_TOKEN;
		GL_W.GL_LINE_TOKEN = org.lwjgl.opengl.GL43.GL_LINE_TOKEN;
		GL_W.GL_POLYGON_TOKEN = org.lwjgl.opengl.GL43.GL_POLYGON_TOKEN;
		GL_W.GL_BITMAP_TOKEN = org.lwjgl.opengl.GL43.GL_BITMAP_TOKEN;
		GL_W.GL_DRAW_PIXEL_TOKEN = org.lwjgl.opengl.GL43.GL_DRAW_PIXEL_TOKEN;
		GL_W.GL_COPY_PIXEL_TOKEN = org.lwjgl.opengl.GL43.GL_COPY_PIXEL_TOKEN;
		GL_W.GL_LINE_RESET_TOKEN = org.lwjgl.opengl.GL43.GL_LINE_RESET_TOKEN;
		GL_W.GL_EXP = org.lwjgl.opengl.GL43.GL_EXP;
		GL_W.GL_EXP2 = org.lwjgl.opengl.GL43.GL_EXP2;
		GL_W.GL_CW = org.lwjgl.opengl.GL43.GL_CW;
		GL_W.GL_CCW = org.lwjgl.opengl.GL43.GL_CCW;
		GL_W.GL_COEFF = org.lwjgl.opengl.GL43.GL_COEFF;
		GL_W.GL_ORDER = org.lwjgl.opengl.GL43.GL_ORDER;
		GL_W.GL_DOMAIN = org.lwjgl.opengl.GL43.GL_DOMAIN;
		GL_W.GL_CURRENT_COLOR = org.lwjgl.opengl.GL43.GL_CURRENT_COLOR;
		GL_W.GL_CURRENT_INDEX = org.lwjgl.opengl.GL43.GL_CURRENT_INDEX;
		GL_W.GL_CURRENT_NORMAL = org.lwjgl.opengl.GL43.GL_CURRENT_NORMAL;
		GL_W.GL_CURRENT_TEXTURE_COORDS = org.lwjgl.opengl.GL43.GL_CURRENT_TEXTURE_COORDS;
		GL_W.GL_CURRENT_RASTER_COLOR = org.lwjgl.opengl.GL43.GL_CURRENT_RASTER_COLOR;
		GL_W.GL_CURRENT_RASTER_INDEX = org.lwjgl.opengl.GL43.GL_CURRENT_RASTER_INDEX;
		GL_W.GL_CURRENT_RASTER_TEXTURE_COORDS = org.lwjgl.opengl.GL43.GL_CURRENT_RASTER_TEXTURE_COORDS;
		GL_W.GL_CURRENT_RASTER_POSITION = org.lwjgl.opengl.GL43.GL_CURRENT_RASTER_POSITION;
		GL_W.GL_CURRENT_RASTER_POSITION_VALID = org.lwjgl.opengl.GL43.GL_CURRENT_RASTER_POSITION_VALID;
		GL_W.GL_CURRENT_RASTER_DISTANCE = org.lwjgl.opengl.GL43.GL_CURRENT_RASTER_DISTANCE;
		GL_W.GL_POINT_SMOOTH = org.lwjgl.opengl.GL43.GL_POINT_SMOOTH;
		GL_W.GL_POINT_SIZE = org.lwjgl.opengl.GL43.GL_POINT_SIZE;
		GL_W.GL_POINT_SIZE_RANGE = org.lwjgl.opengl.GL43.GL_POINT_SIZE_RANGE;
		GL_W.GL_POINT_SIZE_GRANULARITY = org.lwjgl.opengl.GL43.GL_POINT_SIZE_GRANULARITY;
		GL_W.GL_LINE_SMOOTH = org.lwjgl.opengl.GL43.GL_LINE_SMOOTH;
		GL_W.GL_LINE_WIDTH = org.lwjgl.opengl.GL43.GL_LINE_WIDTH;
		GL_W.GL_LINE_WIDTH_RANGE = org.lwjgl.opengl.GL43.GL_LINE_WIDTH_RANGE;
		GL_W.GL_LINE_WIDTH_GRANULARITY = org.lwjgl.opengl.GL43.GL_LINE_WIDTH_GRANULARITY;
		GL_W.GL_LINE_STIPPLE = org.lwjgl.opengl.GL43.GL_LINE_STIPPLE;
		GL_W.GL_LINE_STIPPLE_PATTERN = org.lwjgl.opengl.GL43.GL_LINE_STIPPLE_PATTERN;
		GL_W.GL_LINE_STIPPLE_REPEAT = org.lwjgl.opengl.GL43.GL_LINE_STIPPLE_REPEAT;
		GL_W.GL_LIST_MODE = org.lwjgl.opengl.GL43.GL_LIST_MODE;
		GL_W.GL_MAX_LIST_NESTING = org.lwjgl.opengl.GL43.GL_MAX_LIST_NESTING;
		GL_W.GL_LIST_BASE = org.lwjgl.opengl.GL43.GL_LIST_BASE;
		GL_W.GL_LIST_INDEX = org.lwjgl.opengl.GL43.GL_LIST_INDEX;
		GL_W.GL_POLYGON_MODE = org.lwjgl.opengl.GL43.GL_POLYGON_MODE;
		GL_W.GL_POLYGON_SMOOTH = org.lwjgl.opengl.GL43.GL_POLYGON_SMOOTH;
		GL_W.GL_POLYGON_STIPPLE = org.lwjgl.opengl.GL43.GL_POLYGON_STIPPLE;
		GL_W.GL_EDGE_FLAG = org.lwjgl.opengl.GL43.GL_EDGE_FLAG;
		GL_W.GL_CULL_FACE = org.lwjgl.opengl.GL43.GL_CULL_FACE;
		GL_W.GL_CULL_FACE_MODE = org.lwjgl.opengl.GL43.GL_CULL_FACE_MODE;
		GL_W.GL_FRONT_FACE = org.lwjgl.opengl.GL43.GL_FRONT_FACE;
		GL_W.GL_LIGHTING = org.lwjgl.opengl.GL43.GL_LIGHTING;
		GL_W.GL_LIGHT_MODEL_LOCAL_VIEWER = org.lwjgl.opengl.GL43.GL_LIGHT_MODEL_LOCAL_VIEWER;
		GL_W.GL_LIGHT_MODEL_TWO_SIDE = org.lwjgl.opengl.GL43.GL_LIGHT_MODEL_TWO_SIDE;
		GL_W.GL_LIGHT_MODEL_AMBIENT = org.lwjgl.opengl.GL43.GL_LIGHT_MODEL_AMBIENT;
		GL_W.GL_SHADE_MODEL = org.lwjgl.opengl.GL43.GL_SHADE_MODEL;
		GL_W.GL_COLOR_MATERIAL_FACE = org.lwjgl.opengl.GL43.GL_COLOR_MATERIAL_FACE;
		GL_W.GL_COLOR_MATERIAL_PARAMETER = org.lwjgl.opengl.GL43.GL_COLOR_MATERIAL_PARAMETER;
		GL_W.GL_COLOR_MATERIAL = org.lwjgl.opengl.GL43.GL_COLOR_MATERIAL;
		GL_W.GL_FOG = org.lwjgl.opengl.GL43.GL_FOG;
		GL_W.GL_FOG_INDEX = org.lwjgl.opengl.GL43.GL_FOG_INDEX;
		GL_W.GL_FOG_DENSITY = org.lwjgl.opengl.GL43.GL_FOG_DENSITY;
		GL_W.GL_FOG_START = org.lwjgl.opengl.GL43.GL_FOG_START;
		GL_W.GL_FOG_END = org.lwjgl.opengl.GL43.GL_FOG_END;
		GL_W.GL_FOG_MODE = org.lwjgl.opengl.GL43.GL_FOG_MODE;
		GL_W.GL_FOG_COLOR = org.lwjgl.opengl.GL43.GL_FOG_COLOR;
		GL_W.GL_DEPTH_RANGE = org.lwjgl.opengl.GL43.GL_DEPTH_RANGE;
		GL_W.GL_DEPTH_TEST = org.lwjgl.opengl.GL43.GL_DEPTH_TEST;
		GL_W.GL_DEPTH_WRITEMASK = org.lwjgl.opengl.GL43.GL_DEPTH_WRITEMASK;
		GL_W.GL_DEPTH_CLEAR_VALUE = org.lwjgl.opengl.GL43.GL_DEPTH_CLEAR_VALUE;
		GL_W.GL_DEPTH_FUNC = org.lwjgl.opengl.GL43.GL_DEPTH_FUNC;
		GL_W.GL_ACCUM_CLEAR_VALUE = org.lwjgl.opengl.GL43.GL_ACCUM_CLEAR_VALUE;
		GL_W.GL_STENCIL_TEST = org.lwjgl.opengl.GL43.GL_STENCIL_TEST;
		GL_W.GL_STENCIL_CLEAR_VALUE = org.lwjgl.opengl.GL43.GL_STENCIL_CLEAR_VALUE;
		GL_W.GL_STENCIL_FUNC = org.lwjgl.opengl.GL43.GL_STENCIL_FUNC;
		GL_W.GL_STENCIL_VALUE_MASK = org.lwjgl.opengl.GL43.GL_STENCIL_VALUE_MASK;
		GL_W.GL_STENCIL_FAIL = org.lwjgl.opengl.GL43.GL_STENCIL_FAIL;
		GL_W.GL_STENCIL_PASS_DEPTH_FAIL = org.lwjgl.opengl.GL43.GL_STENCIL_PASS_DEPTH_FAIL;
		GL_W.GL_STENCIL_PASS_DEPTH_PASS = org.lwjgl.opengl.GL43.GL_STENCIL_PASS_DEPTH_PASS;
		GL_W.GL_STENCIL_REF = org.lwjgl.opengl.GL43.GL_STENCIL_REF;
		GL_W.GL_STENCIL_WRITEMASK = org.lwjgl.opengl.GL43.GL_STENCIL_WRITEMASK;
		GL_W.GL_MATRIX_MODE = org.lwjgl.opengl.GL43.GL_MATRIX_MODE;
		GL_W.GL_NORMALIZE = org.lwjgl.opengl.GL43.GL_NORMALIZE;
		GL_W.GL_VIEWPORT = org.lwjgl.opengl.GL43.GL_VIEWPORT;
		GL_W.GL_MODELVIEW_STACK_DEPTH = org.lwjgl.opengl.GL43.GL_MODELVIEW_STACK_DEPTH;
		GL_W.GL_PROJECTION_STACK_DEPTH = org.lwjgl.opengl.GL43.GL_PROJECTION_STACK_DEPTH;
		GL_W.GL_TEXTURE_STACK_DEPTH = org.lwjgl.opengl.GL43.GL_TEXTURE_STACK_DEPTH;
		GL_W.GL_MODELVIEW_MATRIX = org.lwjgl.opengl.GL43.GL_MODELVIEW_MATRIX;
		GL_W.GL_PROJECTION_MATRIX = org.lwjgl.opengl.GL43.GL_PROJECTION_MATRIX;
		GL_W.GL_TEXTURE_MATRIX = org.lwjgl.opengl.GL43.GL_TEXTURE_MATRIX;
		GL_W.GL_ATTRIB_STACK_DEPTH = org.lwjgl.opengl.GL43.GL_ATTRIB_STACK_DEPTH;
		GL_W.GL_CLIENT_ATTRIB_STACK_DEPTH = org.lwjgl.opengl.GL43.GL_CLIENT_ATTRIB_STACK_DEPTH;
		GL_W.GL_ALPHA_TEST = org.lwjgl.opengl.GL43.GL_ALPHA_TEST;
		GL_W.GL_ALPHA_TEST_FUNC = org.lwjgl.opengl.GL43.GL_ALPHA_TEST_FUNC;
		GL_W.GL_ALPHA_TEST_REF = org.lwjgl.opengl.GL43.GL_ALPHA_TEST_REF;
		GL_W.GL_DITHER = org.lwjgl.opengl.GL43.GL_DITHER;
		GL_W.GL_BLEND_DST = org.lwjgl.opengl.GL43.GL_BLEND_DST;
		GL_W.GL_BLEND_SRC = org.lwjgl.opengl.GL43.GL_BLEND_SRC;
		GL_W.GL_BLEND = org.lwjgl.opengl.GL43.GL_BLEND;
		GL_W.GL_LOGIC_OP_MODE = org.lwjgl.opengl.GL43.GL_LOGIC_OP_MODE;
		GL_W.GL_INDEX_LOGIC_OP = org.lwjgl.opengl.GL43.GL_INDEX_LOGIC_OP;
		GL_W.GL_LOGIC_OP = org.lwjgl.opengl.GL43.GL_LOGIC_OP;
		GL_W.GL_COLOR_LOGIC_OP = org.lwjgl.opengl.GL43.GL_COLOR_LOGIC_OP;
		GL_W.GL_AUX_BUFFERS = org.lwjgl.opengl.GL43.GL_AUX_BUFFERS;
		GL_W.GL_DRAW_BUFFER = org.lwjgl.opengl.GL43.GL_DRAW_BUFFER;
		GL_W.GL_READ_BUFFER = org.lwjgl.opengl.GL43.GL_READ_BUFFER;
		GL_W.GL_SCISSOR_BOX = org.lwjgl.opengl.GL43.GL_SCISSOR_BOX;
		GL_W.GL_SCISSOR_TEST = org.lwjgl.opengl.GL43.GL_SCISSOR_TEST;
		GL_W.GL_INDEX_CLEAR_VALUE = org.lwjgl.opengl.GL43.GL_INDEX_CLEAR_VALUE;
		GL_W.GL_INDEX_WRITEMASK = org.lwjgl.opengl.GL43.GL_INDEX_WRITEMASK;
		GL_W.GL_COLOR_CLEAR_VALUE = org.lwjgl.opengl.GL43.GL_COLOR_CLEAR_VALUE;
		GL_W.GL_COLOR_WRITEMASK = org.lwjgl.opengl.GL43.GL_COLOR_WRITEMASK;
		GL_W.GL_INDEX_MODE = org.lwjgl.opengl.GL43.GL_INDEX_MODE;
		GL_W.GL_RGBA_MODE = org.lwjgl.opengl.GL43.GL_RGBA_MODE;
		GL_W.GL_DOUBLEBUFFER = org.lwjgl.opengl.GL43.GL_DOUBLEBUFFER;
		GL_W.GL_STEREO = org.lwjgl.opengl.GL43.GL_STEREO;
		GL_W.GL_RENDER_MODE = org.lwjgl.opengl.GL43.GL_RENDER_MODE;
		GL_W.GL_PERSPECTIVE_CORRECTION_HINT = org.lwjgl.opengl.GL43.GL_PERSPECTIVE_CORRECTION_HINT;
		GL_W.GL_POINT_SMOOTH_HINT = org.lwjgl.opengl.GL43.GL_POINT_SMOOTH_HINT;
		GL_W.GL_LINE_SMOOTH_HINT = org.lwjgl.opengl.GL43.GL_LINE_SMOOTH_HINT;
		GL_W.GL_POLYGON_SMOOTH_HINT = org.lwjgl.opengl.GL43.GL_POLYGON_SMOOTH_HINT;
		GL_W.GL_FOG_HINT = org.lwjgl.opengl.GL43.GL_FOG_HINT;
		GL_W.GL_TEXTURE_GEN_S = org.lwjgl.opengl.GL43.GL_TEXTURE_GEN_S;
		GL_W.GL_TEXTURE_GEN_T = org.lwjgl.opengl.GL43.GL_TEXTURE_GEN_T;
		GL_W.GL_TEXTURE_GEN_R = org.lwjgl.opengl.GL43.GL_TEXTURE_GEN_R;
		GL_W.GL_TEXTURE_GEN_Q = org.lwjgl.opengl.GL43.GL_TEXTURE_GEN_Q;
		GL_W.GL_PIXEL_MAP_I_TO_I = org.lwjgl.opengl.GL43.GL_PIXEL_MAP_I_TO_I;
		GL_W.GL_PIXEL_MAP_S_TO_S = org.lwjgl.opengl.GL43.GL_PIXEL_MAP_S_TO_S;
		GL_W.GL_PIXEL_MAP_I_TO_R = org.lwjgl.opengl.GL43.GL_PIXEL_MAP_I_TO_R;
		GL_W.GL_PIXEL_MAP_I_TO_G = org.lwjgl.opengl.GL43.GL_PIXEL_MAP_I_TO_G;
		GL_W.GL_PIXEL_MAP_I_TO_B = org.lwjgl.opengl.GL43.GL_PIXEL_MAP_I_TO_B;
		GL_W.GL_PIXEL_MAP_I_TO_A = org.lwjgl.opengl.GL43.GL_PIXEL_MAP_I_TO_A;
		GL_W.GL_PIXEL_MAP_R_TO_R = org.lwjgl.opengl.GL43.GL_PIXEL_MAP_R_TO_R;
		GL_W.GL_PIXEL_MAP_G_TO_G = org.lwjgl.opengl.GL43.GL_PIXEL_MAP_G_TO_G;
		GL_W.GL_PIXEL_MAP_B_TO_B = org.lwjgl.opengl.GL43.GL_PIXEL_MAP_B_TO_B;
		GL_W.GL_PIXEL_MAP_A_TO_A = org.lwjgl.opengl.GL43.GL_PIXEL_MAP_A_TO_A;
		GL_W.GL_PIXEL_MAP_I_TO_I_SIZE = org.lwjgl.opengl.GL43.GL_PIXEL_MAP_I_TO_I_SIZE;
		GL_W.GL_PIXEL_MAP_S_TO_S_SIZE = org.lwjgl.opengl.GL43.GL_PIXEL_MAP_S_TO_S_SIZE;
		GL_W.GL_PIXEL_MAP_I_TO_R_SIZE = org.lwjgl.opengl.GL43.GL_PIXEL_MAP_I_TO_R_SIZE;
		GL_W.GL_PIXEL_MAP_I_TO_G_SIZE = org.lwjgl.opengl.GL43.GL_PIXEL_MAP_I_TO_G_SIZE;
		GL_W.GL_PIXEL_MAP_I_TO_B_SIZE = org.lwjgl.opengl.GL43.GL_PIXEL_MAP_I_TO_B_SIZE;
		GL_W.GL_PIXEL_MAP_I_TO_A_SIZE = org.lwjgl.opengl.GL43.GL_PIXEL_MAP_I_TO_A_SIZE;
		GL_W.GL_PIXEL_MAP_R_TO_R_SIZE = org.lwjgl.opengl.GL43.GL_PIXEL_MAP_R_TO_R_SIZE;
		GL_W.GL_PIXEL_MAP_G_TO_G_SIZE = org.lwjgl.opengl.GL43.GL_PIXEL_MAP_G_TO_G_SIZE;
		GL_W.GL_PIXEL_MAP_B_TO_B_SIZE = org.lwjgl.opengl.GL43.GL_PIXEL_MAP_B_TO_B_SIZE;
		GL_W.GL_PIXEL_MAP_A_TO_A_SIZE = org.lwjgl.opengl.GL43.GL_PIXEL_MAP_A_TO_A_SIZE;
		GL_W.GL_UNPACK_SWAP_BYTES = org.lwjgl.opengl.GL43.GL_UNPACK_SWAP_BYTES;
		GL_W.GL_UNPACK_LSB_FIRST = org.lwjgl.opengl.GL43.GL_UNPACK_LSB_FIRST;
		GL_W.GL_UNPACK_ROW_LENGTH = org.lwjgl.opengl.GL43.GL_UNPACK_ROW_LENGTH;
		GL_W.GL_UNPACK_SKIP_ROWS = org.lwjgl.opengl.GL43.GL_UNPACK_SKIP_ROWS;
		GL_W.GL_UNPACK_SKIP_PIXELS = org.lwjgl.opengl.GL43.GL_UNPACK_SKIP_PIXELS;
		GL_W.GL_UNPACK_ALIGNMENT = org.lwjgl.opengl.GL43.GL_UNPACK_ALIGNMENT;
		GL_W.GL_PACK_SWAP_BYTES = org.lwjgl.opengl.GL43.GL_PACK_SWAP_BYTES;
		GL_W.GL_PACK_LSB_FIRST = org.lwjgl.opengl.GL43.GL_PACK_LSB_FIRST;
		GL_W.GL_PACK_ROW_LENGTH = org.lwjgl.opengl.GL43.GL_PACK_ROW_LENGTH;
		GL_W.GL_PACK_SKIP_ROWS = org.lwjgl.opengl.GL43.GL_PACK_SKIP_ROWS;
		GL_W.GL_PACK_SKIP_PIXELS = org.lwjgl.opengl.GL43.GL_PACK_SKIP_PIXELS;
		GL_W.GL_PACK_ALIGNMENT = org.lwjgl.opengl.GL43.GL_PACK_ALIGNMENT;
		GL_W.GL_MAP_COLOR = org.lwjgl.opengl.GL43.GL_MAP_COLOR;
		GL_W.GL_MAP_STENCIL = org.lwjgl.opengl.GL43.GL_MAP_STENCIL;
		GL_W.GL_INDEX_SHIFT = org.lwjgl.opengl.GL43.GL_INDEX_SHIFT;
		GL_W.GL_INDEX_OFFSET = org.lwjgl.opengl.GL43.GL_INDEX_OFFSET;
		GL_W.GL_RED_SCALE = org.lwjgl.opengl.GL43.GL_RED_SCALE;
		GL_W.GL_RED_BIAS = org.lwjgl.opengl.GL43.GL_RED_BIAS;
		GL_W.GL_ZOOM_X = org.lwjgl.opengl.GL43.GL_ZOOM_X;
		GL_W.GL_ZOOM_Y = org.lwjgl.opengl.GL43.GL_ZOOM_Y;
		GL_W.GL_GREEN_SCALE = org.lwjgl.opengl.GL43.GL_GREEN_SCALE;
		GL_W.GL_GREEN_BIAS = org.lwjgl.opengl.GL43.GL_GREEN_BIAS;
		GL_W.GL_BLUE_SCALE = org.lwjgl.opengl.GL43.GL_BLUE_SCALE;
		GL_W.GL_BLUE_BIAS = org.lwjgl.opengl.GL43.GL_BLUE_BIAS;
		GL_W.GL_ALPHA_SCALE = org.lwjgl.opengl.GL43.GL_ALPHA_SCALE;
		GL_W.GL_ALPHA_BIAS = org.lwjgl.opengl.GL43.GL_ALPHA_BIAS;
		GL_W.GL_DEPTH_SCALE = org.lwjgl.opengl.GL43.GL_DEPTH_SCALE;
		GL_W.GL_DEPTH_BIAS = org.lwjgl.opengl.GL43.GL_DEPTH_BIAS;
		GL_W.GL_MAX_EVAL_ORDER = org.lwjgl.opengl.GL43.GL_MAX_EVAL_ORDER;
		GL_W.GL_MAX_LIGHTS = org.lwjgl.opengl.GL43.GL_MAX_LIGHTS;
		GL_W.GL_MAX_CLIP_PLANES = org.lwjgl.opengl.GL43.GL_MAX_CLIP_PLANES;
		GL_W.GL_MAX_TEXTURE_SIZE = org.lwjgl.opengl.GL43.GL_MAX_TEXTURE_SIZE;
		GL_W.GL_MAX_PIXEL_MAP_TABLE = org.lwjgl.opengl.GL43.GL_MAX_PIXEL_MAP_TABLE;
		GL_W.GL_MAX_ATTRIB_STACK_DEPTH = org.lwjgl.opengl.GL43.GL_MAX_ATTRIB_STACK_DEPTH;
		GL_W.GL_MAX_MODELVIEW_STACK_DEPTH = org.lwjgl.opengl.GL43.GL_MAX_MODELVIEW_STACK_DEPTH;
		GL_W.GL_MAX_NAME_STACK_DEPTH = org.lwjgl.opengl.GL43.GL_MAX_NAME_STACK_DEPTH;
		GL_W.GL_MAX_PROJECTION_STACK_DEPTH = org.lwjgl.opengl.GL43.GL_MAX_PROJECTION_STACK_DEPTH;
		GL_W.GL_MAX_TEXTURE_STACK_DEPTH = org.lwjgl.opengl.GL43.GL_MAX_TEXTURE_STACK_DEPTH;
		GL_W.GL_MAX_VIEWPORT_DIMS = org.lwjgl.opengl.GL43.GL_MAX_VIEWPORT_DIMS;
		GL_W.GL_MAX_CLIENT_ATTRIB_STACK_DEPTH = org.lwjgl.opengl.GL43.GL_MAX_CLIENT_ATTRIB_STACK_DEPTH;
		GL_W.GL_SUBPIXEL_BITS = org.lwjgl.opengl.GL43.GL_SUBPIXEL_BITS;
		GL_W.GL_INDEX_BITS = org.lwjgl.opengl.GL43.GL_INDEX_BITS;
		GL_W.GL_RED_BITS = org.lwjgl.opengl.GL43.GL_RED_BITS;
		GL_W.GL_GREEN_BITS = org.lwjgl.opengl.GL43.GL_GREEN_BITS;
		GL_W.GL_BLUE_BITS = org.lwjgl.opengl.GL43.GL_BLUE_BITS;
		GL_W.GL_ALPHA_BITS = org.lwjgl.opengl.GL43.GL_ALPHA_BITS;
		GL_W.GL_DEPTH_BITS = org.lwjgl.opengl.GL43.GL_DEPTH_BITS;
		GL_W.GL_STENCIL_BITS = org.lwjgl.opengl.GL43.GL_STENCIL_BITS;
		GL_W.GL_ACCUM_RED_BITS = org.lwjgl.opengl.GL43.GL_ACCUM_RED_BITS;
		GL_W.GL_ACCUM_GREEN_BITS = org.lwjgl.opengl.GL43.GL_ACCUM_GREEN_BITS;
		GL_W.GL_ACCUM_BLUE_BITS = org.lwjgl.opengl.GL43.GL_ACCUM_BLUE_BITS;
		GL_W.GL_ACCUM_ALPHA_BITS = org.lwjgl.opengl.GL43.GL_ACCUM_ALPHA_BITS;
		GL_W.GL_NAME_STACK_DEPTH = org.lwjgl.opengl.GL43.GL_NAME_STACK_DEPTH;
		GL_W.GL_AUTO_NORMAL = org.lwjgl.opengl.GL43.GL_AUTO_NORMAL;
		GL_W.GL_MAP1_COLOR_4 = org.lwjgl.opengl.GL43.GL_MAP1_COLOR_4;
		GL_W.GL_MAP1_INDEX = org.lwjgl.opengl.GL43.GL_MAP1_INDEX;
		GL_W.GL_MAP1_NORMAL = org.lwjgl.opengl.GL43.GL_MAP1_NORMAL;
		GL_W.GL_MAP1_TEXTURE_COORD_1 = org.lwjgl.opengl.GL43.GL_MAP1_TEXTURE_COORD_1;
		GL_W.GL_MAP1_TEXTURE_COORD_2 = org.lwjgl.opengl.GL43.GL_MAP1_TEXTURE_COORD_2;
		GL_W.GL_MAP1_TEXTURE_COORD_3 = org.lwjgl.opengl.GL43.GL_MAP1_TEXTURE_COORD_3;
		GL_W.GL_MAP1_TEXTURE_COORD_4 = org.lwjgl.opengl.GL43.GL_MAP1_TEXTURE_COORD_4;
		GL_W.GL_MAP1_VERTEX_3 = org.lwjgl.opengl.GL43.GL_MAP1_VERTEX_3;
		GL_W.GL_MAP1_VERTEX_4 = org.lwjgl.opengl.GL43.GL_MAP1_VERTEX_4;
		GL_W.GL_MAP2_COLOR_4 = org.lwjgl.opengl.GL43.GL_MAP2_COLOR_4;
		GL_W.GL_MAP2_INDEX = org.lwjgl.opengl.GL43.GL_MAP2_INDEX;
		GL_W.GL_MAP2_NORMAL = org.lwjgl.opengl.GL43.GL_MAP2_NORMAL;
		GL_W.GL_MAP2_TEXTURE_COORD_1 = org.lwjgl.opengl.GL43.GL_MAP2_TEXTURE_COORD_1;
		GL_W.GL_MAP2_TEXTURE_COORD_2 = org.lwjgl.opengl.GL43.GL_MAP2_TEXTURE_COORD_2;
		GL_W.GL_MAP2_TEXTURE_COORD_3 = org.lwjgl.opengl.GL43.GL_MAP2_TEXTURE_COORD_3;
		GL_W.GL_MAP2_TEXTURE_COORD_4 = org.lwjgl.opengl.GL43.GL_MAP2_TEXTURE_COORD_4;
		GL_W.GL_MAP2_VERTEX_3 = org.lwjgl.opengl.GL43.GL_MAP2_VERTEX_3;
		GL_W.GL_MAP2_VERTEX_4 = org.lwjgl.opengl.GL43.GL_MAP2_VERTEX_4;
		GL_W.GL_MAP1_GRID_DOMAIN = org.lwjgl.opengl.GL43.GL_MAP1_GRID_DOMAIN;
		GL_W.GL_MAP1_GRID_SEGMENTS = org.lwjgl.opengl.GL43.GL_MAP1_GRID_SEGMENTS;
		GL_W.GL_MAP2_GRID_DOMAIN = org.lwjgl.opengl.GL43.GL_MAP2_GRID_DOMAIN;
		GL_W.GL_MAP2_GRID_SEGMENTS = org.lwjgl.opengl.GL43.GL_MAP2_GRID_SEGMENTS;
		GL_W.GL_TEXTURE_1D = org.lwjgl.opengl.GL43.GL_TEXTURE_1D;
		GL_W.GL_TEXTURE_2D = org.lwjgl.opengl.GL43.GL_TEXTURE_2D;
		GL_W.GL_FEEDBACK_BUFFER_POINTER = org.lwjgl.opengl.GL43.GL_FEEDBACK_BUFFER_POINTER;
		GL_W.GL_FEEDBACK_BUFFER_SIZE = org.lwjgl.opengl.GL43.GL_FEEDBACK_BUFFER_SIZE;
		GL_W.GL_FEEDBACK_BUFFER_TYPE = org.lwjgl.opengl.GL43.GL_FEEDBACK_BUFFER_TYPE;
		GL_W.GL_SELECTION_BUFFER_POINTER = org.lwjgl.opengl.GL43.GL_SELECTION_BUFFER_POINTER;
		GL_W.GL_SELECTION_BUFFER_SIZE = org.lwjgl.opengl.GL43.GL_SELECTION_BUFFER_SIZE;
		GL_W.GL_TEXTURE_WIDTH = org.lwjgl.opengl.GL43.GL_TEXTURE_WIDTH;
		GL_W.GL_TEXTURE_HEIGHT = org.lwjgl.opengl.GL43.GL_TEXTURE_HEIGHT;
		GL_W.GL_TEXTURE_INTERNAL_FORMAT = org.lwjgl.opengl.GL43.GL_TEXTURE_INTERNAL_FORMAT;
		GL_W.GL_TEXTURE_COMPONENTS = org.lwjgl.opengl.GL43.GL_TEXTURE_COMPONENTS;
		GL_W.GL_TEXTURE_BORDER_COLOR = org.lwjgl.opengl.GL43.GL_TEXTURE_BORDER_COLOR;
		GL_W.GL_TEXTURE_BORDER = org.lwjgl.opengl.GL43.GL_TEXTURE_BORDER;
		GL_W.GL_DONT_CARE = org.lwjgl.opengl.GL43.GL_DONT_CARE;
		GL_W.GL_FASTEST = org.lwjgl.opengl.GL43.GL_FASTEST;
		GL_W.GL_NICEST = org.lwjgl.opengl.GL43.GL_NICEST;
		GL_W.GL_LIGHT0 = org.lwjgl.opengl.GL43.GL_LIGHT0;
		GL_W.GL_LIGHT1 = org.lwjgl.opengl.GL43.GL_LIGHT1;
		GL_W.GL_LIGHT2 = org.lwjgl.opengl.GL43.GL_LIGHT2;
		GL_W.GL_LIGHT3 = org.lwjgl.opengl.GL43.GL_LIGHT3;
		GL_W.GL_LIGHT4 = org.lwjgl.opengl.GL43.GL_LIGHT4;
		GL_W.GL_LIGHT5 = org.lwjgl.opengl.GL43.GL_LIGHT5;
		GL_W.GL_LIGHT6 = org.lwjgl.opengl.GL43.GL_LIGHT6;
		GL_W.GL_LIGHT7 = org.lwjgl.opengl.GL43.GL_LIGHT7;
		GL_W.GL_AMBIENT = org.lwjgl.opengl.GL43.GL_AMBIENT;
		GL_W.GL_DIFFUSE = org.lwjgl.opengl.GL43.GL_DIFFUSE;
		GL_W.GL_SPECULAR = org.lwjgl.opengl.GL43.GL_SPECULAR;
		GL_W.GL_POSITION = org.lwjgl.opengl.GL43.GL_POSITION;
		GL_W.GL_SPOT_DIRECTION = org.lwjgl.opengl.GL43.GL_SPOT_DIRECTION;
		GL_W.GL_SPOT_EXPONENT = org.lwjgl.opengl.GL43.GL_SPOT_EXPONENT;
		GL_W.GL_SPOT_CUTOFF = org.lwjgl.opengl.GL43.GL_SPOT_CUTOFF;
		GL_W.GL_CONSTANT_ATTENUATION = org.lwjgl.opengl.GL43.GL_CONSTANT_ATTENUATION;
		GL_W.GL_LINEAR_ATTENUATION = org.lwjgl.opengl.GL43.GL_LINEAR_ATTENUATION;
		GL_W.GL_QUADRATIC_ATTENUATION = org.lwjgl.opengl.GL43.GL_QUADRATIC_ATTENUATION;
		GL_W.GL_COMPILE = org.lwjgl.opengl.GL43.GL_COMPILE;
		GL_W.GL_COMPILE_AND_EXECUTE = org.lwjgl.opengl.GL43.GL_COMPILE_AND_EXECUTE;
		GL_W.GL_CLEAR = org.lwjgl.opengl.GL43.GL_CLEAR;
		GL_W.GL_AND = org.lwjgl.opengl.GL43.GL_AND;
		GL_W.GL_AND_REVERSE = org.lwjgl.opengl.GL43.GL_AND_REVERSE;
		GL_W.GL_COPY = org.lwjgl.opengl.GL43.GL_COPY;
		GL_W.GL_AND_INVERTED = org.lwjgl.opengl.GL43.GL_AND_INVERTED;
		GL_W.GL_NOOP = org.lwjgl.opengl.GL43.GL_NOOP;
		GL_W.GL_XOR = org.lwjgl.opengl.GL43.GL_XOR;
		GL_W.GL_OR = org.lwjgl.opengl.GL43.GL_OR;
		GL_W.GL_NOR = org.lwjgl.opengl.GL43.GL_NOR;
		GL_W.GL_EQUIV = org.lwjgl.opengl.GL43.GL_EQUIV;
		GL_W.GL_INVERT = org.lwjgl.opengl.GL43.GL_INVERT;
		GL_W.GL_OR_REVERSE = org.lwjgl.opengl.GL43.GL_OR_REVERSE;
		GL_W.GL_COPY_INVERTED = org.lwjgl.opengl.GL43.GL_COPY_INVERTED;
		GL_W.GL_OR_INVERTED = org.lwjgl.opengl.GL43.GL_OR_INVERTED;
		GL_W.GL_NAND = org.lwjgl.opengl.GL43.GL_NAND;
		GL_W.GL_SET = org.lwjgl.opengl.GL43.GL_SET;
		GL_W.GL_EMISSION = org.lwjgl.opengl.GL43.GL_EMISSION;
		GL_W.GL_SHININESS = org.lwjgl.opengl.GL43.GL_SHININESS;
		GL_W.GL_AMBIENT_AND_DIFFUSE = org.lwjgl.opengl.GL43.GL_AMBIENT_AND_DIFFUSE;
		GL_W.GL_COLOR_INDEXES = org.lwjgl.opengl.GL43.GL_COLOR_INDEXES;
		GL_W.GL_MODELVIEW = org.lwjgl.opengl.GL43.GL_MODELVIEW;
		GL_W.GL_PROJECTION = org.lwjgl.opengl.GL43.GL_PROJECTION;
		GL_W.GL_TEXTURE = org.lwjgl.opengl.GL43.GL_TEXTURE;
		GL_W.GL_COLOR = org.lwjgl.opengl.GL43.GL_COLOR;
		GL_W.GL_DEPTH = org.lwjgl.opengl.GL43.GL_DEPTH;
		GL_W.GL_STENCIL = org.lwjgl.opengl.GL43.GL_STENCIL;
		GL_W.GL_COLOR_INDEX = org.lwjgl.opengl.GL43.GL_COLOR_INDEX;
		GL_W.GL_STENCIL_INDEX = org.lwjgl.opengl.GL43.GL_STENCIL_INDEX;
		GL_W.GL_DEPTH_COMPONENT = org.lwjgl.opengl.GL43.GL_DEPTH_COMPONENT;
		GL_W.GL_RED = org.lwjgl.opengl.GL43.GL_RED;
		GL_W.GL_GREEN = org.lwjgl.opengl.GL43.GL_GREEN;
		GL_W.GL_BLUE = org.lwjgl.opengl.GL43.GL_BLUE;
		GL_W.GL_ALPHA = org.lwjgl.opengl.GL43.GL_ALPHA;
		GL_W.GL_RGB = org.lwjgl.opengl.GL43.GL_RGB;
		GL_W.GL_RGBA = org.lwjgl.opengl.GL43.GL_RGBA;
		GL_W.GL_LUMINANCE = org.lwjgl.opengl.GL43.GL_LUMINANCE;
		GL_W.GL_LUMINANCE_ALPHA = org.lwjgl.opengl.GL43.GL_LUMINANCE_ALPHA;
		GL_W.GL_BITMAP = org.lwjgl.opengl.GL43.GL_BITMAP;
		GL_W.GL_POINT = org.lwjgl.opengl.GL43.GL_POINT;
		GL_W.GL_LINE = org.lwjgl.opengl.GL43.GL_LINE;
		GL_W.GL_FILL = org.lwjgl.opengl.GL43.GL_FILL;
		GL_W.GL_RENDER = org.lwjgl.opengl.GL43.GL_RENDER;
		GL_W.GL_FEEDBACK = org.lwjgl.opengl.GL43.GL_FEEDBACK;
		GL_W.GL_SELECT = org.lwjgl.opengl.GL43.GL_SELECT;
		GL_W.GL_FLAT = org.lwjgl.opengl.GL43.GL_FLAT;
		GL_W.GL_SMOOTH = org.lwjgl.opengl.GL43.GL_SMOOTH;
		GL_W.GL_KEEP = org.lwjgl.opengl.GL43.GL_KEEP;
		GL_W.GL_REPLACE = org.lwjgl.opengl.GL43.GL_REPLACE;
		GL_W.GL_INCR = org.lwjgl.opengl.GL43.GL_INCR;
		GL_W.GL_DECR = org.lwjgl.opengl.GL43.GL_DECR;
		GL_W.GL_VENDOR = org.lwjgl.opengl.GL43.GL_VENDOR;
		GL_W.GL_RENDERER = org.lwjgl.opengl.GL43.GL_RENDERER;
		GL_W.GL_VERSION = org.lwjgl.opengl.GL43.GL_VERSION;
		GL_W.GL_EXTENSIONS = org.lwjgl.opengl.GL43.GL_EXTENSIONS;
		GL_W.GL_S = org.lwjgl.opengl.GL43.GL_S;
		GL_W.GL_T = org.lwjgl.opengl.GL43.GL_T;
		GL_W.GL_R = org.lwjgl.opengl.GL43.GL_R;
		GL_W.GL_Q = org.lwjgl.opengl.GL43.GL_Q;
		GL_W.GL_MODULATE = org.lwjgl.opengl.GL43.GL_MODULATE;
		GL_W.GL_DECAL = org.lwjgl.opengl.GL43.GL_DECAL;
		GL_W.GL_TEXTURE_ENV_MODE = org.lwjgl.opengl.GL43.GL_TEXTURE_ENV_MODE;
		GL_W.GL_TEXTURE_ENV_COLOR = org.lwjgl.opengl.GL43.GL_TEXTURE_ENV_COLOR;
		GL_W.GL_TEXTURE_ENV = org.lwjgl.opengl.GL43.GL_TEXTURE_ENV;
		GL_W.GL_EYE_LINEAR = org.lwjgl.opengl.GL43.GL_EYE_LINEAR;
		GL_W.GL_OBJECT_LINEAR = org.lwjgl.opengl.GL43.GL_OBJECT_LINEAR;
		GL_W.GL_SPHERE_MAP = org.lwjgl.opengl.GL43.GL_SPHERE_MAP;
		GL_W.GL_TEXTURE_GEN_MODE = org.lwjgl.opengl.GL43.GL_TEXTURE_GEN_MODE;
		GL_W.GL_OBJECT_PLANE = org.lwjgl.opengl.GL43.GL_OBJECT_PLANE;
		GL_W.GL_EYE_PLANE = org.lwjgl.opengl.GL43.GL_EYE_PLANE;
		GL_W.GL_NEAREST = org.lwjgl.opengl.GL43.GL_NEAREST;
		GL_W.GL_LINEAR = org.lwjgl.opengl.GL43.GL_LINEAR;
		GL_W.GL_NEAREST_MIPMAP_NEAREST = org.lwjgl.opengl.GL43.GL_NEAREST_MIPMAP_NEAREST;
		GL_W.GL_LINEAR_MIPMAP_NEAREST = org.lwjgl.opengl.GL43.GL_LINEAR_MIPMAP_NEAREST;
		GL_W.GL_NEAREST_MIPMAP_LINEAR = org.lwjgl.opengl.GL43.GL_NEAREST_MIPMAP_LINEAR;
		GL_W.GL_LINEAR_MIPMAP_LINEAR = org.lwjgl.opengl.GL43.GL_LINEAR_MIPMAP_LINEAR;
		GL_W.GL_TEXTURE_MAG_FILTER = org.lwjgl.opengl.GL43.GL_TEXTURE_MAG_FILTER;
		GL_W.GL_TEXTURE_MIN_FILTER = org.lwjgl.opengl.GL43.GL_TEXTURE_MIN_FILTER;
		GL_W.GL_TEXTURE_WRAP_S = org.lwjgl.opengl.GL43.GL_TEXTURE_WRAP_S;
		GL_W.GL_TEXTURE_WRAP_T = org.lwjgl.opengl.GL43.GL_TEXTURE_WRAP_T;
		GL_W.GL_CLAMP = org.lwjgl.opengl.GL43.GL_CLAMP;
		GL_W.GL_REPEAT = org.lwjgl.opengl.GL43.GL_REPEAT;
		GL_W.GL_CLIENT_PIXEL_STORE_BIT = org.lwjgl.opengl.GL43.GL_CLIENT_PIXEL_STORE_BIT;
		GL_W.GL_CLIENT_VERTEX_ARRAY_BIT = org.lwjgl.opengl.GL43.GL_CLIENT_VERTEX_ARRAY_BIT;
		GL_W.GL_CLIENT_ALL_ATTRIB_BITS = org.lwjgl.opengl.GL43.GL_CLIENT_ALL_ATTRIB_BITS;
		GL_W.GL_POLYGON_OFFSET_FACTOR = org.lwjgl.opengl.GL43.GL_POLYGON_OFFSET_FACTOR;
		GL_W.GL_POLYGON_OFFSET_UNITS = org.lwjgl.opengl.GL43.GL_POLYGON_OFFSET_UNITS;
		GL_W.GL_POLYGON_OFFSET_POINT = org.lwjgl.opengl.GL43.GL_POLYGON_OFFSET_POINT;
		GL_W.GL_POLYGON_OFFSET_LINE = org.lwjgl.opengl.GL43.GL_POLYGON_OFFSET_LINE;
		GL_W.GL_POLYGON_OFFSET_FILL = org.lwjgl.opengl.GL43.GL_POLYGON_OFFSET_FILL;
		GL_W.GL_ALPHA4 = org.lwjgl.opengl.GL43.GL_ALPHA4;
		GL_W.GL_ALPHA8 = org.lwjgl.opengl.GL43.GL_ALPHA8;
		GL_W.GL_ALPHA12 = org.lwjgl.opengl.GL43.GL_ALPHA12;
		GL_W.GL_ALPHA16 = org.lwjgl.opengl.GL43.GL_ALPHA16;
		GL_W.GL_LUMINANCE4 = org.lwjgl.opengl.GL43.GL_LUMINANCE4;
		GL_W.GL_LUMINANCE8 = org.lwjgl.opengl.GL43.GL_LUMINANCE8;
		GL_W.GL_LUMINANCE12 = org.lwjgl.opengl.GL43.GL_LUMINANCE12;
		GL_W.GL_LUMINANCE16 = org.lwjgl.opengl.GL43.GL_LUMINANCE16;
		GL_W.GL_LUMINANCE4_ALPHA4 = org.lwjgl.opengl.GL43.GL_LUMINANCE4_ALPHA4;
		GL_W.GL_LUMINANCE6_ALPHA2 = org.lwjgl.opengl.GL43.GL_LUMINANCE6_ALPHA2;
		GL_W.GL_LUMINANCE8_ALPHA8 = org.lwjgl.opengl.GL43.GL_LUMINANCE8_ALPHA8;
		GL_W.GL_LUMINANCE12_ALPHA4 = org.lwjgl.opengl.GL43.GL_LUMINANCE12_ALPHA4;
		GL_W.GL_LUMINANCE12_ALPHA12 = org.lwjgl.opengl.GL43.GL_LUMINANCE12_ALPHA12;
		GL_W.GL_LUMINANCE16_ALPHA16 = org.lwjgl.opengl.GL43.GL_LUMINANCE16_ALPHA16;
		GL_W.GL_INTENSITY = org.lwjgl.opengl.GL43.GL_INTENSITY;
		GL_W.GL_INTENSITY4 = org.lwjgl.opengl.GL43.GL_INTENSITY4;
		GL_W.GL_INTENSITY8 = org.lwjgl.opengl.GL43.GL_INTENSITY8;
		GL_W.GL_INTENSITY12 = org.lwjgl.opengl.GL43.GL_INTENSITY12;
		GL_W.GL_INTENSITY16 = org.lwjgl.opengl.GL43.GL_INTENSITY16;
		GL_W.GL_R3_G3_B2 = org.lwjgl.opengl.GL43.GL_R3_G3_B2;
		GL_W.GL_RGB4 = org.lwjgl.opengl.GL43.GL_RGB4;
		GL_W.GL_RGB5 = org.lwjgl.opengl.GL43.GL_RGB5;
		GL_W.GL_RGB8 = org.lwjgl.opengl.GL43.GL_RGB8;
		GL_W.GL_RGB10 = org.lwjgl.opengl.GL43.GL_RGB10;
		GL_W.GL_RGB12 = org.lwjgl.opengl.GL43.GL_RGB12;
		GL_W.GL_RGB16 = org.lwjgl.opengl.GL43.GL_RGB16;
		GL_W.GL_RGBA2 = org.lwjgl.opengl.GL43.GL_RGBA2;
		GL_W.GL_RGBA4 = org.lwjgl.opengl.GL43.GL_RGBA4;
		GL_W.GL_RGB5_A1 = org.lwjgl.opengl.GL43.GL_RGB5_A1;
		GL_W.GL_RGBA8 = org.lwjgl.opengl.GL43.GL_RGBA8;
		GL_W.GL_RGB10_A2 = org.lwjgl.opengl.GL43.GL_RGB10_A2;
		GL_W.GL_RGBA12 = org.lwjgl.opengl.GL43.GL_RGBA12;
		GL_W.GL_RGBA16 = org.lwjgl.opengl.GL43.GL_RGBA16;
		GL_W.GL_TEXTURE_RED_SIZE = org.lwjgl.opengl.GL43.GL_TEXTURE_RED_SIZE;
		GL_W.GL_TEXTURE_GREEN_SIZE = org.lwjgl.opengl.GL43.GL_TEXTURE_GREEN_SIZE;
		GL_W.GL_TEXTURE_BLUE_SIZE = org.lwjgl.opengl.GL43.GL_TEXTURE_BLUE_SIZE;
		GL_W.GL_TEXTURE_ALPHA_SIZE = org.lwjgl.opengl.GL43.GL_TEXTURE_ALPHA_SIZE;
		GL_W.GL_TEXTURE_LUMINANCE_SIZE = org.lwjgl.opengl.GL43.GL_TEXTURE_LUMINANCE_SIZE;
		GL_W.GL_TEXTURE_INTENSITY_SIZE = org.lwjgl.opengl.GL43.GL_TEXTURE_INTENSITY_SIZE;
		GL_W.GL_PROXY_TEXTURE_1D = org.lwjgl.opengl.GL43.GL_PROXY_TEXTURE_1D;
		GL_W.GL_PROXY_TEXTURE_2D = org.lwjgl.opengl.GL43.GL_PROXY_TEXTURE_2D;
		GL_W.GL_TEXTURE_PRIORITY = org.lwjgl.opengl.GL43.GL_TEXTURE_PRIORITY;
		GL_W.GL_TEXTURE_RESIDENT = org.lwjgl.opengl.GL43.GL_TEXTURE_RESIDENT;
		GL_W.GL_TEXTURE_BINDING_1D = org.lwjgl.opengl.GL43.GL_TEXTURE_BINDING_1D;
		GL_W.GL_TEXTURE_BINDING_2D = org.lwjgl.opengl.GL43.GL_TEXTURE_BINDING_2D;
		GL_W.GL_VERTEX_ARRAY = org.lwjgl.opengl.GL43.GL_VERTEX_ARRAY;
		GL_W.GL_NORMAL_ARRAY = org.lwjgl.opengl.GL43.GL_NORMAL_ARRAY;
		GL_W.GL_COLOR_ARRAY = org.lwjgl.opengl.GL43.GL_COLOR_ARRAY;
		GL_W.GL_INDEX_ARRAY = org.lwjgl.opengl.GL43.GL_INDEX_ARRAY;
		GL_W.GL_TEXTURE_COORD_ARRAY = org.lwjgl.opengl.GL43.GL_TEXTURE_COORD_ARRAY;
		GL_W.GL_EDGE_FLAG_ARRAY = org.lwjgl.opengl.GL43.GL_EDGE_FLAG_ARRAY;
		GL_W.GL_VERTEX_ARRAY_SIZE = org.lwjgl.opengl.GL43.GL_VERTEX_ARRAY_SIZE;
		GL_W.GL_VERTEX_ARRAY_TYPE = org.lwjgl.opengl.GL43.GL_VERTEX_ARRAY_TYPE;
		GL_W.GL_VERTEX_ARRAY_STRIDE = org.lwjgl.opengl.GL43.GL_VERTEX_ARRAY_STRIDE;
		GL_W.GL_NORMAL_ARRAY_TYPE = org.lwjgl.opengl.GL43.GL_NORMAL_ARRAY_TYPE;
		GL_W.GL_NORMAL_ARRAY_STRIDE = org.lwjgl.opengl.GL43.GL_NORMAL_ARRAY_STRIDE;
		GL_W.GL_COLOR_ARRAY_SIZE = org.lwjgl.opengl.GL43.GL_COLOR_ARRAY_SIZE;
		GL_W.GL_COLOR_ARRAY_TYPE = org.lwjgl.opengl.GL43.GL_COLOR_ARRAY_TYPE;
		GL_W.GL_COLOR_ARRAY_STRIDE = org.lwjgl.opengl.GL43.GL_COLOR_ARRAY_STRIDE;
		GL_W.GL_INDEX_ARRAY_TYPE = org.lwjgl.opengl.GL43.GL_INDEX_ARRAY_TYPE;
		GL_W.GL_INDEX_ARRAY_STRIDE = org.lwjgl.opengl.GL43.GL_INDEX_ARRAY_STRIDE;
		GL_W.GL_TEXTURE_COORD_ARRAY_SIZE = org.lwjgl.opengl.GL43.GL_TEXTURE_COORD_ARRAY_SIZE;
		GL_W.GL_TEXTURE_COORD_ARRAY_TYPE = org.lwjgl.opengl.GL43.GL_TEXTURE_COORD_ARRAY_TYPE;
		GL_W.GL_TEXTURE_COORD_ARRAY_STRIDE = org.lwjgl.opengl.GL43.GL_TEXTURE_COORD_ARRAY_STRIDE;
		GL_W.GL_EDGE_FLAG_ARRAY_STRIDE = org.lwjgl.opengl.GL43.GL_EDGE_FLAG_ARRAY_STRIDE;
		GL_W.GL_VERTEX_ARRAY_POINTER = org.lwjgl.opengl.GL43.GL_VERTEX_ARRAY_POINTER;
		GL_W.GL_NORMAL_ARRAY_POINTER = org.lwjgl.opengl.GL43.GL_NORMAL_ARRAY_POINTER;
		GL_W.GL_COLOR_ARRAY_POINTER = org.lwjgl.opengl.GL43.GL_COLOR_ARRAY_POINTER;
		GL_W.GL_INDEX_ARRAY_POINTER = org.lwjgl.opengl.GL43.GL_INDEX_ARRAY_POINTER;
		GL_W.GL_TEXTURE_COORD_ARRAY_POINTER = org.lwjgl.opengl.GL43.GL_TEXTURE_COORD_ARRAY_POINTER;
		GL_W.GL_EDGE_FLAG_ARRAY_POINTER = org.lwjgl.opengl.GL43.GL_EDGE_FLAG_ARRAY_POINTER;
		GL_W.GL_V2F = org.lwjgl.opengl.GL43.GL_V2F;
		GL_W.GL_V3F = org.lwjgl.opengl.GL43.GL_V3F;
		GL_W.GL_C4UB_V2F = org.lwjgl.opengl.GL43.GL_C4UB_V2F;
		GL_W.GL_C4UB_V3F = org.lwjgl.opengl.GL43.GL_C4UB_V3F;
		GL_W.GL_C3F_V3F = org.lwjgl.opengl.GL43.GL_C3F_V3F;
		GL_W.GL_N3F_V3F = org.lwjgl.opengl.GL43.GL_N3F_V3F;
		GL_W.GL_C4F_N3F_V3F = org.lwjgl.opengl.GL43.GL_C4F_N3F_V3F;
		GL_W.GL_T2F_V3F = org.lwjgl.opengl.GL43.GL_T2F_V3F;
		GL_W.GL_T4F_V4F = org.lwjgl.opengl.GL43.GL_T4F_V4F;
		GL_W.GL_T2F_C4UB_V3F = org.lwjgl.opengl.GL43.GL_T2F_C4UB_V3F;
		GL_W.GL_T2F_C3F_V3F = org.lwjgl.opengl.GL43.GL_T2F_C3F_V3F;
		GL_W.GL_T2F_N3F_V3F = org.lwjgl.opengl.GL43.GL_T2F_N3F_V3F;
		GL_W.GL_T2F_C4F_N3F_V3F = org.lwjgl.opengl.GL43.GL_T2F_C4F_N3F_V3F;
		GL_W.GL_T4F_C4F_N3F_V4F = org.lwjgl.opengl.GL43.GL_T4F_C4F_N3F_V4F;
	}
	@Override
	public void nglDeleteRenderbuffers(int arg0,long arg1) {
		org.lwjgl.opengl.GL43.nglDeleteRenderbuffers(arg0,arg1);
	}

	@Override
	public void nglMultiDrawElementsIndirect(int arg0,int arg1,long arg2,int arg3,int arg4) {
		org.lwjgl.opengl.GL43.nglMultiDrawElementsIndirect(arg0,arg1,arg2,arg3,arg4);
	}

	@Override
	public void nglLightiv(int arg0,int arg1,long arg2) {
		org.lwjgl.opengl.GL43.nglLightiv(arg0,arg1,arg2);
	}

	@Override
	public void nglRasterPos3dv(long arg0) {
		org.lwjgl.opengl.GL43.nglRasterPos3dv(arg0);
	}

	@Override
	public void glVertexP2ui(int arg0,int arg1) {
		org.lwjgl.opengl.GL43.glVertexP2ui(arg0,arg1);
	}

	@Override
	public void glUniform1iv(int arg0,int[] arg1) {
		org.lwjgl.opengl.GL43.glUniform1iv(arg0,arg1);
	}

	@Override
	public void glUniform1iv(int arg0,java.nio.IntBuffer arg1) {
		org.lwjgl.opengl.GL43.glUniform1iv(arg0,arg1);
	}

	@Override
	public void glFogCoorddv(double[] arg0) {
		org.lwjgl.opengl.GL43.glFogCoorddv(arg0);
	}

	@Override
	public void glFogCoorddv(java.nio.DoubleBuffer arg0) {
		org.lwjgl.opengl.GL43.glFogCoorddv(arg0);
	}

	@Override
	public void nglVertexAttribI1uiv(int arg0,long arg1) {
		org.lwjgl.opengl.GL43.nglVertexAttribI1uiv(arg0,arg1);
	}

	@Override
	public void glBindRenderbuffer(int arg0,int arg1) {
		org.lwjgl.opengl.GL43.glBindRenderbuffer(arg0,arg1);
	}

	@Override
	public void glUseProgramStages(int arg0,int arg1,int arg2) {
		org.lwjgl.opengl.GL43.glUseProgramStages(arg0,arg1,arg2);
	}

	@Override
	public void nglRasterPos3fv(long arg0) {
		org.lwjgl.opengl.GL43.nglRasterPos3fv(arg0);
	}

	@Override
	public void nglProgramUniform4uiv(int arg0,int arg1,int arg2,long arg3) {
		org.lwjgl.opengl.GL43.nglProgramUniform4uiv(arg0,arg1,arg2,arg3);
	}

	@Override
	public void nglGetActiveUniformName(int arg0,int arg1,int arg2,long arg3,long arg4) {
		org.lwjgl.opengl.GL43.nglGetActiveUniformName(arg0,arg1,arg2,arg3,arg4);
	}

	@Override
	public void nglClipPlane(int arg0,long arg1) {
		org.lwjgl.opengl.GL43.nglClipPlane(arg0,arg1);
	}

	@Override
	public void nglVertexAttribL1dv(int arg0,long arg1) {
		org.lwjgl.opengl.GL43.nglVertexAttribL1dv(arg0,arg1);
	}

	@Override
	public void nglTexCoord1dv(long arg0) {
		org.lwjgl.opengl.GL43.nglTexCoord1dv(arg0);
	}

	@Override
	public void glPopAttrib() {
		org.lwjgl.opengl.GL43.glPopAttrib();
	}

	@Override
	public void nglVertexAttribI4sv(int arg0,long arg1) {
		org.lwjgl.opengl.GL43.nglVertexAttribI4sv(arg0,arg1);
	}

	@Override
	public void glAccum(int arg0,float arg1) {
		org.lwjgl.opengl.GL43.glAccum(arg0,arg1);
	}

	@Override
	public void glShadeModel(int arg0) {
		org.lwjgl.opengl.GL43.glShadeModel(arg0);
	}

	@Override
	public float glGetMultisamplef(int arg0,int arg1) {
		return org.lwjgl.opengl.GL43.glGetMultisamplef(arg0,arg1);
	}

	@Override
	public void nglVertexP4uiv(int arg0,long arg1) {
		org.lwjgl.opengl.GL43.nglVertexP4uiv(arg0,arg1);
	}

	@Override
	public int glGetTexParameterIi(int arg0,int arg1) {
		return org.lwjgl.opengl.GL43.glGetTexParameterIi(arg0,arg1);
	}

	@Override
	public void nglLightfv(int arg0,int arg1,long arg2) {
		org.lwjgl.opengl.GL43.nglLightfv(arg0,arg1,arg2);
	}

	@Override
	public int glGetRenderbufferParameteri(int arg0,int arg1) {
		return org.lwjgl.opengl.GL43.glGetRenderbufferParameteri(arg0,arg1);
	}

	@Override
	public java.lang.String glGetStringi(int arg0,int arg1) {
		return org.lwjgl.opengl.GL43.glGetStringi(arg0,arg1);
	}

	@Override
	public void glVertex3dv(double[] arg0) {
		org.lwjgl.opengl.GL43.glVertex3dv(arg0);
	}

	@Override
	public void glVertex3dv(java.nio.DoubleBuffer arg0) {
		org.lwjgl.opengl.GL43.glVertex3dv(arg0);
	}

	@Override
	public void glGetPolygonStipple(java.nio.ByteBuffer arg0) {
		org.lwjgl.opengl.GL43.glGetPolygonStipple(arg0);
	}

	@Override
	public void glGetPolygonStipple(long arg0) {
		org.lwjgl.opengl.GL43.glGetPolygonStipple(arg0);
	}

	@Override
	public void nglTexCoordP1uiv(int arg0,long arg1) {
		org.lwjgl.opengl.GL43.nglTexCoordP1uiv(arg0,arg1);
	}

	@Override
	public void nglFogCoordfv(long arg0) {
		org.lwjgl.opengl.GL43.nglFogCoordfv(arg0);
	}

	@Override
	public int glGetTexEnvi(int arg0,int arg1) {
		return org.lwjgl.opengl.GL43.glGetTexEnvi(arg0,arg1);
	}

	@Override
	public void glRasterPos2dv(double[] arg0) {
		org.lwjgl.opengl.GL43.glRasterPos2dv(arg0);
	}

	@Override
	public void glRasterPos2dv(java.nio.DoubleBuffer arg0) {
		org.lwjgl.opengl.GL43.glRasterPos2dv(arg0);
	}

	@Override
	public float glGetTexEnvf(int arg0,int arg1) {
		return org.lwjgl.opengl.GL43.glGetTexEnvf(arg0,arg1);
	}

	@Override
	public void glGenVertexArrays(int[] arg0) {
		org.lwjgl.opengl.GL43.glGenVertexArrays(arg0);
	}

	@Override
	public int glGenVertexArrays() {
		return org.lwjgl.opengl.GL43.glGenVertexArrays();
	}

	@Override
	public void glGenVertexArrays(java.nio.IntBuffer arg0) {
		org.lwjgl.opengl.GL43.glGenVertexArrays(arg0);
	}

	@Override
	public void nglNormalPointer(int arg0,int arg1,long arg2) {
		org.lwjgl.opengl.GL43.nglNormalPointer(arg0,arg1,arg2);
	}

	@Override
	public void glLoadTransposeMatrixd(double[] arg0) {
		org.lwjgl.opengl.GL43.glLoadTransposeMatrixd(arg0);
	}

	@Override
	public void glLoadTransposeMatrixd(java.nio.DoubleBuffer arg0) {
		org.lwjgl.opengl.GL43.glLoadTransposeMatrixd(arg0);
	}

	@Override
	public void nglGetProgramBinary(int arg0,int arg1,long arg2,long arg3,long arg4) {
		org.lwjgl.opengl.GL43.nglGetProgramBinary(arg0,arg1,arg2,arg3,arg4);
	}

	@Override
	public void nglGetFramebufferAttachmentParameteriv(int arg0,int arg1,int arg2,long arg3) {
		org.lwjgl.opengl.GL43.nglGetFramebufferAttachmentParameteriv(arg0,arg1,arg2,arg3);
	}

	@Override
	public void glLoadTransposeMatrixf(java.nio.FloatBuffer arg0) {
		org.lwjgl.opengl.GL43.glLoadTransposeMatrixf(arg0);
	}

	@Override
	public void glLoadTransposeMatrixf(float[] arg0) {
		org.lwjgl.opengl.GL43.glLoadTransposeMatrixf(arg0);
	}

	@Override
	public void glGenFramebuffers(int[] arg0) {
		org.lwjgl.opengl.GL43.glGenFramebuffers(arg0);
	}

	@Override
	public void glGenFramebuffers(java.nio.IntBuffer arg0) {
		org.lwjgl.opengl.GL43.glGenFramebuffers(arg0);
	}

	@Override
	public int glGenFramebuffers() {
		return org.lwjgl.opengl.GL43.glGenFramebuffers();
	}

	@Override
	public void glVertex3fv(float[] arg0) {
		org.lwjgl.opengl.GL43.glVertex3fv(arg0);
	}

	@Override
	public void glVertex3fv(java.nio.FloatBuffer arg0) {
		org.lwjgl.opengl.GL43.glVertex3fv(arg0);
	}

	@Override
	public void glUniform1dv(int arg0,double[] arg1) {
		org.lwjgl.opengl.GL43.glUniform1dv(arg0,arg1);
	}

	@Override
	public void glUniform1dv(int arg0,java.nio.DoubleBuffer arg1) {
		org.lwjgl.opengl.GL43.glUniform1dv(arg0,arg1);
	}

	@Override
	public void glInterleavedArrays(int arg0,int arg1,float[] arg2) {
		org.lwjgl.opengl.GL43.glInterleavedArrays(arg0,arg1,arg2);
	}

	@Override
	public void glInterleavedArrays(int arg0,int arg1,double[] arg2) {
		org.lwjgl.opengl.GL43.glInterleavedArrays(arg0,arg1,arg2);
	}

	@Override
	public void glInterleavedArrays(int arg0,int arg1,int[] arg2) {
		org.lwjgl.opengl.GL43.glInterleavedArrays(arg0,arg1,arg2);
	}

	@Override
	public void glInterleavedArrays(int arg0,int arg1,short[] arg2) {
		org.lwjgl.opengl.GL43.glInterleavedArrays(arg0,arg1,arg2);
	}

	@Override
	public void glInterleavedArrays(int arg0,int arg1,java.nio.DoubleBuffer arg2) {
		org.lwjgl.opengl.GL43.glInterleavedArrays(arg0,arg1,arg2);
	}

	@Override
	public void glInterleavedArrays(int arg0,int arg1,java.nio.IntBuffer arg2) {
		org.lwjgl.opengl.GL43.glInterleavedArrays(arg0,arg1,arg2);
	}

	@Override
	public void glInterleavedArrays(int arg0,int arg1,java.nio.ShortBuffer arg2) {
		org.lwjgl.opengl.GL43.glInterleavedArrays(arg0,arg1,arg2);
	}

	@Override
	public void glInterleavedArrays(int arg0,int arg1,java.nio.FloatBuffer arg2) {
		org.lwjgl.opengl.GL43.glInterleavedArrays(arg0,arg1,arg2);
	}

	@Override
	public void glInterleavedArrays(int arg0,int arg1,java.nio.ByteBuffer arg2) {
		org.lwjgl.opengl.GL43.glInterleavedArrays(arg0,arg1,arg2);
	}

	@Override
	public void glInterleavedArrays(int arg0,int arg1,long arg2) {
		org.lwjgl.opengl.GL43.glInterleavedArrays(arg0,arg1,arg2);
	}

	@Override
	public void glGetProgramResourceiv(int arg0,int arg1,int arg2,java.nio.IntBuffer arg3,java.nio.IntBuffer arg4,java.nio.IntBuffer arg5) {
		org.lwjgl.opengl.GL43.glGetProgramResourceiv(arg0,arg1,arg2,arg3,arg4,arg5);
	}

	@Override
	public void glGetProgramResourceiv(int arg0,int arg1,int arg2,int[] arg3,int[] arg4,int[] arg5) {
		org.lwjgl.opengl.GL43.glGetProgramResourceiv(arg0,arg1,arg2,arg3,arg4,arg5);
	}

	@Override
	public void nglGenProgramPipelines(int arg0,long arg1) {
		org.lwjgl.opengl.GL43.nglGenProgramPipelines(arg0,arg1);
	}

	@Override
	public void glMatrixMode(int arg0) {
		org.lwjgl.opengl.GL43.glMatrixMode(arg0);
	}

	@Override
	public void glClientActiveTexture(int arg0) {
		org.lwjgl.opengl.GL43.glClientActiveTexture(arg0);
	}

	@Override
	public void nglUniform1uiv(int arg0,int arg1,long arg2) {
		org.lwjgl.opengl.GL43.nglUniform1uiv(arg0,arg1,arg2);
	}

	@Override
	public int glGetActiveUniformsi(int arg0,int arg1,int arg2) {
		return org.lwjgl.opengl.GL43.glGetActiveUniformsi(arg0,arg1,arg2);
	}

	@Override
	public long glGetVertexAttribPointer(int arg0,int arg1) {
		return org.lwjgl.opengl.GL43.glGetVertexAttribPointer(arg0,arg1);
	}

	@Override
	public int nglGetProgramResourceIndex(int arg0,int arg1,long arg2) {
		return org.lwjgl.opengl.GL43.nglGetProgramResourceIndex(arg0,arg1,arg2);
	}

	@Override
	public void glGetTexEnviv(int arg0,int arg1,int[] arg2) {
		org.lwjgl.opengl.GL43.glGetTexEnviv(arg0,arg1,arg2);
	}

	@Override
	public void glGetTexEnviv(int arg0,int arg1,java.nio.IntBuffer arg2) {
		org.lwjgl.opengl.GL43.glGetTexEnviv(arg0,arg1,arg2);
	}

	@Override
	public void glDeleteVertexArrays(int[] arg0) {
		org.lwjgl.opengl.GL43.glDeleteVertexArrays(arg0);
	}

	@Override
	public void glDeleteVertexArrays(java.nio.IntBuffer arg0) {
		org.lwjgl.opengl.GL43.glDeleteVertexArrays(arg0);
	}

	@Override
	public void glDeleteVertexArrays(int arg0) {
		org.lwjgl.opengl.GL43.glDeleteVertexArrays(arg0);
	}

	@Override
	public void glGetUniformSubroutineuiv(int arg0,int arg1,java.nio.IntBuffer arg2) {
		org.lwjgl.opengl.GL43.glGetUniformSubroutineuiv(arg0,arg1,arg2);
	}

	@Override
	public void glGetUniformSubroutineuiv(int arg0,int arg1,int[] arg2) {
		org.lwjgl.opengl.GL43.glGetUniformSubroutineuiv(arg0,arg1,arg2);
	}

	@Override
	public void glGetVertexAttribIuiv(int arg0,int arg1,int[] arg2) {
		org.lwjgl.opengl.GL43.glGetVertexAttribIuiv(arg0,arg1,arg2);
	}

	@Override
	public void glGetVertexAttribIuiv(int arg0,int arg1,java.nio.IntBuffer arg2) {
		org.lwjgl.opengl.GL43.glGetVertexAttribIuiv(arg0,arg1,arg2);
	}

	@Override
	public void glHint(int arg0,int arg1) {
		org.lwjgl.opengl.GL43.glHint(arg0,arg1);
	}

	@Override
	public void glFogCoordfv(float[] arg0) {
		org.lwjgl.opengl.GL43.glFogCoordfv(arg0);
	}

	@Override
	public void glFogCoordfv(java.nio.FloatBuffer arg0) {
		org.lwjgl.opengl.GL43.glFogCoordfv(arg0);
	}

	@Override
	public void glDeleteFramebuffers(int arg0) {
		org.lwjgl.opengl.GL43.glDeleteFramebuffers(arg0);
	}

	@Override
	public void glDeleteFramebuffers(int[] arg0) {
		org.lwjgl.opengl.GL43.glDeleteFramebuffers(arg0);
	}

	@Override
	public void glDeleteFramebuffers(java.nio.IntBuffer arg0) {
		org.lwjgl.opengl.GL43.glDeleteFramebuffers(arg0);
	}

	@Override
	public void nglGetAttachedShaders(int arg0,int arg1,long arg2,long arg3) {
		org.lwjgl.opengl.GL43.nglGetAttachedShaders(arg0,arg1,arg2,arg3);
	}

	@Override
	public void glUniform1fv(int arg0,float[] arg1) {
		org.lwjgl.opengl.GL43.glUniform1fv(arg0,arg1);
	}

	@Override
	public void glUniform1fv(int arg0,java.nio.FloatBuffer arg1) {
		org.lwjgl.opengl.GL43.glUniform1fv(arg0,arg1);
	}

	@Override
	public void glSamplerParameterIiv(int arg0,int arg1,java.nio.IntBuffer arg2) {
		org.lwjgl.opengl.GL43.glSamplerParameterIiv(arg0,arg1,arg2);
	}

	@Override
	public void glSamplerParameterIiv(int arg0,int arg1,int[] arg2) {
		org.lwjgl.opengl.GL43.glSamplerParameterIiv(arg0,arg1,arg2);
	}

	@Override
	public void nglScissorIndexedv(int arg0,long arg1) {
		org.lwjgl.opengl.GL43.nglScissorIndexedv(arg0,arg1);
	}

	@Override
	public void glGetShaderiv(int arg0,int arg1,java.nio.IntBuffer arg2) {
		org.lwjgl.opengl.GL43.glGetShaderiv(arg0,arg1,arg2);
	}

	@Override
	public void glGetShaderiv(int arg0,int arg1,int[] arg2) {
		org.lwjgl.opengl.GL43.glGetShaderiv(arg0,arg1,arg2);
	}

	@Override
	public void nglDebugMessageCallback(long arg0,long arg1) {
		org.lwjgl.opengl.GL43.nglDebugMessageCallback(arg0,arg1);
	}

	@Override
	public int glGetProgrami(int arg0,int arg1) {
		return org.lwjgl.opengl.GL43.glGetProgrami(arg0,arg1);
	}

	@Override
	public void glBindFragDataLocation(int arg0,int arg1,java.nio.ByteBuffer arg2) {
		org.lwjgl.opengl.GL43.glBindFragDataLocation(arg0,arg1,arg2);
	}

	@Override
	public void glBindFragDataLocation(int arg0,int arg1,java.lang.CharSequence arg2) {
		org.lwjgl.opengl.GL43.glBindFragDataLocation(arg0,arg1,arg2);
	}

	@Override
	public void nglColor4usv(long arg0) {
		org.lwjgl.opengl.GL43.nglColor4usv(arg0);
	}

	@Override
	public void nglGetSamplerParameterIuiv(int arg0,int arg1,long arg2) {
		org.lwjgl.opengl.GL43.nglGetSamplerParameterIuiv(arg0,arg1,arg2);
	}

	@Override
	public java.lang.String glGetActiveUniform_String(int arg0,int arg1,int arg2,java.nio.IntBuffer arg3,java.nio.IntBuffer arg4) {
		return org.lwjgl.opengl.GL43.glGetActiveUniform(arg0,arg1,arg2,arg3,arg4);
	}

	@Override
	public void glGetActiveUniform(int arg0,int arg1,int[] arg2,int[] arg3,int[] arg4,java.nio.ByteBuffer arg5) {
		org.lwjgl.opengl.GL43.glGetActiveUniform(arg0,arg1,arg2,arg3,arg4,arg5);
	}

	@Override
	public void glGetActiveUniform(int arg0,int arg1,java.nio.IntBuffer arg2,java.nio.IntBuffer arg3,java.nio.IntBuffer arg4,java.nio.ByteBuffer arg5) {
		org.lwjgl.opengl.GL43.glGetActiveUniform(arg0,arg1,arg2,arg3,arg4,arg5);
	}

	@Override
	public java.lang.String glGetActiveUniform_String(int arg0,int arg1,java.nio.IntBuffer arg2,java.nio.IntBuffer arg3) {
		return org.lwjgl.opengl.GL43.glGetActiveUniform(arg0,arg1,arg2,arg3);
	}

	@Override
	public void glVertex3iv(java.nio.IntBuffer arg0) {
		org.lwjgl.opengl.GL43.glVertex3iv(arg0);
	}

	@Override
	public void glVertex3iv(int[] arg0) {
		org.lwjgl.opengl.GL43.glVertex3iv(arg0);
	}

	@Override
	public void glColorMask(boolean arg0,boolean arg1,boolean arg2,boolean arg3) {
		org.lwjgl.opengl.GL43.glColorMask(arg0,arg1,arg2,arg3);
	}

	@Override
	public void glMultiDrawElementsIndirect(int arg0,int arg1,java.nio.IntBuffer arg2,int arg3,int arg4) {
		org.lwjgl.opengl.GL43.glMultiDrawElementsIndirect(arg0,arg1,arg2,arg3,arg4);
	}

	@Override
	public void glMultiDrawElementsIndirect(int arg0,int arg1,long arg2,int arg3,int arg4) {
		org.lwjgl.opengl.GL43.glMultiDrawElementsIndirect(arg0,arg1,arg2,arg3,arg4);
	}

	@Override
	public void glMultiDrawElementsIndirect(int arg0,int arg1,java.nio.ByteBuffer arg2,int arg3,int arg4) {
		org.lwjgl.opengl.GL43.glMultiDrawElementsIndirect(arg0,arg1,arg2,arg3,arg4);
	}

	@Override
	public void glMultiDrawElementsIndirect(int arg0,int arg1,int[] arg2,int arg3,int arg4) {
		org.lwjgl.opengl.GL43.glMultiDrawElementsIndirect(arg0,arg1,arg2,arg3,arg4);
	}

	@Override
	public void glMultiTexCoordP3ui(int arg0,int arg1,int arg2) {
		org.lwjgl.opengl.GL43.glMultiTexCoordP3ui(arg0,arg1,arg2);
	}

	@Override
	public void glTexEnviv(int arg0,int arg1,java.nio.IntBuffer arg2) {
		org.lwjgl.opengl.GL43.glTexEnviv(arg0,arg1,arg2);
	}

	@Override
	public void glTexEnviv(int arg0,int arg1,int[] arg2) {
		org.lwjgl.opengl.GL43.glTexEnviv(arg0,arg1,arg2);
	}

	@Override
	public void glGetCompressedTexImage(int arg0,int arg1,long arg2) {
		org.lwjgl.opengl.GL43.glGetCompressedTexImage(arg0,arg1,arg2);
	}

	@Override
	public void glGetCompressedTexImage(int arg0,int arg1,java.nio.ByteBuffer arg2) {
		org.lwjgl.opengl.GL43.glGetCompressedTexImage(arg0,arg1,arg2);
	}

	@Override
	public void glGetObjectPtrLabel(long arg0,int[] arg1,java.nio.ByteBuffer arg2) {
		org.lwjgl.opengl.GL43.glGetObjectPtrLabel(arg0,arg1,arg2);
	}

	@Override
	public java.lang.String glGetObjectPtrLabel_String(long arg0) {
		return org.lwjgl.opengl.GL43.glGetObjectPtrLabel(arg0);
	}

	@Override
	public java.lang.String glGetObjectPtrLabel_String(long arg0,int arg1) {
		return org.lwjgl.opengl.GL43.glGetObjectPtrLabel(arg0,arg1);
	}

	@Override
	public void glGetObjectPtrLabel(long arg0,java.nio.IntBuffer arg1,java.nio.ByteBuffer arg2) {
		org.lwjgl.opengl.GL43.glGetObjectPtrLabel(arg0,arg1,arg2);
	}

	@Override
	public void glUniform2uiv(int arg0,int[] arg1) {
		org.lwjgl.opengl.GL43.glUniform2uiv(arg0,arg1);
	}

	@Override
	public void glUniform2uiv(int arg0,java.nio.IntBuffer arg1) {
		org.lwjgl.opengl.GL43.glUniform2uiv(arg0,arg1);
	}

	@Override
	public void nglUniformMatrix3dv(int arg0,int arg1,boolean arg2,long arg3) {
		org.lwjgl.opengl.GL43.nglUniformMatrix3dv(arg0,arg1,arg2,arg3);
	}

	@Override
	public void glMultiTexCoord3sv(int arg0,java.nio.ShortBuffer arg1) {
		org.lwjgl.opengl.GL43.glMultiTexCoord3sv(arg0,arg1);
	}

	@Override
	public void glMultiTexCoord3sv(int arg0,short[] arg1) {
		org.lwjgl.opengl.GL43.glMultiTexCoord3sv(arg0,arg1);
	}

	@Override
	public void glVertexAttrib1fv(int arg0,java.nio.FloatBuffer arg1) {
		org.lwjgl.opengl.GL43.glVertexAttrib1fv(arg0,arg1);
	}

	@Override
	public void glVertexAttrib1fv(int arg0,float[] arg1) {
		org.lwjgl.opengl.GL43.glVertexAttrib1fv(arg0,arg1);
	}

	@Override
	public void glBindVertexArray(int arg0) {
		org.lwjgl.opengl.GL43.glBindVertexArray(arg0);
	}

	@Override
	public void glBeginQuery(int arg0,int arg1) {
		org.lwjgl.opengl.GL43.glBeginQuery(arg0,arg1);
	}

	@Override
	public void glGetFloati_v(int arg0,int arg1,java.nio.FloatBuffer arg2) {
		org.lwjgl.opengl.GL43.glGetFloati_v(arg0,arg1,arg2);
	}

	@Override
	public void glGetFloati_v(int arg0,int arg1,float[] arg2) {
		org.lwjgl.opengl.GL43.glGetFloati_v(arg0,arg1,arg2);
	}

	@Override
	public void nglVertex3dv(long arg0) {
		org.lwjgl.opengl.GL43.nglVertex3dv(arg0);
	}

	@Override
	public void glBindTexture(int arg0,int arg1) {
		org.lwjgl.opengl.GL43.glBindTexture(arg0,arg1);
	}

	@Override
	public void glRasterPos2iv(int[] arg0) {
		org.lwjgl.opengl.GL43.glRasterPos2iv(arg0);
	}

	@Override
	public void glRasterPos2iv(java.nio.IntBuffer arg0) {
		org.lwjgl.opengl.GL43.glRasterPos2iv(arg0);
	}

	@Override
	public void glPolygonOffset(float arg0,float arg1) {
		org.lwjgl.opengl.GL43.glPolygonOffset(arg0,arg1);
	}

	@Override
	public void glTexCoord2dv(java.nio.DoubleBuffer arg0) {
		org.lwjgl.opengl.GL43.glTexCoord2dv(arg0);
	}

	@Override
	public void glTexCoord2dv(double[] arg0) {
		org.lwjgl.opengl.GL43.glTexCoord2dv(arg0);
	}

	@Override
	public void glIndexMask(int arg0) {
		org.lwjgl.opengl.GL43.glIndexMask(arg0);
	}

	@Override
	public boolean glIsEnabledi(int arg0,int arg1) {
		return org.lwjgl.opengl.GL43.glIsEnabledi(arg0,arg1);
	}

	@Override
	public void nglMultiTexCoord3sv(int arg0,long arg1) {
		org.lwjgl.opengl.GL43.nglMultiTexCoord3sv(arg0,arg1);
	}

	@Override
	public int glGetDebugMessageLog(int arg0,java.nio.IntBuffer arg1,java.nio.IntBuffer arg2,java.nio.IntBuffer arg3,java.nio.IntBuffer arg4,java.nio.IntBuffer arg5,java.nio.ByteBuffer arg6) {
		return org.lwjgl.opengl.GL43.glGetDebugMessageLog(arg0,arg1,arg2,arg3,arg4,arg5,arg6);
	}

	@Override
	public int glGetDebugMessageLog(int arg0,int[] arg1,int[] arg2,int[] arg3,int[] arg4,int[] arg5,java.nio.ByteBuffer arg6) {
		return org.lwjgl.opengl.GL43.glGetDebugMessageLog(arg0,arg1,arg2,arg3,arg4,arg5,arg6);
	}

	@Override
	public void glTexCoordP3uiv(int arg0,int[] arg1) {
		org.lwjgl.opengl.GL43.glTexCoordP3uiv(arg0,arg1);
	}

	@Override
	public void glTexCoordP3uiv(int arg0,java.nio.IntBuffer arg1) {
		org.lwjgl.opengl.GL43.glTexCoordP3uiv(arg0,arg1);
	}

	@Override
	public void glVertexAttrib1dv(int arg0,double[] arg1) {
		org.lwjgl.opengl.GL43.glVertexAttrib1dv(arg0,arg1);
	}

	@Override
	public void glVertexAttrib1dv(int arg0,java.nio.DoubleBuffer arg1) {
		org.lwjgl.opengl.GL43.glVertexAttrib1dv(arg0,arg1);
	}

	@Override
	public void glBindImageTexture(int arg0,int arg1,int arg2,boolean arg3,int arg4,int arg5,int arg6) {
		org.lwjgl.opengl.GL43.glBindImageTexture(arg0,arg1,arg2,arg3,arg4,arg5,arg6);
	}

	@Override
	public void nglColor4sv(long arg0) {
		org.lwjgl.opengl.GL43.nglColor4sv(arg0);
	}

	@Override
	public void nglPolygonStipple(long arg0) {
		org.lwjgl.opengl.GL43.nglPolygonStipple(arg0);
	}

	@Override
	public void nglUniformSubroutinesuiv(int arg0,int arg1,long arg2) {
		org.lwjgl.opengl.GL43.nglUniformSubroutinesuiv(arg0,arg1,arg2);
	}

	@Override
	public void glWaitSync(long arg0,int arg1,long arg2) {
		org.lwjgl.opengl.GL43.glWaitSync(arg0,arg1,arg2);
	}

	@Override
	public void glRasterPos2fv(java.nio.FloatBuffer arg0) {
		org.lwjgl.opengl.GL43.glRasterPos2fv(arg0);
	}

	@Override
	public void glRasterPos2fv(float[] arg0) {
		org.lwjgl.opengl.GL43.glRasterPos2fv(arg0);
	}

	@Override
	public void glEdgeFlagPointer(int arg0,java.nio.ByteBuffer arg1) {
		org.lwjgl.opengl.GL43.glEdgeFlagPointer(arg0,arg1);
	}

	@Override
	public void glEdgeFlagPointer(int arg0,long arg1) {
		org.lwjgl.opengl.GL43.glEdgeFlagPointer(arg0,arg1);
	}

	@Override
	public void glProgramUniform3ui(int arg0,int arg1,int arg2,int arg3,int arg4) {
		org.lwjgl.opengl.GL43.glProgramUniform3ui(arg0,arg1,arg2,arg3,arg4);
	}

	@Override
	public void glProgramUniform1uiv(int arg0,int arg1,java.nio.IntBuffer arg2) {
		org.lwjgl.opengl.GL43.glProgramUniform1uiv(arg0,arg1,arg2);
	}

	@Override
	public void glProgramUniform1uiv(int arg0,int arg1,int[] arg2) {
		org.lwjgl.opengl.GL43.glProgramUniform1uiv(arg0,arg1,arg2);
	}

	@Override
	public void glTexEnvfv(int arg0,int arg1,java.nio.FloatBuffer arg2) {
		org.lwjgl.opengl.GL43.glTexEnvfv(arg0,arg1,arg2);
	}

	@Override
	public void glTexEnvfv(int arg0,int arg1,float[] arg2) {
		org.lwjgl.opengl.GL43.glTexEnvfv(arg0,arg1,arg2);
	}

	@Override
	public void glUniformMatrix3dv(int arg0,boolean arg1,java.nio.DoubleBuffer arg2) {
		org.lwjgl.opengl.GL43.glUniformMatrix3dv(arg0,arg1,arg2);
	}

	@Override
	public void glUniformMatrix3dv(int arg0,boolean arg1,double[] arg2) {
		org.lwjgl.opengl.GL43.glUniformMatrix3dv(arg0,arg1,arg2);
	}

	@Override
	public void glTextureView(int arg0,int arg1,int arg2,int arg3,int arg4,int arg5,int arg6,int arg7) {
		org.lwjgl.opengl.GL43.glTextureView(arg0,arg1,arg2,arg3,arg4,arg5,arg6,arg7);
	}

	@Override
	public void glVertexAttribI1iv(int arg0,int[] arg1) {
		org.lwjgl.opengl.GL43.glVertexAttribI1iv(arg0,arg1);
	}

	@Override
	public void glVertexAttribI1iv(int arg0,java.nio.IntBuffer arg1) {
		org.lwjgl.opengl.GL43.glVertexAttribI1iv(arg0,arg1);
	}

	@Override
	public void nglGenQueries(int arg0,long arg1) {
		org.lwjgl.opengl.GL43.nglGenQueries(arg0,arg1);
	}

	@Override
	public void glTexCoord2iv(java.nio.IntBuffer arg0) {
		org.lwjgl.opengl.GL43.glTexCoord2iv(arg0);
	}

	@Override
	public void glTexCoord2iv(int[] arg0) {
		org.lwjgl.opengl.GL43.glTexCoord2iv(arg0);
	}

	@Override
	public void nglVertex3iv(long arg0) {
		org.lwjgl.opengl.GL43.nglVertex3iv(arg0);
	}

	@Override
	public void glVertexAttribP1ui(int arg0,int arg1,boolean arg2,int arg3) {
		org.lwjgl.opengl.GL43.glVertexAttribP1ui(arg0,arg1,arg2,arg3);
	}

	@Override
	public void nglTexCoord1fv(long arg0) {
		org.lwjgl.opengl.GL43.nglTexCoord1fv(arg0);
	}

	@Override
	public void nglRasterPos3iv(long arg0) {
		org.lwjgl.opengl.GL43.nglRasterPos3iv(arg0);
	}

	@Override
	public void nglGetPixelMapfv(int arg0,long arg1) {
		org.lwjgl.opengl.GL43.nglGetPixelMapfv(arg0,arg1);
	}

	@Override
	public void glSecondaryColorP3uiv(int arg0,java.nio.IntBuffer arg1) {
		org.lwjgl.opengl.GL43.glSecondaryColorP3uiv(arg0,arg1);
	}

	@Override
	public void glSecondaryColorP3uiv(int arg0,int[] arg1) {
		org.lwjgl.opengl.GL43.glSecondaryColorP3uiv(arg0,arg1);
	}

	@Override
	public void glTexStorage1D(int arg0,int arg1,int arg2,int arg3) {
		org.lwjgl.opengl.GL43.glTexStorage1D(arg0,arg1,arg2,arg3);
	}

	@Override
	public void nglVertexAttrib1dv(int arg0,long arg1) {
		org.lwjgl.opengl.GL43.nglVertexAttrib1dv(arg0,arg1);
	}

	@Override
	public void glDrawArraysIndirect(int arg0,int[] arg1) {
		org.lwjgl.opengl.GL43.glDrawArraysIndirect(arg0,arg1);
	}

	@Override
	public void glDrawArraysIndirect(int arg0,java.nio.IntBuffer arg1) {
		org.lwjgl.opengl.GL43.glDrawArraysIndirect(arg0,arg1);
	}

	@Override
	public void glDrawArraysIndirect(int arg0,java.nio.ByteBuffer arg1) {
		org.lwjgl.opengl.GL43.glDrawArraysIndirect(arg0,arg1);
	}

	@Override
	public void glDrawArraysIndirect(int arg0,long arg1) {
		org.lwjgl.opengl.GL43.glDrawArraysIndirect(arg0,arg1);
	}

	@Override
	public void nglVertexAttribI4usv(int arg0,long arg1) {
		org.lwjgl.opengl.GL43.nglVertexAttribI4usv(arg0,arg1);
	}

	@Override
	public void glGetPointerv(int arg0,org.lwjgl.PointerBuffer arg1) {
		org.lwjgl.opengl.GL43.glGetPointerv(arg0,arg1);
	}

	@Override
	public int nglGetUniformLocation(int arg0,long arg1) {
		return org.lwjgl.opengl.GL43.nglGetUniformLocation(arg0,arg1);
	}

	@Override
	public void glEndTransformFeedback() {
		org.lwjgl.opengl.GL43.glEndTransformFeedback();
	}

	@Override
	public void nglVertexAttribP4uiv(int arg0,int arg1,boolean arg2,long arg3) {
		org.lwjgl.opengl.GL43.nglVertexAttribP4uiv(arg0,arg1,arg2,arg3);
	}

	@Override
	public void glActiveShaderProgram(int arg0,int arg1) {
		org.lwjgl.opengl.GL43.glActiveShaderProgram(arg0,arg1);
	}

	@Override
	public void glUniformMatrix3fv(int arg0,boolean arg1,java.nio.FloatBuffer arg2) {
		org.lwjgl.opengl.GL43.glUniformMatrix3fv(arg0,arg1,arg2);
	}

	@Override
	public void glUniformMatrix3fv(int arg0,boolean arg1,float[] arg2) {
		org.lwjgl.opengl.GL43.glUniformMatrix3fv(arg0,arg1,arg2);
	}

	@Override
	public void glTexStorage2D(int arg0,int arg1,int arg2,int arg3,int arg4) {
		org.lwjgl.opengl.GL43.glTexStorage2D(arg0,arg1,arg2,arg3,arg4);
	}

	@Override
	public int glGetUniformIndices(int arg0,java.lang.CharSequence arg1) {
		return org.lwjgl.opengl.GL43.glGetUniformIndices(arg0,arg1);
	}

	@Override
	public void glGetUniformIndices(int arg0,org.lwjgl.PointerBuffer arg1,int[] arg2) {
		org.lwjgl.opengl.GL43.glGetUniformIndices(arg0,arg1,arg2);
	}

	@Override
	public void glGetUniformIndices(int arg0,org.lwjgl.PointerBuffer arg1,java.nio.IntBuffer arg2) {
		org.lwjgl.opengl.GL43.glGetUniformIndices(arg0,arg1,arg2);
	}

	@Override
	public void glGetUniformIndices(int arg0,java.lang.CharSequence[] arg1,java.nio.IntBuffer arg2) {
		org.lwjgl.opengl.GL43.glGetUniformIndices(arg0,arg1,arg2);
	}

	@Override
	public long nglGetStringi(int arg0,int arg1) {
		return org.lwjgl.opengl.GL43.nglGetStringi(arg0,arg1);
	}

	@Override
	public void nglGetActiveSubroutineUniformiv(int arg0,int arg1,int arg2,int arg3,long arg4) {
		org.lwjgl.opengl.GL43.nglGetActiveSubroutineUniformiv(arg0,arg1,arg2,arg3,arg4);
	}

	@Override
	public boolean glIsTransformFeedback(int arg0) {
		return org.lwjgl.opengl.GL43.glIsTransformFeedback(arg0);
	}

	@Override
	public void nglGetTexGeniv(int arg0,int arg1,long arg2) {
		org.lwjgl.opengl.GL43.nglGetTexGeniv(arg0,arg1,arg2);
	}

	@Override
	public void nglMultiTexCoordP2uiv(int arg0,int arg1,long arg2) {
		org.lwjgl.opengl.GL43.nglMultiTexCoordP2uiv(arg0,arg1,arg2);
	}

	@Override
	public void nglTexCoord1iv(long arg0) {
		org.lwjgl.opengl.GL43.nglTexCoord1iv(arg0);
	}

	@Override
	public void glDrawRangeElements(int arg0,int arg1,int arg2,java.nio.IntBuffer arg3) {
		org.lwjgl.opengl.GL43.glDrawRangeElements(arg0,arg1,arg2,arg3);
	}

	@Override
	public void glDrawRangeElements(int arg0,int arg1,int arg2,int arg3,int arg4,long arg5) {
		org.lwjgl.opengl.GL43.glDrawRangeElements(arg0,arg1,arg2,arg3,arg4,arg5);
	}

	@Override
	public void glDrawRangeElements(int arg0,int arg1,int arg2,int arg3,java.nio.ByteBuffer arg4) {
		org.lwjgl.opengl.GL43.glDrawRangeElements(arg0,arg1,arg2,arg3,arg4);
	}

	@Override
	public void glDrawRangeElements(int arg0,int arg1,int arg2,java.nio.ByteBuffer arg3) {
		org.lwjgl.opengl.GL43.glDrawRangeElements(arg0,arg1,arg2,arg3);
	}

	@Override
	public void glDrawRangeElements(int arg0,int arg1,int arg2,java.nio.ShortBuffer arg3) {
		org.lwjgl.opengl.GL43.glDrawRangeElements(arg0,arg1,arg2,arg3);
	}

	@Override
	public void nglUniformMatrix3fv(int arg0,int arg1,boolean arg2,long arg3) {
		org.lwjgl.opengl.GL43.nglUniformMatrix3fv(arg0,arg1,arg2,arg3);
	}

	@Override
	public void glDrawTransformFeedbackStreamInstanced(int arg0,int arg1,int arg2,int arg3) {
		org.lwjgl.opengl.GL43.glDrawTransformFeedbackStreamInstanced(arg0,arg1,arg2,arg3);
	}

	@Override
	public void glVertexAttribL4d(int arg0,double arg1,double arg2,double arg3,double arg4) {
		org.lwjgl.opengl.GL43.glVertexAttribL4d(arg0,arg1,arg2,arg3,arg4);
	}

	@Override
	public void glTexStorage3D(int arg0,int arg1,int arg2,int arg3,int arg4,int arg5) {
		org.lwjgl.opengl.GL43.glTexStorage3D(arg0,arg1,arg2,arg3,arg4,arg5);
	}

	@Override
	public void glWindowPos3sv(java.nio.ShortBuffer arg0) {
		org.lwjgl.opengl.GL43.glWindowPos3sv(arg0);
	}

	@Override
	public void glWindowPos3sv(short[] arg0) {
		org.lwjgl.opengl.GL43.glWindowPos3sv(arg0);
	}

	@Override
	public void glGenQueries(int[] arg0) {
		org.lwjgl.opengl.GL43.glGenQueries(arg0);
	}

	@Override
	public void glGenQueries(java.nio.IntBuffer arg0) {
		org.lwjgl.opengl.GL43.glGenQueries(arg0);
	}

	@Override
	public int glGenQueries() {
		return org.lwjgl.opengl.GL43.glGenQueries();
	}

	@Override
	public void glVertexP2uiv(int arg0,java.nio.IntBuffer arg1) {
		org.lwjgl.opengl.GL43.glVertexP2uiv(arg0,arg1);
	}

	@Override
	public void glVertexP2uiv(int arg0,int[] arg1) {
		org.lwjgl.opengl.GL43.glVertexP2uiv(arg0,arg1);
	}

	@Override
	public void glFlush() {
		org.lwjgl.opengl.GL43.glFlush();
	}

	@Override
	public void glGetActiveSubroutineUniformiv(int arg0,int arg1,int arg2,int arg3,java.nio.IntBuffer arg4) {
		org.lwjgl.opengl.GL43.glGetActiveSubroutineUniformiv(arg0,arg1,arg2,arg3,arg4);
	}

	@Override
	public void glGetActiveSubroutineUniformiv(int arg0,int arg1,int arg2,int arg3,int[] arg4) {
		org.lwjgl.opengl.GL43.glGetActiveSubroutineUniformiv(arg0,arg1,arg2,arg3,arg4);
	}

	@Override
	public void nglGetProgramInterfaceiv(int arg0,int arg1,int arg2,long arg3) {
		org.lwjgl.opengl.GL43.nglGetProgramInterfaceiv(arg0,arg1,arg2,arg3);
	}

	@Override
	public void glUniformMatrix2x4fv(int arg0,boolean arg1,float[] arg2) {
		org.lwjgl.opengl.GL43.glUniformMatrix2x4fv(arg0,arg1,arg2);
	}

	@Override
	public void glUniformMatrix2x4fv(int arg0,boolean arg1,java.nio.FloatBuffer arg2) {
		org.lwjgl.opengl.GL43.glUniformMatrix2x4fv(arg0,arg1,arg2);
	}

	@Override
	public void nglVertex3fv(long arg0) {
		org.lwjgl.opengl.GL43.nglVertex3fv(arg0);
	}

	@Override
	public void glTexCoord2fv(float[] arg0) {
		org.lwjgl.opengl.GL43.glTexCoord2fv(arg0);
	}

	@Override
	public void glTexCoord2fv(java.nio.FloatBuffer arg0) {
		org.lwjgl.opengl.GL43.glTexCoord2fv(arg0);
	}

	@Override
	public void glMultiDrawElementsBaseVertex(int arg0,java.nio.IntBuffer arg1,int arg2,org.lwjgl.PointerBuffer arg3,java.nio.IntBuffer arg4) {
		org.lwjgl.opengl.GL43.glMultiDrawElementsBaseVertex(arg0,arg1,arg2,arg3,arg4);
	}

	@Override
	public void glMultiDrawElementsBaseVertex(int arg0,int[] arg1,int arg2,org.lwjgl.PointerBuffer arg3,int[] arg4) {
		org.lwjgl.opengl.GL43.glMultiDrawElementsBaseVertex(arg0,arg1,arg2,arg3,arg4);
	}

	@Override
	public void glUniformMatrix3x2fv(int arg0,boolean arg1,float[] arg2) {
		org.lwjgl.opengl.GL43.glUniformMatrix3x2fv(arg0,arg1,arg2);
	}

	@Override
	public void glUniformMatrix3x2fv(int arg0,boolean arg1,java.nio.FloatBuffer arg2) {
		org.lwjgl.opengl.GL43.glUniformMatrix3x2fv(arg0,arg1,arg2);
	}

	@Override
	public void nglPrioritizeTextures(int arg0,long arg1,long arg2) {
		org.lwjgl.opengl.GL43.nglPrioritizeTextures(arg0,arg1,arg2);
	}

	@Override
	public void glInvalidateFramebuffer(int arg0,int arg1) {
		org.lwjgl.opengl.GL43.glInvalidateFramebuffer(arg0,arg1);
	}

	@Override
	public void glInvalidateFramebuffer(int arg0,java.nio.IntBuffer arg1) {
		org.lwjgl.opengl.GL43.glInvalidateFramebuffer(arg0,arg1);
	}

	@Override
	public void glInvalidateFramebuffer(int arg0,int[] arg1) {
		org.lwjgl.opengl.GL43.glInvalidateFramebuffer(arg0,arg1);
	}

	@Override
	public void glTexCoordP4ui(int arg0,int arg1) {
		org.lwjgl.opengl.GL43.glTexCoordP4ui(arg0,arg1);
	}

	@Override
	public void glGetMaterialfv(int arg0,int arg1,float[] arg2) {
		org.lwjgl.opengl.GL43.glGetMaterialfv(arg0,arg1,arg2);
	}

	@Override
	public void glGetMaterialfv(int arg0,int arg1,java.nio.FloatBuffer arg2) {
		org.lwjgl.opengl.GL43.glGetMaterialfv(arg0,arg1,arg2);
	}

	@Override
	public void glGetActiveUniformBlockiv(int arg0,int arg1,int arg2,int[] arg3) {
		org.lwjgl.opengl.GL43.glGetActiveUniformBlockiv(arg0,arg1,arg2,arg3);
	}

	@Override
	public void glGetActiveUniformBlockiv(int arg0,int arg1,int arg2,java.nio.IntBuffer arg3) {
		org.lwjgl.opengl.GL43.glGetActiveUniformBlockiv(arg0,arg1,arg2,arg3);
	}

	@Override
	public void nglDeleteTransformFeedbacks(int arg0,long arg1) {
		org.lwjgl.opengl.GL43.nglDeleteTransformFeedbacks(arg0,arg1);
	}

	@Override
	public void glFrustum(double arg0,double arg1,double arg2,double arg3,double arg4,double arg5) {
		org.lwjgl.opengl.GL43.glFrustum(arg0,arg1,arg2,arg3,arg4,arg5);
	}

	@Override
	public void glProgramUniformMatrix2fv(int arg0,int arg1,boolean arg2,java.nio.FloatBuffer arg3) {
		org.lwjgl.opengl.GL43.glProgramUniformMatrix2fv(arg0,arg1,arg2,arg3);
	}

	@Override
	public void glProgramUniformMatrix2fv(int arg0,int arg1,boolean arg2,float[] arg3) {
		org.lwjgl.opengl.GL43.glProgramUniformMatrix2fv(arg0,arg1,arg2,arg3);
	}

	@Override
	public void nglRasterPos2sv(long arg0) {
		org.lwjgl.opengl.GL43.nglRasterPos2sv(arg0);
	}

	@Override
	public void nglSamplerParameterIuiv(int arg0,int arg1,long arg2) {
		org.lwjgl.opengl.GL43.nglSamplerParameterIuiv(arg0,arg1,arg2);
	}

	@Override
	public long nglMapBuffer(int arg0,int arg1) {
		return org.lwjgl.opengl.GL43.nglMapBuffer(arg0,arg1);
	}

	@Override
	public void nglColor4iv(long arg0) {
		org.lwjgl.opengl.GL43.nglColor4iv(arg0);
	}

	@Override
	public void nglDrawElementsInstancedBaseVertex(int arg0,int arg1,int arg2,long arg3,int arg4,int arg5) {
		org.lwjgl.opengl.GL43.nglDrawElementsInstancedBaseVertex(arg0,arg1,arg2,arg3,arg4,arg5);
	}

	@Override
	public void nglUniformMatrix2x3fv(int arg0,int arg1,boolean arg2,long arg3) {
		org.lwjgl.opengl.GL43.nglUniformMatrix2x3fv(arg0,arg1,arg2,arg3);
	}

	@Override
	public void nglGetTexGenfv(int arg0,int arg1,long arg2) {
		org.lwjgl.opengl.GL43.nglGetTexGenfv(arg0,arg1,arg2);
	}

	@Override
	public void nglGetTexLevelParameterfv(int arg0,int arg1,int arg2,long arg3) {
		org.lwjgl.opengl.GL43.nglGetTexLevelParameterfv(arg0,arg1,arg2,arg3);
	}

	@Override
	public void glGetMapdv(int arg0,int arg1,java.nio.DoubleBuffer arg2) {
		org.lwjgl.opengl.GL43.glGetMapdv(arg0,arg1,arg2);
	}

	@Override
	public void glGetMapdv(int arg0,int arg1,double[] arg2) {
		org.lwjgl.opengl.GL43.glGetMapdv(arg0,arg1,arg2);
	}

	@Override
	public void nglGetMultisamplefv(int arg0,int arg1,long arg2) {
		org.lwjgl.opengl.GL43.nglGetMultisamplefv(arg0,arg1,arg2);
	}

	@Override
	public void nglColor4uiv(long arg0) {
		org.lwjgl.opengl.GL43.nglColor4uiv(arg0);
	}

	@Override
	public void glTexParameterf(int arg0,int arg1,float arg2) {
		org.lwjgl.opengl.GL43.glTexParameterf(arg0,arg1,arg2);
	}

	@Override
	public void glVertexAttrib4Nbv(int arg0,java.nio.ByteBuffer arg1) {
		org.lwjgl.opengl.GL43.glVertexAttrib4Nbv(arg0,arg1);
	}

	@Override
	public void nglTexCoordPointer(int arg0,int arg1,int arg2,long arg3) {
		org.lwjgl.opengl.GL43.nglTexCoordPointer(arg0,arg1,arg2,arg3);
	}

	@Override
	public boolean glIsBuffer(int arg0) {
		return org.lwjgl.opengl.GL43.glIsBuffer(arg0);
	}

	@Override
	public void nglGetUniformuiv(int arg0,int arg1,long arg2) {
		org.lwjgl.opengl.GL43.nglGetUniformuiv(arg0,arg1,arg2);
	}

	@Override
	public void glPrioritizeTextures(java.nio.IntBuffer arg0,java.nio.FloatBuffer arg1) {
		org.lwjgl.opengl.GL43.glPrioritizeTextures(arg0,arg1);
	}

	@Override
	public void glPrioritizeTextures(int[] arg0,float[] arg1) {
		org.lwjgl.opengl.GL43.glPrioritizeTextures(arg0,arg1);
	}

	@Override
	public void glVertexAttribL2dv(int arg0,java.nio.DoubleBuffer arg1) {
		org.lwjgl.opengl.GL43.glVertexAttribL2dv(arg0,arg1);
	}

	@Override
	public void glVertexAttribL2dv(int arg0,double[] arg1) {
		org.lwjgl.opengl.GL43.glVertexAttribL2dv(arg0,arg1);
	}

	@Override
	public void nglVertex2iv(long arg0) {
		org.lwjgl.opengl.GL43.nglVertex2iv(arg0);
	}

	@Override
	public void glMinSampleShading(float arg0) {
		org.lwjgl.opengl.GL43.glMinSampleShading(arg0);
	}

	@Override
	public void nglVertexAttribI4bv(int arg0,long arg1) {
		org.lwjgl.opengl.GL43.nglVertexAttribI4bv(arg0,arg1);
	}

	@Override
	public void glProgramUniformMatrix2dv(int arg0,int arg1,boolean arg2,double[] arg3) {
		org.lwjgl.opengl.GL43.glProgramUniformMatrix2dv(arg0,arg1,arg2,arg3);
	}

	@Override
	public void glProgramUniformMatrix2dv(int arg0,int arg1,boolean arg2,java.nio.DoubleBuffer arg3) {
		org.lwjgl.opengl.GL43.glProgramUniformMatrix2dv(arg0,arg1,arg2,arg3);
	}

	@Override
	public void nglVertexAttrib1fv(int arg0,long arg1) {
		org.lwjgl.opengl.GL43.nglVertexAttrib1fv(arg0,arg1);
	}

	@Override
	public void glVertex3sv(short[] arg0) {
		org.lwjgl.opengl.GL43.glVertex3sv(arg0);
	}

	@Override
	public void glVertex3sv(java.nio.ShortBuffer arg0) {
		org.lwjgl.opengl.GL43.glVertex3sv(arg0);
	}

	@Override
	public void glValidateProgram(int arg0) {
		org.lwjgl.opengl.GL43.glValidateProgram(arg0);
	}

	@Override
	public void glGetMapfv(int arg0,int arg1,java.nio.FloatBuffer arg2) {
		org.lwjgl.opengl.GL43.glGetMapfv(arg0,arg1,arg2);
	}

	@Override
	public void glGetMapfv(int arg0,int arg1,float[] arg2) {
		org.lwjgl.opengl.GL43.glGetMapfv(arg0,arg1,arg2);
	}

	@Override
	public void nglGetTexGendv(int arg0,int arg1,long arg2) {
		org.lwjgl.opengl.GL43.nglGetTexGendv(arg0,arg1,arg2);
	}

	@Override
	public void glLoadMatrixd(double[] arg0) {
		org.lwjgl.opengl.GL43.glLoadMatrixd(arg0);
	}

	@Override
	public void glLoadMatrixd(java.nio.DoubleBuffer arg0) {
		org.lwjgl.opengl.GL43.glLoadMatrixd(arg0);
	}

	@Override
	public void glLoadMatrixf(java.nio.FloatBuffer arg0) {
		org.lwjgl.opengl.GL43.glLoadMatrixf(arg0);
	}

	@Override
	public void glLoadMatrixf(float[] arg0) {
		org.lwjgl.opengl.GL43.glLoadMatrixf(arg0);
	}

	@Override
	public void nglVertexAttribI4iv(int arg0,long arg1) {
		org.lwjgl.opengl.GL43.nglVertexAttribI4iv(arg0,arg1);
	}

	@Override
	public void nglViewportArrayv(int arg0,int arg1,long arg2) {
		org.lwjgl.opengl.GL43.nglViewportArrayv(arg0,arg1,arg2);
	}

	@Override
	public void nglUniform1dv(int arg0,int arg1,long arg2) {
		org.lwjgl.opengl.GL43.nglUniform1dv(arg0,arg1,arg2);
	}

	@Override
	public void glDepthRange(double arg0,double arg1) {
		org.lwjgl.opengl.GL43.glDepthRange(arg0,arg1);
	}

	@Override
	public void nglGenTextures(int arg0,long arg1) {
		org.lwjgl.opengl.GL43.nglGenTextures(arg0,arg1);
	}

	@Override
	public void glVertexAttrib4Nusv(int arg0,java.nio.ShortBuffer arg1) {
		org.lwjgl.opengl.GL43.glVertexAttrib4Nusv(arg0,arg1);
	}

	@Override
	public void glVertexAttrib4Nusv(int arg0,short[] arg1) {
		org.lwjgl.opengl.GL43.glVertexAttrib4Nusv(arg0,arg1);
	}

	@Override
	public void glProgramParameteri(int arg0,int arg1,int arg2) {
		org.lwjgl.opengl.GL43.glProgramParameteri(arg0,arg1,arg2);
	}

	@Override
	public void glUniform1ui(int arg0,int arg1) {
		org.lwjgl.opengl.GL43.glUniform1ui(arg0,arg1);
	}

	@Override
	public void glColorP3ui(int arg0,int arg1) {
		org.lwjgl.opengl.GL43.glColorP3ui(arg0,arg1);
	}

	@Override
	public java.nio.ByteBuffer glMapBuffer_ByteBuffer(int arg0,int arg1,java.nio.ByteBuffer arg2) {
		return org.lwjgl.opengl.GL43.glMapBuffer(arg0,arg1,arg2);
	}

	@Override
	public java.nio.ByteBuffer glMapBuffer_ByteBuffer(int arg0,int arg1) {
		return org.lwjgl.opengl.GL43.glMapBuffer(arg0,arg1);
	}

	@Override
	public java.nio.ByteBuffer glMapBuffer_ByteBuffer(int arg0,int arg1,long arg2,java.nio.ByteBuffer arg3) {
		return org.lwjgl.opengl.GL43.glMapBuffer(arg0,arg1,arg2,arg3);
	}

	@Override
	public void glMultiTexCoordP3uiv(int arg0,int arg1,java.nio.IntBuffer arg2) {
		org.lwjgl.opengl.GL43.glMultiTexCoordP3uiv(arg0,arg1,arg2);
	}

	@Override
	public void glMultiTexCoordP3uiv(int arg0,int arg1,int[] arg2) {
		org.lwjgl.opengl.GL43.glMultiTexCoordP3uiv(arg0,arg1,arg2);
	}

	@Override
	public void glClearBufferuiv(int arg0,int arg1,int[] arg2) {
		org.lwjgl.opengl.GL43.glClearBufferuiv(arg0,arg1,arg2);
	}

	@Override
	public void glClearBufferuiv(int arg0,int arg1,java.nio.IntBuffer arg2) {
		org.lwjgl.opengl.GL43.glClearBufferuiv(arg0,arg1,arg2);
	}

	@Override
	public void nglVertexAttribI4uiv(int arg0,long arg1) {
		org.lwjgl.opengl.GL43.nglVertexAttribI4uiv(arg0,arg1);
	}

	@Override
	public void nglUniform1fv(int arg0,int arg1,long arg2) {
		org.lwjgl.opengl.GL43.nglUniform1fv(arg0,arg1,arg2);
	}

	@Override
	public void glTexParameteri(int arg0,int arg1,int arg2) {
		org.lwjgl.opengl.GL43.glTexParameteri(arg0,arg1,arg2);
	}

	@Override
	public void glGetMapiv(int arg0,int arg1,java.nio.IntBuffer arg2) {
		org.lwjgl.opengl.GL43.glGetMapiv(arg0,arg1,arg2);
	}

	@Override
	public void glGetMapiv(int arg0,int arg1,int[] arg2) {
		org.lwjgl.opengl.GL43.glGetMapiv(arg0,arg1,arg2);
	}

	@Override
	public int glGetVertexAttribIi(int arg0,int arg1) {
		return org.lwjgl.opengl.GL43.glGetVertexAttribIi(arg0,arg1);
	}

	@Override
	public double glGetDoublei(int arg0,int arg1) {
		return org.lwjgl.opengl.GL43.glGetDoublei(arg0,arg1);
	}

	@Override
	public void nglMultiTexCoord4dv(int arg0,long arg1) {
		org.lwjgl.opengl.GL43.nglMultiTexCoord4dv(arg0,arg1);
	}

	@Override
	public int glGetQueryi(int arg0,int arg1) {
		return org.lwjgl.opengl.GL43.glGetQueryi(arg0,arg1);
	}

	@Override
	public void glBindBufferBase(int arg0,int arg1,int arg2) {
		org.lwjgl.opengl.GL43.glBindBufferBase(arg0,arg1,arg2);
	}

	@Override
	public void glGetDoublev(int arg0,double[] arg1) {
		org.lwjgl.opengl.GL43.glGetDoublev(arg0,arg1);
	}

	@Override
	public void glGetDoublev(int arg0,java.nio.DoubleBuffer arg1) {
		org.lwjgl.opengl.GL43.glGetDoublev(arg0,arg1);
	}

	@Override
	public void glMultiTexCoord4sv(int arg0,java.nio.ShortBuffer arg1) {
		org.lwjgl.opengl.GL43.glMultiTexCoord4sv(arg0,arg1);
	}

	@Override
	public void glMultiTexCoord4sv(int arg0,short[] arg1) {
		org.lwjgl.opengl.GL43.glMultiTexCoord4sv(arg0,arg1);
	}

	@Override
	public void glVertexAttrib4Niv(int arg0,java.nio.IntBuffer arg1) {
		org.lwjgl.opengl.GL43.glVertexAttrib4Niv(arg0,arg1);
	}

	@Override
	public void glVertexAttrib4Niv(int arg0,int[] arg1) {
		org.lwjgl.opengl.GL43.glVertexAttrib4Niv(arg0,arg1);
	}

	@Override
	public void glGetMaterialiv(int arg0,int arg1,java.nio.IntBuffer arg2) {
		org.lwjgl.opengl.GL43.glGetMaterialiv(arg0,arg1,arg2);
	}

	@Override
	public void glGetMaterialiv(int arg0,int arg1,int[] arg2) {
		org.lwjgl.opengl.GL43.glGetMaterialiv(arg0,arg1,arg2);
	}

	@Override
	public void nglUniformMatrix2x3dv(int arg0,int arg1,boolean arg2,long arg3) {
		org.lwjgl.opengl.GL43.nglUniformMatrix2x3dv(arg0,arg1,arg2,arg3);
	}

	@Override
	public void glListBase(int arg0) {
		org.lwjgl.opengl.GL43.glListBase(arg0);
	}

	@Override
	public void nglScissorArrayv(int arg0,int arg1,long arg2) {
		org.lwjgl.opengl.GL43.nglScissorArrayv(arg0,arg1,arg2);
	}

	@Override
	public int glCreateProgram() {
		return org.lwjgl.opengl.GL43.glCreateProgram();
	}

	@Override
	public void nglColor4ubv(long arg0) {
		org.lwjgl.opengl.GL43.nglColor4ubv(arg0);
	}

	@Override
	public void glGetBufferPointerv(int arg0,int arg1,org.lwjgl.PointerBuffer arg2) {
		org.lwjgl.opengl.GL43.glGetBufferPointerv(arg0,arg1,arg2);
	}

	@Override
	public void glFeedbackBuffer(int arg0,java.nio.FloatBuffer arg1) {
		org.lwjgl.opengl.GL43.glFeedbackBuffer(arg0,arg1);
	}

	@Override
	public void glFeedbackBuffer(int arg0,float[] arg1) {
		org.lwjgl.opengl.GL43.glFeedbackBuffer(arg0,arg1);
	}

	@Override
	public void glProgramUniform3fv(int arg0,int arg1,float[] arg2) {
		org.lwjgl.opengl.GL43.glProgramUniform3fv(arg0,arg1,arg2);
	}

	@Override
	public void glProgramUniform3fv(int arg0,int arg1,java.nio.FloatBuffer arg2) {
		org.lwjgl.opengl.GL43.glProgramUniform3fv(arg0,arg1,arg2);
	}

	@Override
	public void nglProgramUniformMatrix2x4dv(int arg0,int arg1,int arg2,boolean arg3,long arg4) {
		org.lwjgl.opengl.GL43.nglProgramUniformMatrix2x4dv(arg0,arg1,arg2,arg3,arg4);
	}

	@Override
	public void glCullFace(int arg0) {
		org.lwjgl.opengl.GL43.glCullFace(arg0);
	}

	@Override
	public void glMultMatrixd(java.nio.DoubleBuffer arg0) {
		org.lwjgl.opengl.GL43.glMultMatrixd(arg0);
	}

	@Override
	public void glMultMatrixd(double[] arg0) {
		org.lwjgl.opengl.GL43.glMultMatrixd(arg0);
	}

	@Override
	public void nglUniformMatrix4x3fv(int arg0,int arg1,boolean arg2,long arg3) {
		org.lwjgl.opengl.GL43.nglUniformMatrix4x3fv(arg0,arg1,arg2,arg3);
	}

	@Override
	public void nglCompressedTexImage2D(int arg0,int arg1,int arg2,int arg3,int arg4,int arg5,int arg6,long arg7) {
		org.lwjgl.opengl.GL43.nglCompressedTexImage2D(arg0,arg1,arg2,arg3,arg4,arg5,arg6,arg7);
	}

	@Override
	public void nglGetBooleani_v(int arg0,int arg1,long arg2) {
		org.lwjgl.opengl.GL43.nglGetBooleani_v(arg0,arg1,arg2);
	}

	@Override
	public void glMultiTexCoord4dv(int arg0,double[] arg1) {
		org.lwjgl.opengl.GL43.glMultiTexCoord4dv(arg0,arg1);
	}

	@Override
	public void glMultiTexCoord4dv(int arg0,java.nio.DoubleBuffer arg1) {
		org.lwjgl.opengl.GL43.glMultiTexCoord4dv(arg0,arg1);
	}

	@Override
	public void nglMultiTexCoord4fv(int arg0,long arg1) {
		org.lwjgl.opengl.GL43.nglMultiTexCoord4fv(arg0,arg1);
	}

	@Override
	public void glBindBufferRange(int arg0,int arg1,int arg2,long arg3,long arg4) {
		org.lwjgl.opengl.GL43.glBindBufferRange(arg0,arg1,arg2,arg3,arg4);
	}

	@Override
	public void nglUniform1iv(int arg0,int arg1,long arg2) {
		org.lwjgl.opengl.GL43.nglUniform1iv(arg0,arg1,arg2);
	}

	@Override
	public void glMultMatrixf(java.nio.FloatBuffer arg0) {
		org.lwjgl.opengl.GL43.glMultMatrixf(arg0);
	}

	@Override
	public void glMultMatrixf(float[] arg0) {
		org.lwjgl.opengl.GL43.glMultMatrixf(arg0);
	}

	@Override
	public void nglGetDoublev(int arg0,long arg1) {
		org.lwjgl.opengl.GL43.nglGetDoublev(arg0,arg1);
	}

	@Override
	public void glUniformSubroutinesui(int arg0,int arg1) {
		org.lwjgl.opengl.GL43.glUniformSubroutinesui(arg0,arg1);
	}

	@Override
	public void glDepthRangef(float arg0,float arg1) {
		org.lwjgl.opengl.GL43.glDepthRangef(arg0,arg1);
	}

	@Override
	public void glDisable(int arg0) {
		org.lwjgl.opengl.GL43.glDisable(arg0);
	}

	@Override
	public void nglProgramBinary(int arg0,int arg1,long arg2,int arg3) {
		org.lwjgl.opengl.GL43.nglProgramBinary(arg0,arg1,arg2,arg3);
	}

	@Override
	public void nglLightModelfv(int arg0,long arg1) {
		org.lwjgl.opengl.GL43.nglLightModelfv(arg0,arg1);
	}

	@Override
	public void nglCompressedTexImage3D(int arg0,int arg1,int arg2,int arg3,int arg4,int arg5,int arg6,int arg7,long arg8) {
		org.lwjgl.opengl.GL43.nglCompressedTexImage3D(arg0,arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8);
	}

	@Override
	public int glGetActiveAtomicCounterBufferi(int arg0,int arg1,int arg2) {
		return org.lwjgl.opengl.GL43.glGetActiveAtomicCounterBufferi(arg0,arg1,arg2);
	}

	@Override
	public void nglColor4bv(long arg0) {
		org.lwjgl.opengl.GL43.nglColor4bv(arg0);
	}

	@Override
	public void glLightf(int arg0,int arg1,float arg2) {
		org.lwjgl.opengl.GL43.glLightf(arg0,arg1,arg2);
	}

	@Override
	public void nglVertex2sv(long arg0) {
		org.lwjgl.opengl.GL43.nglVertex2sv(arg0);
	}

	@Override
	public void glLighti(int arg0,int arg1,int arg2) {
		org.lwjgl.opengl.GL43.glLighti(arg0,arg1,arg2);
	}

	@Override
	public int glGetFramebufferParameteri(int arg0,int arg1) {
		return org.lwjgl.opengl.GL43.glGetFramebufferParameteri(arg0,arg1);
	}

	@Override
	public void nglProgramUniformMatrix3x2dv(int arg0,int arg1,int arg2,boolean arg3,long arg4) {
		org.lwjgl.opengl.GL43.nglProgramUniformMatrix3x2dv(arg0,arg1,arg2,arg3,arg4);
	}

	@Override
	public void glTexCoord2sv(short[] arg0) {
		org.lwjgl.opengl.GL43.glTexCoord2sv(arg0);
	}

	@Override
	public void glTexCoord2sv(java.nio.ShortBuffer arg0) {
		org.lwjgl.opengl.GL43.glTexCoord2sv(arg0);
	}

	@Override
	public void nglProgramUniformMatrix2x4fv(int arg0,int arg1,int arg2,boolean arg3,long arg4) {
		org.lwjgl.opengl.GL43.nglProgramUniformMatrix2x4fv(arg0,arg1,arg2,arg3,arg4);
	}

	@Override
	public void nglDrawRangeElementsBaseVertex(int arg0,int arg1,int arg2,int arg3,int arg4,long arg5,int arg6) {
		org.lwjgl.opengl.GL43.nglDrawRangeElementsBaseVertex(arg0,arg1,arg2,arg3,arg4,arg5,arg6);
	}

	@Override
	public void nglFogCoorddv(long arg0) {
		org.lwjgl.opengl.GL43.nglFogCoorddv(arg0);
	}

	@Override
	public int glGetProgramInterfacei(int arg0,int arg1,int arg2) {
		return org.lwjgl.opengl.GL43.glGetProgramInterfacei(arg0,arg1,arg2);
	}

	@Override
	public void glUniform4f(int arg0,float arg1,float arg2,float arg3,float arg4) {
		org.lwjgl.opengl.GL43.glUniform4f(arg0,arg1,arg2,arg3,arg4);
	}

	@Override
	public void nglGenFramebuffers(int arg0,long arg1) {
		org.lwjgl.opengl.GL43.nglGenFramebuffers(arg0,arg1);
	}

	@Override
	public void glMultiTexCoord4fv(int arg0,java.nio.FloatBuffer arg1) {
		org.lwjgl.opengl.GL43.glMultiTexCoord4fv(arg0,arg1);
	}

	@Override
	public void glMultiTexCoord4fv(int arg0,float[] arg1) {
		org.lwjgl.opengl.GL43.glMultiTexCoord4fv(arg0,arg1);
	}

	@Override
	public void glUniform4i(int arg0,int arg1,int arg2,int arg3,int arg4) {
		org.lwjgl.opengl.GL43.glUniform4i(arg0,arg1,arg2,arg3,arg4);
	}

	@Override
	public void glGetBufferParameteri64v(int arg0,int arg1,long[] arg2) {
		org.lwjgl.opengl.GL43.glGetBufferParameteri64v(arg0,arg1,arg2);
	}

	@Override
	public void glGetBufferParameteri64v(int arg0,int arg1,java.nio.LongBuffer arg2) {
		org.lwjgl.opengl.GL43.glGetBufferParameteri64v(arg0,arg1,arg2);
	}

	@Override
	public int glGetFragDataIndex(int arg0,java.lang.CharSequence arg1) {
		return org.lwjgl.opengl.GL43.glGetFragDataIndex(arg0,arg1);
	}

	@Override
	public int glGetFragDataIndex(int arg0,java.nio.ByteBuffer arg1) {
		return org.lwjgl.opengl.GL43.glGetFragDataIndex(arg0,arg1);
	}

	@Override
	public void glEvalCoord2dv(double[] arg0) {
		org.lwjgl.opengl.GL43.glEvalCoord2dv(arg0);
	}

	@Override
	public void glEvalCoord2dv(java.nio.DoubleBuffer arg0) {
		org.lwjgl.opengl.GL43.glEvalCoord2dv(arg0);
	}

	@Override
	public void glDebugMessageInsert(int arg0,int arg1,int arg2,int arg3,java.lang.CharSequence arg4) {
		org.lwjgl.opengl.GL43.glDebugMessageInsert(arg0,arg1,arg2,arg3,arg4);
	}

	@Override
	public void glDebugMessageInsert(int arg0,int arg1,int arg2,int arg3,java.nio.ByteBuffer arg4) {
		org.lwjgl.opengl.GL43.glDebugMessageInsert(arg0,arg1,arg2,arg3,arg4);
	}

	@Override
	public void glProgramUniform3dv(int arg0,int arg1,double[] arg2) {
		org.lwjgl.opengl.GL43.glProgramUniform3dv(arg0,arg1,arg2);
	}

	@Override
	public void glProgramUniform3dv(int arg0,int arg1,java.nio.DoubleBuffer arg2) {
		org.lwjgl.opengl.GL43.glProgramUniform3dv(arg0,arg1,arg2);
	}

	@Override
	public void glPopClientAttrib() {
		org.lwjgl.opengl.GL43.glPopClientAttrib();
	}

	@Override
	public void nglProgramUniform2iv(int arg0,int arg1,int arg2,long arg3) {
		org.lwjgl.opengl.GL43.nglProgramUniform2iv(arg0,arg1,arg2,arg3);
	}

	@Override
	public void glDeleteRenderbuffers(java.nio.IntBuffer arg0) {
		org.lwjgl.opengl.GL43.glDeleteRenderbuffers(arg0);
	}

	@Override
	public void glDeleteRenderbuffers(int arg0) {
		org.lwjgl.opengl.GL43.glDeleteRenderbuffers(arg0);
	}

	@Override
	public void glDeleteRenderbuffers(int[] arg0) {
		org.lwjgl.opengl.GL43.glDeleteRenderbuffers(arg0);
	}

	@Override
	public void glVertexAttribI1ui(int arg0,int arg1) {
		org.lwjgl.opengl.GL43.glVertexAttribI1ui(arg0,arg1);
	}

	@Override
	public void nglPatchParameterfv(int arg0,long arg1) {
		org.lwjgl.opengl.GL43.nglPatchParameterfv(arg0,arg1);
	}

	@Override
	public void glPushClientAttrib(int arg0) {
		org.lwjgl.opengl.GL43.glPushClientAttrib(arg0);
	}

	@Override
	public long nglMapBufferRange(int arg0,long arg1,long arg2,int arg3) {
		return org.lwjgl.opengl.GL43.nglMapBufferRange(arg0,arg1,arg2,arg3);
	}

	@Override
	public void glGetTexEnvfv(int arg0,int arg1,float[] arg2) {
		org.lwjgl.opengl.GL43.glGetTexEnvfv(arg0,arg1,arg2);
	}

	@Override
	public void glGetTexEnvfv(int arg0,int arg1,java.nio.FloatBuffer arg2) {
		org.lwjgl.opengl.GL43.glGetTexEnvfv(arg0,arg1,arg2);
	}

	@Override
	public void glVertexAttrib4Nuiv(int arg0,int[] arg1) {
		org.lwjgl.opengl.GL43.glVertexAttrib4Nuiv(arg0,arg1);
	}

	@Override
	public void glVertexAttrib4Nuiv(int arg0,java.nio.IntBuffer arg1) {
		org.lwjgl.opengl.GL43.glVertexAttrib4Nuiv(arg0,arg1);
	}

	@Override
	public void nglColor4dv(long arg0) {
		org.lwjgl.opengl.GL43.nglColor4dv(arg0);
	}

	@Override
	public int nglGetFragDataIndex(int arg0,long arg1) {
		return org.lwjgl.opengl.GL43.nglGetFragDataIndex(arg0,arg1);
	}

	@Override
	public void glGetProgramiv(int arg0,int arg1,int[] arg2) {
		org.lwjgl.opengl.GL43.glGetProgramiv(arg0,arg1,arg2);
	}

	@Override
	public void glGetProgramiv(int arg0,int arg1,java.nio.IntBuffer arg2) {
		org.lwjgl.opengl.GL43.glGetProgramiv(arg0,arg1,arg2);
	}

	@Override
	public void nglProgramUniformMatrix3x2fv(int arg0,int arg1,int arg2,boolean arg3,long arg4) {
		org.lwjgl.opengl.GL43.nglProgramUniformMatrix3x2fv(arg0,arg1,arg2,arg3,arg4);
	}

	@Override
	public void nglLightModeliv(int arg0,long arg1) {
		org.lwjgl.opengl.GL43.nglLightModeliv(arg0,arg1);
	}

	@Override
	public void nglGetActiveSubroutineUniformName(int arg0,int arg1,int arg2,int arg3,long arg4,long arg5) {
		org.lwjgl.opengl.GL43.nglGetActiveSubroutineUniformName(arg0,arg1,arg2,arg3,arg4,arg5);
	}

	@Override
	public void nglPixelMapusv(int arg0,int arg1,long arg2) {
		org.lwjgl.opengl.GL43.nglPixelMapusv(arg0,arg1,arg2);
	}

	@Override
	public void nglProgramUniform2fv(int arg0,int arg1,int arg2,long arg3) {
		org.lwjgl.opengl.GL43.nglProgramUniform2fv(arg0,arg1,arg2,arg3);
	}

	@Override
	public void glClipPlane(int arg0,double[] arg1) {
		org.lwjgl.opengl.GL43.glClipPlane(arg0,arg1);
	}

	@Override
	public void glClipPlane(int arg0,java.nio.DoubleBuffer arg1) {
		org.lwjgl.opengl.GL43.glClipPlane(arg0,arg1);
	}

	@Override
	public void glProgramUniform4uiv(int arg0,int arg1,int[] arg2) {
		org.lwjgl.opengl.GL43.glProgramUniform4uiv(arg0,arg1,arg2);
	}

	@Override
	public void glProgramUniform4uiv(int arg0,int arg1,java.nio.IntBuffer arg2) {
		org.lwjgl.opengl.GL43.glProgramUniform4uiv(arg0,arg1,arg2);
	}

	@Override
	public void glEvalCoord2fv(java.nio.FloatBuffer arg0) {
		org.lwjgl.opengl.GL43.glEvalCoord2fv(arg0);
	}

	@Override
	public void glEvalCoord2fv(float[] arg0) {
		org.lwjgl.opengl.GL43.glEvalCoord2fv(arg0);
	}

	@Override
	public void glGenTextures(int[] arg0) {
		org.lwjgl.opengl.GL43.glGenTextures(arg0);
	}

	@Override
	public void glGenTextures(java.nio.IntBuffer arg0) {
		org.lwjgl.opengl.GL43.glGenTextures(arg0);
	}

	@Override
	public int glGenTextures() {
		return org.lwjgl.opengl.GL43.glGenTextures();
	}

	@Override
	public void nglSelectBuffer(int arg0,long arg1) {
		org.lwjgl.opengl.GL43.nglSelectBuffer(arg0,arg1);
	}

	@Override
	public void glGetShaderPrecisionFormat(int arg0,int arg1,java.nio.IntBuffer arg2,java.nio.IntBuffer arg3) {
		org.lwjgl.opengl.GL43.glGetShaderPrecisionFormat(arg0,arg1,arg2,arg3);
	}

	@Override
	public int glGetShaderPrecisionFormat(int arg0,int arg1,java.nio.IntBuffer arg2) {
		return org.lwjgl.opengl.GL43.glGetShaderPrecisionFormat(arg0,arg1,arg2);
	}

	@Override
	public void glGetShaderPrecisionFormat(int arg0,int arg1,int[] arg2,int[] arg3) {
		org.lwjgl.opengl.GL43.glGetShaderPrecisionFormat(arg0,arg1,arg2,arg3);
	}

	@Override
	public void glMultiTexCoord4iv(int arg0,int[] arg1) {
		org.lwjgl.opengl.GL43.glMultiTexCoord4iv(arg0,arg1);
	}

	@Override
	public void glMultiTexCoord4iv(int arg0,java.nio.IntBuffer arg1) {
		org.lwjgl.opengl.GL43.glMultiTexCoord4iv(arg0,arg1);
	}

	@Override
	public void nglProgramUniformMatrix3dv(int arg0,int arg1,int arg2,boolean arg3,long arg4) {
		org.lwjgl.opengl.GL43.nglProgramUniformMatrix3dv(arg0,arg1,arg2,arg3,arg4);
	}

	@Override
	public void glLineStipple(int arg0,short arg1) {
		org.lwjgl.opengl.GL43.glLineStipple(arg0,arg1);
	}

	@Override
	public void glPopDebugGroup() {
		org.lwjgl.opengl.GL43.glPopDebugGroup();
	}

	@Override
	public void glGetProgramStageiv(int arg0,int arg1,int arg2,java.nio.IntBuffer arg3) {
		org.lwjgl.opengl.GL43.glGetProgramStageiv(arg0,arg1,arg2,arg3);
	}

	@Override
	public void glGetProgramStageiv(int arg0,int arg1,int arg2,int[] arg3) {
		org.lwjgl.opengl.GL43.glGetProgramStageiv(arg0,arg1,arg2,arg3);
	}

	@Override
	public void nglGetDoublei_v(int arg0,int arg1,long arg2) {
		org.lwjgl.opengl.GL43.nglGetDoublei_v(arg0,arg1,arg2);
	}

	@Override
	public void glVertexAttribI3uiv(int arg0,java.nio.IntBuffer arg1) {
		org.lwjgl.opengl.GL43.glVertexAttribI3uiv(arg0,arg1);
	}

	@Override
	public void glVertexAttribI3uiv(int arg0,int[] arg1) {
		org.lwjgl.opengl.GL43.glVertexAttribI3uiv(arg0,arg1);
	}

	@Override
	public void glVertexAttrib1sv(int arg0,short[] arg1) {
		org.lwjgl.opengl.GL43.glVertexAttrib1sv(arg0,arg1);
	}

	@Override
	public void glVertexAttrib1sv(int arg0,java.nio.ShortBuffer arg1) {
		org.lwjgl.opengl.GL43.glVertexAttrib1sv(arg0,arg1);
	}

	@Override
	public void glEdgeFlag(boolean arg0) {
		org.lwjgl.opengl.GL43.glEdgeFlag(arg0);
	}

	@Override
	public void glMaterialf(int arg0,int arg1,float arg2) {
		org.lwjgl.opengl.GL43.glMaterialf(arg0,arg1,arg2);
	}

	@Override
	public void nglMultiTexCoord4iv(int arg0,long arg1) {
		org.lwjgl.opengl.GL43.nglMultiTexCoord4iv(arg0,arg1);
	}

	@Override
	public void glMateriali(int arg0,int arg1,int arg2) {
		org.lwjgl.opengl.GL43.glMateriali(arg0,arg1,arg2);
	}

	@Override
	public void nglColor4fv(long arg0) {
		org.lwjgl.opengl.GL43.nglColor4fv(arg0);
	}

	@Override
	public void glGetQueryObjectui64v(int arg0,int arg1,long arg2) {
		org.lwjgl.opengl.GL43.glGetQueryObjectui64v(arg0,arg1,arg2);
	}

	@Override
	public void glGetQueryObjectui64v(int arg0,int arg1,long[] arg2) {
		org.lwjgl.opengl.GL43.glGetQueryObjectui64v(arg0,arg1,arg2);
	}

	@Override
	public void glGetQueryObjectui64v(int arg0,int arg1,java.nio.LongBuffer arg2) {
		org.lwjgl.opengl.GL43.glGetQueryObjectui64v(arg0,arg1,arg2);
	}

	@Override
	public void nglUniformMatrix4x3dv(int arg0,int arg1,boolean arg2,long arg3) {
		org.lwjgl.opengl.GL43.nglUniformMatrix4x3dv(arg0,arg1,arg2,arg3);
	}

	@Override
	public void nglGetTexLevelParameteriv(int arg0,int arg1,int arg2,long arg3) {
		org.lwjgl.opengl.GL43.nglGetTexLevelParameteriv(arg0,arg1,arg2,arg3);
	}

	@Override
	public void glDebugMessageControl(int arg0,int arg1,int arg2,int arg3,boolean arg4) {
		org.lwjgl.opengl.GL43.glDebugMessageControl(arg0,arg1,arg2,arg3,arg4);
	}

	@Override
	public void glDebugMessageControl(int arg0,int arg1,int arg2,int[] arg3,boolean arg4) {
		org.lwjgl.opengl.GL43.glDebugMessageControl(arg0,arg1,arg2,arg3,arg4);
	}

	@Override
	public void glDebugMessageControl(int arg0,int arg1,int arg2,java.nio.IntBuffer arg3,boolean arg4) {
		org.lwjgl.opengl.GL43.glDebugMessageControl(arg0,arg1,arg2,arg3,arg4);
	}

	@Override
	public void nglVertexAttrib1sv(int arg0,long arg1) {
		org.lwjgl.opengl.GL43.nglVertexAttrib1sv(arg0,arg1);
	}

	@Override
	public void glDeleteProgramPipelines(int[] arg0) {
		org.lwjgl.opengl.GL43.glDeleteProgramPipelines(arg0);
	}

	@Override
	public void glDeleteProgramPipelines(int arg0) {
		org.lwjgl.opengl.GL43.glDeleteProgramPipelines(arg0);
	}

	@Override
	public void glDeleteProgramPipelines(java.nio.IntBuffer arg0) {
		org.lwjgl.opengl.GL43.glDeleteProgramPipelines(arg0);
	}

	@Override
	public void glGetActiveUniformBlockName(int arg0,int arg1,int[] arg2,java.nio.ByteBuffer arg3) {
		org.lwjgl.opengl.GL43.glGetActiveUniformBlockName(arg0,arg1,arg2,arg3);
	}

	@Override
	public java.lang.String glGetActiveUniformBlockName_String(int arg0,int arg1) {
		return org.lwjgl.opengl.GL43.glGetActiveUniformBlockName(arg0,arg1);
	}

	@Override
	public void glGetActiveUniformBlockName(int arg0,int arg1,java.nio.IntBuffer arg2,java.nio.ByteBuffer arg3) {
		org.lwjgl.opengl.GL43.glGetActiveUniformBlockName(arg0,arg1,arg2,arg3);
	}

	@Override
	public java.lang.String glGetActiveUniformBlockName_String(int arg0,int arg1,int arg2) {
		return org.lwjgl.opengl.GL43.glGetActiveUniformBlockName(arg0,arg1,arg2);
	}

	@Override
	public void glCallList(int arg0) {
		org.lwjgl.opengl.GL43.glCallList(arg0);
	}

	@Override
	public void glGetClipPlane(int arg0,double[] arg1) {
		org.lwjgl.opengl.GL43.glGetClipPlane(arg0,arg1);
	}

	@Override
	public void glGetClipPlane(int arg0,java.nio.DoubleBuffer arg1) {
		org.lwjgl.opengl.GL43.glGetClipPlane(arg0,arg1);
	}

	@Override
	public void nglFogiv(int arg0,long arg1) {
		org.lwjgl.opengl.GL43.nglFogiv(arg0,arg1);
	}

	@Override
	public void glProgramUniform3iv(int arg0,int arg1,int[] arg2) {
		org.lwjgl.opengl.GL43.glProgramUniform3iv(arg0,arg1,arg2);
	}

	@Override
	public void glProgramUniform3iv(int arg0,int arg1,java.nio.IntBuffer arg2) {
		org.lwjgl.opengl.GL43.glProgramUniform3iv(arg0,arg1,arg2);
	}

	@Override
	public boolean glIsProgram(int arg0) {
		return org.lwjgl.opengl.GL43.glIsProgram(arg0);
	}

	@Override
	public void nglProgramUniformMatrix3fv(int arg0,int arg1,int arg2,boolean arg3,long arg4) {
		org.lwjgl.opengl.GL43.nglProgramUniformMatrix3fv(arg0,arg1,arg2,arg3,arg4);
	}

	@Override
	public void nglCompressedTexImage1D(int arg0,int arg1,int arg2,int arg3,int arg4,int arg5,long arg6) {
		org.lwjgl.opengl.GL43.nglCompressedTexImage1D(arg0,arg1,arg2,arg3,arg4,arg5,arg6);
	}

	@Override
	public int glGetActiveSubroutineUniformi(int arg0,int arg1,int arg2,int arg3) {
		return org.lwjgl.opengl.GL43.glGetActiveSubroutineUniformi(arg0,arg1,arg2,arg3);
	}

	@Override
	public void glInvalidateTexSubImage(int arg0,int arg1,int arg2,int arg3,int arg4,int arg5,int arg6,int arg7) {
		org.lwjgl.opengl.GL43.glInvalidateTexSubImage(arg0,arg1,arg2,arg3,arg4,arg5,arg6,arg7);
	}

	@Override
	public void nglVertexAttribI4ubv(int arg0,long arg1) {
		org.lwjgl.opengl.GL43.nglVertexAttribI4ubv(arg0,arg1);
	}

	@Override
	public void nglGetProgramInfoLog(int arg0,int arg1,long arg2,long arg3) {
		org.lwjgl.opengl.GL43.nglGetProgramInfoLog(arg0,arg1,arg2,arg3);
	}

	@Override
	public java.lang.String glGetProgramPipelineInfoLog_String(int arg0) {
		return org.lwjgl.opengl.GL43.glGetProgramPipelineInfoLog(arg0);
	}

	@Override
	public void glGetProgramPipelineInfoLog(int arg0,java.nio.IntBuffer arg1,java.nio.ByteBuffer arg2) {
		org.lwjgl.opengl.GL43.glGetProgramPipelineInfoLog(arg0,arg1,arg2);
	}

	@Override
	public java.lang.String glGetProgramPipelineInfoLog_String(int arg0,int arg1) {
		return org.lwjgl.opengl.GL43.glGetProgramPipelineInfoLog(arg0,arg1);
	}

	@Override
	public void glGetProgramPipelineInfoLog(int arg0,int[] arg1,java.nio.ByteBuffer arg2) {
		org.lwjgl.opengl.GL43.glGetProgramPipelineInfoLog(arg0,arg1,arg2);
	}

	@Override
	public void glLightiv(int arg0,int arg1,java.nio.IntBuffer arg2) {
		org.lwjgl.opengl.GL43.glLightiv(arg0,arg1,arg2);
	}

	@Override
	public void glLightiv(int arg0,int arg1,int[] arg2) {
		org.lwjgl.opengl.GL43.glLightiv(arg0,arg1,arg2);
	}

	@Override
	public void nglTransformFeedbackVaryings(int arg0,int arg1,long arg2,int arg3) {
		org.lwjgl.opengl.GL43.nglTransformFeedbackVaryings(arg0,arg1,arg2,arg3);
	}

	@Override
	public void nglProgramUniform2dv(int arg0,int arg1,int arg2,long arg3) {
		org.lwjgl.opengl.GL43.nglProgramUniform2dv(arg0,arg1,arg2,arg3);
	}

	@Override
	public void nglRasterPos4fv(long arg0) {
		org.lwjgl.opengl.GL43.nglRasterPos4fv(arg0);
	}

	@Override
	public void nglTexCoord2dv(long arg0) {
		org.lwjgl.opengl.GL43.nglTexCoord2dv(arg0);
	}

	@Override
	public int glGetSynci(long arg0,int arg1,java.nio.IntBuffer arg2) {
		return org.lwjgl.opengl.GL43.glGetSynci(arg0,arg1,arg2);
	}

	@Override
	public boolean glIsVertexArray(int arg0) {
		return org.lwjgl.opengl.GL43.glIsVertexArray(arg0);
	}

	@Override
	public void glTexEnvf(int arg0,int arg1,float arg2) {
		org.lwjgl.opengl.GL43.glTexEnvf(arg0,arg1,arg2);
	}

	@Override
	public void glTexEnvi(int arg0,int arg1,int arg2) {
		org.lwjgl.opengl.GL43.glTexEnvi(arg0,arg1,arg2);
	}

	@Override
	public void nglSecondaryColor3ubv(long arg0) {
		org.lwjgl.opengl.GL43.nglSecondaryColor3ubv(arg0);
	}

	@Override
	public void nglDrawElements(int arg0,int arg1,int arg2,long arg3) {
		org.lwjgl.opengl.GL43.nglDrawElements(arg0,arg1,arg2,arg3);
	}

	@Override
	public void glFogi(int arg0,int arg1) {
		org.lwjgl.opengl.GL43.glFogi(arg0,arg1);
	}

	@Override
	public void glGetSamplerParameterfv(int arg0,int arg1,float[] arg2) {
		org.lwjgl.opengl.GL43.glGetSamplerParameterfv(arg0,arg1,arg2);
	}

	@Override
	public void glGetSamplerParameterfv(int arg0,int arg1,java.nio.FloatBuffer arg2) {
		org.lwjgl.opengl.GL43.glGetSamplerParameterfv(arg0,arg1,arg2);
	}

	@Override
	public long glFenceSync(int arg0,int arg1) {
		return org.lwjgl.opengl.GL43.glFenceSync(arg0,arg1);
	}

	@Override
	public void glClearBufferfv(int arg0,int arg1,float[] arg2) {
		org.lwjgl.opengl.GL43.glClearBufferfv(arg0,arg1,arg2);
	}

	@Override
	public void glClearBufferfv(int arg0,int arg1,java.nio.FloatBuffer arg2) {
		org.lwjgl.opengl.GL43.glClearBufferfv(arg0,arg1,arg2);
	}

	@Override
	public void glBindAttribLocation(int arg0,int arg1,java.nio.ByteBuffer arg2) {
		org.lwjgl.opengl.GL43.glBindAttribLocation(arg0,arg1,arg2);
	}

	@Override
	public void glBindAttribLocation(int arg0,int arg1,java.lang.CharSequence arg2) {
		org.lwjgl.opengl.GL43.glBindAttribLocation(arg0,arg1,arg2);
	}

	@Override
	public void glLightfv(int arg0,int arg1,float[] arg2) {
		org.lwjgl.opengl.GL43.glLightfv(arg0,arg1,arg2);
	}

	@Override
	public void glLightfv(int arg0,int arg1,java.nio.FloatBuffer arg2) {
		org.lwjgl.opengl.GL43.glLightfv(arg0,arg1,arg2);
	}

	@Override
	public void glNormal3b(byte arg0,byte arg1,byte arg2) {
		org.lwjgl.opengl.GL43.glNormal3b(arg0,arg1,arg2);
	}

	@Override
	public void glNormal3d(double arg0,double arg1,double arg2) {
		org.lwjgl.opengl.GL43.glNormal3d(arg0,arg1,arg2);
	}

	@Override
	public void nglGetTexParameterIuiv(int arg0,int arg1,long arg2) {
		org.lwjgl.opengl.GL43.nglGetTexParameterIuiv(arg0,arg1,arg2);
	}

	@Override
	public void glNormal3f(float arg0,float arg1,float arg2) {
		org.lwjgl.opengl.GL43.glNormal3f(arg0,arg1,arg2);
	}

	@Override
	public void glClearBufferfi(int arg0,int arg1,float arg2,int arg3) {
		org.lwjgl.opengl.GL43.glClearBufferfi(arg0,arg1,arg2,arg3);
	}

	@Override
	public void nglMultiTexCoord2iv(int arg0,long arg1) {
		org.lwjgl.opengl.GL43.nglMultiTexCoord2iv(arg0,arg1);
	}

	@Override
	public void glFogf(int arg0,float arg1) {
		org.lwjgl.opengl.GL43.glFogf(arg0,arg1);
	}

	@Override
	public void nglTexParameterfv(int arg0,int arg1,long arg2) {
		org.lwjgl.opengl.GL43.nglTexParameterfv(arg0,arg1,arg2);
	}

	@Override
	public void glLightModeli(int arg0,int arg1) {
		org.lwjgl.opengl.GL43.glLightModeli(arg0,arg1);
	}

	@Override
	public void glGetTexLevelParameterfv(int arg0,int arg1,int arg2,float[] arg3) {
		org.lwjgl.opengl.GL43.glGetTexLevelParameterfv(arg0,arg1,arg2,arg3);
	}

	@Override
	public void glGetTexLevelParameterfv(int arg0,int arg1,int arg2,java.nio.FloatBuffer arg3) {
		org.lwjgl.opengl.GL43.glGetTexLevelParameterfv(arg0,arg1,arg2,arg3);
	}

	@Override
	public void nglFogfv(int arg0,long arg1) {
		org.lwjgl.opengl.GL43.nglFogfv(arg0,arg1);
	}

	@Override
	public void glTexCoord1iv(int[] arg0) {
		org.lwjgl.opengl.GL43.glTexCoord1iv(arg0);
	}

	@Override
	public void glTexCoord1iv(java.nio.IntBuffer arg0) {
		org.lwjgl.opengl.GL43.glTexCoord1iv(arg0);
	}

	@Override
	public void glClearBufferiv(int arg0,int arg1,int[] arg2) {
		org.lwjgl.opengl.GL43.glClearBufferiv(arg0,arg1,arg2);
	}

	@Override
	public void glClearBufferiv(int arg0,int arg1,java.nio.IntBuffer arg2) {
		org.lwjgl.opengl.GL43.glClearBufferiv(arg0,arg1,arg2);
	}

	@Override
	public void nglColorP3uiv(int arg0,long arg1) {
		org.lwjgl.opengl.GL43.nglColorP3uiv(arg0,arg1);
	}

	@Override
	public void nglTexCoord2fv(long arg0) {
		org.lwjgl.opengl.GL43.nglTexCoord2fv(arg0);
	}

	@Override
	public void nglProgramUniform3uiv(int arg0,int arg1,int arg2,long arg3) {
		org.lwjgl.opengl.GL43.nglProgramUniform3uiv(arg0,arg1,arg2,arg3);
	}

	@Override
	public void glNormal3i(int arg0,int arg1,int arg2) {
		org.lwjgl.opengl.GL43.glNormal3i(arg0,arg1,arg2);
	}

	@Override
	public void glDeleteTransformFeedbacks(int[] arg0) {
		org.lwjgl.opengl.GL43.glDeleteTransformFeedbacks(arg0);
	}

	@Override
	public void glDeleteTransformFeedbacks(int arg0) {
		org.lwjgl.opengl.GL43.glDeleteTransformFeedbacks(arg0);
	}

	@Override
	public void glDeleteTransformFeedbacks(java.nio.IntBuffer arg0) {
		org.lwjgl.opengl.GL43.glDeleteTransformFeedbacks(arg0);
	}

	@Override
	public void nglRasterPos4iv(long arg0) {
		org.lwjgl.opengl.GL43.nglRasterPos4iv(arg0);
	}

	@Override
	public void nglDeleteSync(long arg0) {
		org.lwjgl.opengl.GL43.nglDeleteSync(arg0);
	}

	@Override
	public void nglGetBufferPointerv(int arg0,int arg1,long arg2) {
		org.lwjgl.opengl.GL43.nglGetBufferPointerv(arg0,arg1,arg2);
	}

	@Override
	public void nglSecondaryColorP3uiv(int arg0,long arg1) {
		org.lwjgl.opengl.GL43.nglSecondaryColorP3uiv(arg0,arg1);
	}

	@Override
	public void nglTexParameterIuiv(int arg0,int arg1,long arg2) {
		org.lwjgl.opengl.GL43.nglTexParameterIuiv(arg0,arg1,arg2);
	}

	@Override
	public void glNormal3s(short arg0,short arg1,short arg2) {
		org.lwjgl.opengl.GL43.glNormal3s(arg0,arg1,arg2);
	}

	@Override
	public void glPolygonMode(int arg0,int arg1) {
		org.lwjgl.opengl.GL43.glPolygonMode(arg0,arg1);
	}

	@Override
	public void glCompressedTexSubImage2D(int arg0,int arg1,int arg2,int arg3,int arg4,int arg5,int arg6,java.nio.ByteBuffer arg7) {
		org.lwjgl.opengl.GL43.glCompressedTexSubImage2D(arg0,arg1,arg2,arg3,arg4,arg5,arg6,arg7);
	}

	@Override
	public void glCompressedTexSubImage2D(int arg0,int arg1,int arg2,int arg3,int arg4,int arg5,int arg6,int arg7,long arg8) {
		org.lwjgl.opengl.GL43.glCompressedTexSubImage2D(arg0,arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8);
	}

	@Override
	public void nglBitmap(int arg0,int arg1,float arg2,float arg3,float arg4,float arg5,long arg6) {
		org.lwjgl.opengl.GL43.nglBitmap(arg0,arg1,arg2,arg3,arg4,arg5,arg6);
	}

	@Override
	public void glLightModelf(int arg0,float arg1) {
		org.lwjgl.opengl.GL43.glLightModelf(arg0,arg1);
	}

	@Override
	public void glSampleMaski(int arg0,int arg1) {
		org.lwjgl.opengl.GL43.glSampleMaski(arg0,arg1);
	}

	@Override
	public void glVertexAttribP4uiv(int arg0,int arg1,boolean arg2,int[] arg3) {
		org.lwjgl.opengl.GL43.glVertexAttribP4uiv(arg0,arg1,arg2,arg3);
	}

	@Override
	public void glVertexAttribP4uiv(int arg0,int arg1,boolean arg2,java.nio.IntBuffer arg3) {
		org.lwjgl.opengl.GL43.glVertexAttribP4uiv(arg0,arg1,arg2,arg3);
	}

	@Override
	public int glGetLighti(int arg0,int arg1) {
		return org.lwjgl.opengl.GL43.glGetLighti(arg0,arg1);
	}

	@Override
	public float glGetLightf(int arg0,int arg1) {
		return org.lwjgl.opengl.GL43.glGetLightf(arg0,arg1);
	}

	@Override
	public void glTexParameterIui(int arg0,int arg1,int arg2) {
		org.lwjgl.opengl.GL43.glTexParameterIui(arg0,arg1,arg2);
	}

	@Override
	public void glInvalidateSubFramebuffer(int arg0,int[] arg1,int arg2,int arg3,int arg4,int arg5) {
		org.lwjgl.opengl.GL43.glInvalidateSubFramebuffer(arg0,arg1,arg2,arg3,arg4,arg5);
	}

	@Override
	public void glInvalidateSubFramebuffer(int arg0,java.nio.IntBuffer arg1,int arg2,int arg3,int arg4,int arg5) {
		org.lwjgl.opengl.GL43.glInvalidateSubFramebuffer(arg0,arg1,arg2,arg3,arg4,arg5);
	}

	@Override
	public void glInvalidateSubFramebuffer(int arg0,int arg1,int arg2,int arg3,int arg4,int arg5) {
		org.lwjgl.opengl.GL43.glInvalidateSubFramebuffer(arg0,arg1,arg2,arg3,arg4,arg5);
	}

	@Override
	public void glVertexAttrib4sv(int arg0,short[] arg1) {
		org.lwjgl.opengl.GL43.glVertexAttrib4sv(arg0,arg1);
	}

	@Override
	public void glVertexAttrib4sv(int arg0,java.nio.ShortBuffer arg1) {
		org.lwjgl.opengl.GL43.glVertexAttrib4sv(arg0,arg1);
	}

	@Override
	public void glVertexAttribI4bv(int arg0,java.nio.ByteBuffer arg1) {
		org.lwjgl.opengl.GL43.glVertexAttribI4bv(arg0,arg1);
	}

	@Override
	public void glGetSamplerParameteriv(int arg0,int arg1,int[] arg2) {
		org.lwjgl.opengl.GL43.glGetSamplerParameteriv(arg0,arg1,arg2);
	}

	@Override
	public void glGetSamplerParameteriv(int arg0,int arg1,java.nio.IntBuffer arg2) {
		org.lwjgl.opengl.GL43.glGetSamplerParameteriv(arg0,arg1,arg2);
	}

	@Override
	public void glCompressedTexSubImage1D(int arg0,int arg1,int arg2,int arg3,int arg4,java.nio.ByteBuffer arg5) {
		org.lwjgl.opengl.GL43.glCompressedTexSubImage1D(arg0,arg1,arg2,arg3,arg4,arg5);
	}

	@Override
	public void glCompressedTexSubImage1D(int arg0,int arg1,int arg2,int arg3,int arg4,int arg5,long arg6) {
		org.lwjgl.opengl.GL43.glCompressedTexSubImage1D(arg0,arg1,arg2,arg3,arg4,arg5,arg6);
	}

	@Override
	public void glBindProgramPipeline(int arg0) {
		org.lwjgl.opengl.GL43.glBindProgramPipeline(arg0);
	}

	@Override
	public void nglGetMaterialiv(int arg0,int arg1,long arg2) {
		org.lwjgl.opengl.GL43.nglGetMaterialiv(arg0,arg1,arg2);
	}

	@Override
	public void glDrawElementsInstancedBaseVertex(int arg0,java.nio.IntBuffer arg1,int arg2,int arg3) {
		org.lwjgl.opengl.GL43.glDrawElementsInstancedBaseVertex(arg0,arg1,arg2,arg3);
	}

	@Override
	public void glDrawElementsInstancedBaseVertex(int arg0,int arg1,int arg2,long arg3,int arg4,int arg5) {
		org.lwjgl.opengl.GL43.glDrawElementsInstancedBaseVertex(arg0,arg1,arg2,arg3,arg4,arg5);
	}

	@Override
	public void glDrawElementsInstancedBaseVertex(int arg0,java.nio.ByteBuffer arg1,int arg2,int arg3) {
		org.lwjgl.opengl.GL43.glDrawElementsInstancedBaseVertex(arg0,arg1,arg2,arg3);
	}

	@Override
	public void glDrawElementsInstancedBaseVertex(int arg0,int arg1,java.nio.ByteBuffer arg2,int arg3,int arg4) {
		org.lwjgl.opengl.GL43.glDrawElementsInstancedBaseVertex(arg0,arg1,arg2,arg3,arg4);
	}

	@Override
	public void glDrawElementsInstancedBaseVertex(int arg0,java.nio.ShortBuffer arg1,int arg2,int arg3) {
		org.lwjgl.opengl.GL43.glDrawElementsInstancedBaseVertex(arg0,arg1,arg2,arg3);
	}

	@Override
	public void nglDrawElementsBaseVertex(int arg0,int arg1,int arg2,long arg3,int arg4) {
		org.lwjgl.opengl.GL43.nglDrawElementsBaseVertex(arg0,arg1,arg2,arg3,arg4);
	}

	@Override
	public void glIndexf(float arg0) {
		org.lwjgl.opengl.GL43.glIndexf(arg0);
	}

	@Override
	public void glProgramUniform4i(int arg0,int arg1,int arg2,int arg3,int arg4,int arg5) {
		org.lwjgl.opengl.GL43.glProgramUniform4i(arg0,arg1,arg2,arg3,arg4,arg5);
	}

	@Override
	public void glIndexi(int arg0) {
		org.lwjgl.opengl.GL43.glIndexi(arg0);
	}

	@Override
	public void nglVertexAttrib4bv(int arg0,long arg1) {
		org.lwjgl.opengl.GL43.nglVertexAttrib4bv(arg0,arg1);
	}

	@Override
	public void nglGetVertexAttribPointerv(int arg0,int arg1,long arg2) {
		org.lwjgl.opengl.GL43.nglGetVertexAttribPointerv(arg0,arg1,arg2);
	}

	@Override
	public void nglTexCoordP4uiv(int arg0,long arg1) {
		org.lwjgl.opengl.GL43.nglTexCoordP4uiv(arg0,arg1);
	}

	@Override
	public void glProgramUniform4d(int arg0,int arg1,double arg2,double arg3,double arg4,double arg5) {
		org.lwjgl.opengl.GL43.glProgramUniform4d(arg0,arg1,arg2,arg3,arg4,arg5);
	}

	@Override
	public void glProgramUniform4f(int arg0,int arg1,float arg2,float arg3,float arg4,float arg5) {
		org.lwjgl.opengl.GL43.glProgramUniform4f(arg0,arg1,arg2,arg3,arg4,arg5);
	}

	@Override
	public void glIndexd(double arg0) {
		org.lwjgl.opengl.GL43.glIndexd(arg0);
	}

	@Override
	public void nglDeleteProgramPipelines(int arg0,long arg1) {
		org.lwjgl.opengl.GL43.nglDeleteProgramPipelines(arg0,arg1);
	}

	@Override
	public void glNormal3sv(short[] arg0) {
		org.lwjgl.opengl.GL43.glNormal3sv(arg0);
	}

	@Override
	public void glNormal3sv(java.nio.ShortBuffer arg0) {
		org.lwjgl.opengl.GL43.glNormal3sv(arg0);
	}

	@Override
	public void glEnableVertexAttribArray(int arg0) {
		org.lwjgl.opengl.GL43.glEnableVertexAttribArray(arg0);
	}

	@Override
	public void nglTexParameteriv(int arg0,int arg1,long arg2) {
		org.lwjgl.opengl.GL43.nglTexParameteriv(arg0,arg1,arg2);
	}

	@Override
	public void glVertex2dv(double[] arg0) {
		org.lwjgl.opengl.GL43.glVertex2dv(arg0);
	}

	@Override
	public void glVertex2dv(java.nio.DoubleBuffer arg0) {
		org.lwjgl.opengl.GL43.glVertex2dv(arg0);
	}

	@Override
	public void nglTexGendv(int arg0,int arg1,long arg2) {
		org.lwjgl.opengl.GL43.nglTexGendv(arg0,arg1,arg2);
	}

	@Override
	public void nglPushDebugGroup(int arg0,int arg1,int arg2,long arg3) {
		org.lwjgl.opengl.GL43.nglPushDebugGroup(arg0,arg1,arg2,arg3);
	}

	@Override
	public void glIndexs(short arg0) {
		org.lwjgl.opengl.GL43.glIndexs(arg0);
	}

	@Override
	public void nglGetIntegerv(int arg0,long arg1) {
		org.lwjgl.opengl.GL43.nglGetIntegerv(arg0,arg1);
	}

	@Override
	public void glClearBufferData(int arg0,int arg1,int arg2,int arg3,short[] arg4) {
		org.lwjgl.opengl.GL43.glClearBufferData(arg0,arg1,arg2,arg3,arg4);
	}

	@Override
	public void glClearBufferData(int arg0,int arg1,int arg2,int arg3,int[] arg4) {
		org.lwjgl.opengl.GL43.glClearBufferData(arg0,arg1,arg2,arg3,arg4);
	}

	@Override
	public void glClearBufferData(int arg0,int arg1,int arg2,int arg3,float[] arg4) {
		org.lwjgl.opengl.GL43.glClearBufferData(arg0,arg1,arg2,arg3,arg4);
	}

	@Override
	public void glClearBufferData(int arg0,int arg1,int arg2,int arg3,java.nio.ByteBuffer arg4) {
		org.lwjgl.opengl.GL43.glClearBufferData(arg0,arg1,arg2,arg3,arg4);
	}

	@Override
	public void glClearBufferData(int arg0,int arg1,int arg2,int arg3,java.nio.FloatBuffer arg4) {
		org.lwjgl.opengl.GL43.glClearBufferData(arg0,arg1,arg2,arg3,arg4);
	}

	@Override
	public void glClearBufferData(int arg0,int arg1,int arg2,int arg3,java.nio.ShortBuffer arg4) {
		org.lwjgl.opengl.GL43.glClearBufferData(arg0,arg1,arg2,arg3,arg4);
	}

	@Override
	public void glClearBufferData(int arg0,int arg1,int arg2,int arg3,java.nio.IntBuffer arg4) {
		org.lwjgl.opengl.GL43.glClearBufferData(arg0,arg1,arg2,arg3,arg4);
	}

	@Override
	public int nglGetProgramResourceLocationIndex(int arg0,int arg1,long arg2) {
		return org.lwjgl.opengl.GL43.nglGetProgramResourceLocationIndex(arg0,arg1,arg2);
	}

	@Override
	public void glClear(int arg0) {
		org.lwjgl.opengl.GL43.glClear(arg0);
	}

	@Override
	public void nglVertexAttrib4Niv(int arg0,long arg1) {
		org.lwjgl.opengl.GL43.nglVertexAttrib4Niv(arg0,arg1);
	}

	@Override
	public void glCompressedTexSubImage3D(int arg0,int arg1,int arg2,int arg3,int arg4,int arg5,int arg6,int arg7,int arg8,java.nio.ByteBuffer arg9) {
		org.lwjgl.opengl.GL43.glCompressedTexSubImage3D(arg0,arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9);
	}

	@Override
	public void glCompressedTexSubImage3D(int arg0,int arg1,int arg2,int arg3,int arg4,int arg5,int arg6,int arg7,int arg8,int arg9,long arg10) {
		org.lwjgl.opengl.GL43.glCompressedTexSubImage3D(arg0,arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10);
	}

	@Override
	public void glCopyBufferSubData(int arg0,int arg1,long arg2,long arg3,long arg4) {
		org.lwjgl.opengl.GL43.glCopyBufferSubData(arg0,arg1,arg2,arg3,arg4);
	}

	@Override
	public void nglVertexAttribIPointer(int arg0,int arg1,int arg2,int arg3,long arg4) {
		org.lwjgl.opengl.GL43.nglVertexAttribIPointer(arg0,arg1,arg2,arg3,arg4);
	}

	@Override
	public void nglGenBuffers(int arg0,long arg1) {
		org.lwjgl.opengl.GL43.nglGenBuffers(arg0,arg1);
	}

	@Override
	public void glGetFramebufferAttachmentParameteriv(int arg0,int arg1,int arg2,java.nio.IntBuffer arg3) {
		org.lwjgl.opengl.GL43.glGetFramebufferAttachmentParameteriv(arg0,arg1,arg2,arg3);
	}

	@Override
	public void glGetFramebufferAttachmentParameteriv(int arg0,int arg1,int arg2,int[] arg3) {
		org.lwjgl.opengl.GL43.glGetFramebufferAttachmentParameteriv(arg0,arg1,arg2,arg3);
	}

	@Override
	public void glReadBuffer(int arg0) {
		org.lwjgl.opengl.GL43.glReadBuffer(arg0);
	}

	@Override
	public void nglRasterPos4dv(long arg0) {
		org.lwjgl.opengl.GL43.nglRasterPos4dv(arg0);
	}

	@Override
	public void glProgramUniform2uiv(int arg0,int arg1,java.nio.IntBuffer arg2) {
		org.lwjgl.opengl.GL43.glProgramUniform2uiv(arg0,arg1,arg2);
	}

	@Override
	public void glProgramUniform2uiv(int arg0,int arg1,int[] arg2) {
		org.lwjgl.opengl.GL43.glProgramUniform2uiv(arg0,arg1,arg2);
	}

	@Override
	public void glDispatchComputeIndirect(long arg0) {
		org.lwjgl.opengl.GL43.glDispatchComputeIndirect(arg0);
	}

	@Override
	public void glProgramUniform2f(int arg0,int arg1,float arg2,float arg3) {
		org.lwjgl.opengl.GL43.glProgramUniform2f(arg0,arg1,arg2,arg3);
	}

	@Override
	public void glLoadName(int arg0) {
		org.lwjgl.opengl.GL43.glLoadName(arg0);
	}

	@Override
	public void glProgramUniform2i(int arg0,int arg1,int arg2,int arg3) {
		org.lwjgl.opengl.GL43.glProgramUniform2i(arg0,arg1,arg2,arg3);
	}

	@Override
	public void nglSamplerParameterIiv(int arg0,int arg1,long arg2) {
		org.lwjgl.opengl.GL43.nglSamplerParameterIiv(arg0,arg1,arg2);
	}

	@Override
	public void glDrawArraysInstanced(int arg0,int arg1,int arg2,int arg3) {
		org.lwjgl.opengl.GL43.glDrawArraysInstanced(arg0,arg1,arg2,arg3);
	}

	@Override
	public void nglGetProgramResourceName(int arg0,int arg1,int arg2,int arg3,long arg4,long arg5) {
		org.lwjgl.opengl.GL43.nglGetProgramResourceName(arg0,arg1,arg2,arg3,arg4,arg5);
	}

	@Override
	public void glProgramUniform2d(int arg0,int arg1,double arg2,double arg3) {
		org.lwjgl.opengl.GL43.glProgramUniform2d(arg0,arg1,arg2,arg3);
	}

	@Override
	public void glDrawBuffer(int arg0) {
		org.lwjgl.opengl.GL43.glDrawBuffer(arg0);
	}

	@Override
	public void glGetQueryObjectuiv(int arg0,int arg1,int[] arg2) {
		org.lwjgl.opengl.GL43.glGetQueryObjectuiv(arg0,arg1,arg2);
	}

	@Override
	public void glGetQueryObjectuiv(int arg0,int arg1,long arg2) {
		org.lwjgl.opengl.GL43.glGetQueryObjectuiv(arg0,arg1,arg2);
	}

	@Override
	public void glGetQueryObjectuiv(int arg0,int arg1,java.nio.IntBuffer arg2) {
		org.lwjgl.opengl.GL43.glGetQueryObjectuiv(arg0,arg1,arg2);
	}

	@Override
	public void glGetTexLevelParameteriv(int arg0,int arg1,int arg2,java.nio.IntBuffer arg3) {
		org.lwjgl.opengl.GL43.glGetTexLevelParameteriv(arg0,arg1,arg2,arg3);
	}

	@Override
	public void glGetTexLevelParameteriv(int arg0,int arg1,int arg2,int[] arg3) {
		org.lwjgl.opengl.GL43.glGetTexLevelParameteriv(arg0,arg1,arg2,arg3);
	}

	@Override
	public void nglVertexAttrib4Nusv(int arg0,long arg1) {
		org.lwjgl.opengl.GL43.nglVertexAttrib4Nusv(arg0,arg1);
	}

	@Override
	public void glVertex2fv(java.nio.FloatBuffer arg0) {
		org.lwjgl.opengl.GL43.glVertex2fv(arg0);
	}

	@Override
	public void glVertex2fv(float[] arg0) {
		org.lwjgl.opengl.GL43.glVertex2fv(arg0);
	}

	@Override
	public void nglGetMaterialfv(int arg0,int arg1,long arg2) {
		org.lwjgl.opengl.GL43.nglGetMaterialfv(arg0,arg1,arg2);
	}

	@Override
	public void glProgramUniform3f(int arg0,int arg1,float arg2,float arg3,float arg4) {
		org.lwjgl.opengl.GL43.glProgramUniform3f(arg0,arg1,arg2,arg3,arg4);
	}

	@Override
	public void glProgramUniform3i(int arg0,int arg1,int arg2,int arg3,int arg4) {
		org.lwjgl.opengl.GL43.glProgramUniform3i(arg0,arg1,arg2,arg3,arg4);
	}

	@Override
	public void glGenRenderbuffers(int[] arg0) {
		org.lwjgl.opengl.GL43.glGenRenderbuffers(arg0);
	}

	@Override
	public void glGenRenderbuffers(java.nio.IntBuffer arg0) {
		org.lwjgl.opengl.GL43.glGenRenderbuffers(arg0);
	}

	@Override
	public int glGenRenderbuffers() {
		return org.lwjgl.opengl.GL43.glGenRenderbuffers();
	}

	@Override
	public void glProgramUniform3d(int arg0,int arg1,double arg2,double arg3,double arg4) {
		org.lwjgl.opengl.GL43.glProgramUniform3d(arg0,arg1,arg2,arg3,arg4);
	}

	@Override
	public void nglDrawElementsInstanced(int arg0,int arg1,int arg2,long arg3,int arg4) {
		org.lwjgl.opengl.GL43.nglDrawElementsInstanced(arg0,arg1,arg2,arg3,arg4);
	}

	@Override
	public void nglClearBufferfv(int arg0,int arg1,long arg2) {
		org.lwjgl.opengl.GL43.nglClearBufferfv(arg0,arg1,arg2);
	}

	@Override
	public void nglVertexAttribP3uiv(int arg0,int arg1,boolean arg2,long arg3) {
		org.lwjgl.opengl.GL43.nglVertexAttribP3uiv(arg0,arg1,arg2,arg3);
	}

	@Override
	public void glCompileShader(int arg0) {
		org.lwjgl.opengl.GL43.glCompileShader(arg0);
	}

	@Override
	public int nglGetUniformBlockIndex(int arg0,long arg1) {
		return org.lwjgl.opengl.GL43.nglGetUniformBlockIndex(arg0,arg1);
	}

	@Override
	public void nglGetInteger64v(int arg0,long arg1) {
		org.lwjgl.opengl.GL43.nglGetInteger64v(arg0,arg1);
	}

	@Override
	public boolean glIsRenderbuffer(int arg0) {
		return org.lwjgl.opengl.GL43.glIsRenderbuffer(arg0);
	}

	@Override
	public void nglUniformMatrix4fv(int arg0,int arg1,boolean arg2,long arg3) {
		org.lwjgl.opengl.GL43.nglUniformMatrix4fv(arg0,arg1,arg2,arg3);
	}

	@Override
	public void nglVertexAttrib4fv(int arg0,long arg1) {
		org.lwjgl.opengl.GL43.nglVertexAttrib4fv(arg0,arg1);
	}

	@Override
	public void glProgramUniform2ui(int arg0,int arg1,int arg2,int arg3) {
		org.lwjgl.opengl.GL43.glProgramUniform2ui(arg0,arg1,arg2,arg3);
	}

	@Override
	public void glColor4ubv(java.nio.ByteBuffer arg0) {
		org.lwjgl.opengl.GL43.glColor4ubv(arg0);
	}

	@Override
	public void nglVertex4fv(long arg0) {
		org.lwjgl.opengl.GL43.nglVertex4fv(arg0);
	}

	@Override
	public void glGetProgramResourceName(int arg0,int arg1,int arg2,java.nio.IntBuffer arg3,java.nio.ByteBuffer arg4) {
		org.lwjgl.opengl.GL43.glGetProgramResourceName(arg0,arg1,arg2,arg3,arg4);
	}

	@Override
	public java.lang.String glGetProgramResourceName_String(int arg0,int arg1,int arg2) {
		return org.lwjgl.opengl.GL43.glGetProgramResourceName(arg0,arg1,arg2);
	}

	@Override
	public void glGetProgramResourceName(int arg0,int arg1,int arg2,int[] arg3,java.nio.ByteBuffer arg4) {
		org.lwjgl.opengl.GL43.glGetProgramResourceName(arg0,arg1,arg2,arg3,arg4);
	}

	@Override
	public java.lang.String glGetProgramResourceName_String(int arg0,int arg1,int arg2,int arg3) {
		return org.lwjgl.opengl.GL43.glGetProgramResourceName(arg0,arg1,arg2,arg3);
	}

	@Override
	public void glUniform4fv(int arg0,java.nio.FloatBuffer arg1) {
		org.lwjgl.opengl.GL43.glUniform4fv(arg0,arg1);
	}

	@Override
	public void glUniform4fv(int arg0,float[] arg1) {
		org.lwjgl.opengl.GL43.glUniform4fv(arg0,arg1);
	}

	@Override
	public void nglSecondaryColor3uiv(long arg0) {
		org.lwjgl.opengl.GL43.nglSecondaryColor3uiv(arg0);
	}

	@Override
	public void glViewport(int arg0,int arg1,int arg2,int arg3) {
		org.lwjgl.opengl.GL43.glViewport(arg0,arg1,arg2,arg3);
	}

	@Override
	public void nglDeleteFramebuffers(int arg0,long arg1) {
		org.lwjgl.opengl.GL43.nglDeleteFramebuffers(arg0,arg1);
	}

	@Override
	public void nglDrawElementsIndirect(int arg0,int arg1,long arg2) {
		org.lwjgl.opengl.GL43.nglDrawElementsIndirect(arg0,arg1,arg2);
	}

	@Override
	public void glUniformMatrix4dv(int arg0,boolean arg1,java.nio.DoubleBuffer arg2) {
		org.lwjgl.opengl.GL43.glUniformMatrix4dv(arg0,arg1,arg2);
	}

	@Override
	public void glUniformMatrix4dv(int arg0,boolean arg1,double[] arg2) {
		org.lwjgl.opengl.GL43.glUniformMatrix4dv(arg0,arg1,arg2);
	}

	@Override
	public void nglWindowPos3sv(long arg0) {
		org.lwjgl.opengl.GL43.nglWindowPos3sv(arg0);
	}

	@Override
	public void nglDrawArraysIndirect(int arg0,long arg1) {
		org.lwjgl.opengl.GL43.nglDrawArraysIndirect(arg0,arg1);
	}

	@Override
	public void nglGetMapfv(int arg0,int arg1,long arg2) {
		org.lwjgl.opengl.GL43.nglGetMapfv(arg0,arg1,arg2);
	}

	@Override
	public void nglUniform4uiv(int arg0,int arg1,long arg2) {
		org.lwjgl.opengl.GL43.nglUniform4uiv(arg0,arg1,arg2);
	}

	@Override
	public void glShaderStorageBlockBinding(int arg0,int arg1,int arg2) {
		org.lwjgl.opengl.GL43.glShaderStorageBlockBinding(arg0,arg1,arg2);
	}

	@Override
	public void glVertex2iv(int[] arg0) {
		org.lwjgl.opengl.GL43.glVertex2iv(arg0);
	}

	@Override
	public void glVertex2iv(java.nio.IntBuffer arg0) {
		org.lwjgl.opengl.GL43.glVertex2iv(arg0);
	}

	@Override
	public void nglGetActiveUniform(int arg0,int arg1,int arg2,long arg3,long arg4,long arg5,long arg6) {
		org.lwjgl.opengl.GL43.nglGetActiveUniform(arg0,arg1,arg2,arg3,arg4,arg5,arg6);
	}

	@Override
	public void nglGetUniformiv(int arg0,int arg1,long arg2) {
		org.lwjgl.opengl.GL43.nglGetUniformiv(arg0,arg1,arg2);
	}

	@Override
	public void nglGetUniformSubroutineuiv(int arg0,int arg1,long arg2) {
		org.lwjgl.opengl.GL43.nglGetUniformSubroutineuiv(arg0,arg1,arg2);
	}

	@Override
	public void glBeginQueryIndexed(int arg0,int arg1,int arg2) {
		org.lwjgl.opengl.GL43.glBeginQueryIndexed(arg0,arg1,arg2);
	}

	@Override
	public void nglVertexAttribLPointer(int arg0,int arg1,int arg2,int arg3,long arg4) {
		org.lwjgl.opengl.GL43.nglVertexAttribLPointer(arg0,arg1,arg2,arg3,arg4);
	}

	@Override
	public void glUniform4iv(int arg0,java.nio.IntBuffer arg1) {
		org.lwjgl.opengl.GL43.glUniform4iv(arg0,arg1);
	}

	@Override
	public void glUniform4iv(int arg0,int[] arg1) {
		org.lwjgl.opengl.GL43.glUniform4iv(arg0,arg1);
	}

	@Override
	public void glVertexAttribP4ui(int arg0,int arg1,boolean arg2,int arg3) {
		org.lwjgl.opengl.GL43.glVertexAttribP4ui(arg0,arg1,arg2,arg3);
	}

	@Override
	public void glVertexAttribI4iv(int arg0,java.nio.IntBuffer arg1) {
		org.lwjgl.opengl.GL43.glVertexAttribI4iv(arg0,arg1);
	}

	@Override
	public void glVertexAttribI4iv(int arg0,int[] arg1) {
		org.lwjgl.opengl.GL43.glVertexAttribI4iv(arg0,arg1);
	}

	@Override
	public void glMultiTexCoordP2ui(int arg0,int arg1,int arg2) {
		org.lwjgl.opengl.GL43.glMultiTexCoordP2ui(arg0,arg1,arg2);
	}

	@Override
	public void nglGetVertexAttribIuiv(int arg0,int arg1,long arg2) {
		org.lwjgl.opengl.GL43.nglGetVertexAttribIuiv(arg0,arg1,arg2);
	}

	@Override
	public void nglVertexAttrib4dv(int arg0,long arg1) {
		org.lwjgl.opengl.GL43.nglVertexAttrib4dv(arg0,arg1);
	}

	@Override
	public void glMultiTexCoord2sv(int arg0,short[] arg1) {
		org.lwjgl.opengl.GL43.glMultiTexCoord2sv(arg0,arg1);
	}

	@Override
	public void glMultiTexCoord2sv(int arg0,java.nio.ShortBuffer arg1) {
		org.lwjgl.opengl.GL43.glMultiTexCoord2sv(arg0,arg1);
	}

	@Override
	public void nglUniformMatrix4dv(int arg0,int arg1,boolean arg2,long arg3) {
		org.lwjgl.opengl.GL43.nglUniformMatrix4dv(arg0,arg1,arg2,arg3);
	}

	@Override
	public long glGetInteger64(int arg0) {
		return org.lwjgl.opengl.GL43.glGetInteger64(arg0);
	}

	@Override
	public void glDepthMask(boolean arg0) {
		org.lwjgl.opengl.GL43.glDepthMask(arg0);
	}

	@Override
	public void nglMultiTexCoordP3uiv(int arg0,int arg1,long arg2) {
		org.lwjgl.opengl.GL43.nglMultiTexCoordP3uiv(arg0,arg1,arg2);
	}

	@Override
	public void nglVertex4dv(long arg0) {
		org.lwjgl.opengl.GL43.nglVertex4dv(arg0);
	}

	@Override
	public void nglEdgeFlagPointer(int arg0,long arg1) {
		org.lwjgl.opengl.GL43.nglEdgeFlagPointer(arg0,arg1);
	}

	@Override
	public void nglTexGenfv(int arg0,int arg1,long arg2) {
		org.lwjgl.opengl.GL43.nglTexGenfv(arg0,arg1,arg2);
	}

	@Override
	public void nglGetBufferParameteri64v(int arg0,int arg1,long arg2) {
		org.lwjgl.opengl.GL43.nglGetBufferParameteri64v(arg0,arg1,arg2);
	}

	@Override
	public void glUseProgram(int arg0) {
		org.lwjgl.opengl.GL43.glUseProgram(arg0);
	}

	@Override
	public void glGetProgramInterfaceiv(int arg0,int arg1,int arg2,int[] arg3) {
		org.lwjgl.opengl.GL43.glGetProgramInterfaceiv(arg0,arg1,arg2,arg3);
	}

	@Override
	public void glGetProgramInterfaceiv(int arg0,int arg1,int arg2,java.nio.IntBuffer arg3) {
		org.lwjgl.opengl.GL43.glGetProgramInterfaceiv(arg0,arg1,arg2,arg3);
	}

	@Override
	public void glUniformMatrix4fv(int arg0,boolean arg1,float[] arg2) {
		org.lwjgl.opengl.GL43.glUniformMatrix4fv(arg0,arg1,arg2);
	}

	@Override
	public void glUniformMatrix4fv(int arg0,boolean arg1,java.nio.FloatBuffer arg2) {
		org.lwjgl.opengl.GL43.glUniformMatrix4fv(arg0,arg1,arg2);
	}

	@Override
	public int glGetUniformSubroutineui(int arg0,int arg1) {
		return org.lwjgl.opengl.GL43.glGetUniformSubroutineui(arg0,arg1);
	}

	@Override
	public void nglMultiTexCoord2sv(int arg0,long arg1) {
		org.lwjgl.opengl.GL43.nglMultiTexCoord2sv(arg0,arg1);
	}

	@Override
	public void nglGetMapdv(int arg0,int arg1,long arg2) {
		org.lwjgl.opengl.GL43.nglGetMapdv(arg0,arg1,arg2);
	}

	@Override
	public void nglVertexAttribL2dv(int arg0,long arg1) {
		org.lwjgl.opengl.GL43.nglVertexAttribL2dv(arg0,arg1);
	}

	@Override
	public void nglGetQueryObjectui64v(int arg0,int arg1,long arg2) {
		org.lwjgl.opengl.GL43.nglGetQueryObjectui64v(arg0,arg1,arg2);
	}

	@Override
	public void nglColor3sv(long arg0) {
		org.lwjgl.opengl.GL43.nglColor3sv(arg0);
	}

	@Override
	public void glTexSubImage1D(int arg0,int arg1,int arg2,int arg3,int arg4,int arg5,java.nio.ByteBuffer arg6) {
		org.lwjgl.opengl.GL43.glTexSubImage1D(arg0,arg1,arg2,arg3,arg4,arg5,arg6);
	}

	@Override
	public void glTexSubImage1D(int arg0,int arg1,int arg2,int arg3,int arg4,int arg5,double[] arg6) {
		org.lwjgl.opengl.GL43.glTexSubImage1D(arg0,arg1,arg2,arg3,arg4,arg5,arg6);
	}

	@Override
	public void glTexSubImage1D(int arg0,int arg1,int arg2,int arg3,int arg4,int arg5,float[] arg6) {
		org.lwjgl.opengl.GL43.glTexSubImage1D(arg0,arg1,arg2,arg3,arg4,arg5,arg6);
	}

	@Override
	public void glTexSubImage1D(int arg0,int arg1,int arg2,int arg3,int arg4,int arg5,int[] arg6) {
		org.lwjgl.opengl.GL43.glTexSubImage1D(arg0,arg1,arg2,arg3,arg4,arg5,arg6);
	}

	@Override
	public void glTexSubImage1D(int arg0,int arg1,int arg2,int arg3,int arg4,int arg5,short[] arg6) {
		org.lwjgl.opengl.GL43.glTexSubImage1D(arg0,arg1,arg2,arg3,arg4,arg5,arg6);
	}

	@Override
	public void glTexSubImage1D(int arg0,int arg1,int arg2,int arg3,int arg4,int arg5,java.nio.IntBuffer arg6) {
		org.lwjgl.opengl.GL43.glTexSubImage1D(arg0,arg1,arg2,arg3,arg4,arg5,arg6);
	}

	@Override
	public void glTexSubImage1D(int arg0,int arg1,int arg2,int arg3,int arg4,int arg5,java.nio.FloatBuffer arg6) {
		org.lwjgl.opengl.GL43.glTexSubImage1D(arg0,arg1,arg2,arg3,arg4,arg5,arg6);
	}

	@Override
	public void glTexSubImage1D(int arg0,int arg1,int arg2,int arg3,int arg4,int arg5,java.nio.DoubleBuffer arg6) {
		org.lwjgl.opengl.GL43.glTexSubImage1D(arg0,arg1,arg2,arg3,arg4,arg5,arg6);
	}

	@Override
	public void glTexSubImage1D(int arg0,int arg1,int arg2,int arg3,int arg4,int arg5,java.nio.ShortBuffer arg6) {
		org.lwjgl.opengl.GL43.glTexSubImage1D(arg0,arg1,arg2,arg3,arg4,arg5,arg6);
	}

	@Override
	public void glTexSubImage1D(int arg0,int arg1,int arg2,int arg3,int arg4,int arg5,long arg6) {
		org.lwjgl.opengl.GL43.glTexSubImage1D(arg0,arg1,arg2,arg3,arg4,arg5,arg6);
	}

	@Override
	public void glPushMatrix() {
		org.lwjgl.opengl.GL43.glPushMatrix();
	}

	@Override
	public void nglTexCoord2iv(long arg0) {
		org.lwjgl.opengl.GL43.nglTexCoord2iv(arg0);
	}

	@Override
	public void nglGetMapiv(int arg0,int arg1,long arg2) {
		org.lwjgl.opengl.GL43.nglGetMapiv(arg0,arg1,arg2);
	}

	@Override
	public void glTexCoordP4uiv(int arg0,int[] arg1) {
		org.lwjgl.opengl.GL43.glTexCoordP4uiv(arg0,arg1);
	}

	@Override
	public void glTexCoordP4uiv(int arg0,java.nio.IntBuffer arg1) {
		org.lwjgl.opengl.GL43.glTexCoordP4uiv(arg0,arg1);
	}

	@Override
	public void nglGetUniformfv(int arg0,int arg1,long arg2) {
		org.lwjgl.opengl.GL43.nglGetUniformfv(arg0,arg1,arg2);
	}

	@Override
	public void nglVertexAttrib4Nbv(int arg0,long arg1) {
		org.lwjgl.opengl.GL43.nglVertexAttrib4Nbv(arg0,arg1);
	}

	@Override
	public void glUniformMatrix2x3fv(int arg0,boolean arg1,float[] arg2) {
		org.lwjgl.opengl.GL43.glUniformMatrix2x3fv(arg0,arg1,arg2);
	}

	@Override
	public void glUniformMatrix2x3fv(int arg0,boolean arg1,java.nio.FloatBuffer arg2) {
		org.lwjgl.opengl.GL43.glUniformMatrix2x3fv(arg0,arg1,arg2);
	}

	@Override
	public void glSampleCoverage(float arg0,boolean arg1) {
		org.lwjgl.opengl.GL43.glSampleCoverage(arg0,arg1);
	}

	@Override
	public void nglClearBufferiv(int arg0,int arg1,long arg2) {
		org.lwjgl.opengl.GL43.nglClearBufferiv(arg0,arg1,arg2);
	}

	@Override
	public void glTexCoord1fv(java.nio.FloatBuffer arg0) {
		org.lwjgl.opengl.GL43.glTexCoord1fv(arg0);
	}

	@Override
	public void glTexCoord1fv(float[] arg0) {
		org.lwjgl.opengl.GL43.glTexCoord1fv(arg0);
	}

	@Override
	public void glTexSubImage2D(int arg0,int arg1,int arg2,int arg3,int arg4,int arg5,int arg6,int arg7,short[] arg8) {
		org.lwjgl.opengl.GL43.glTexSubImage2D(arg0,arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8);
	}

	@Override
	public void glTexSubImage2D(int arg0,int arg1,int arg2,int arg3,int arg4,int arg5,int arg6,int arg7,int[] arg8) {
		org.lwjgl.opengl.GL43.glTexSubImage2D(arg0,arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8);
	}

	@Override
	public void glTexSubImage2D(int arg0,int arg1,int arg2,int arg3,int arg4,int arg5,int arg6,int arg7,java.nio.ShortBuffer arg8) {
		org.lwjgl.opengl.GL43.glTexSubImage2D(arg0,arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8);
	}

	@Override
	public void glTexSubImage2D(int arg0,int arg1,int arg2,int arg3,int arg4,int arg5,int arg6,int arg7,java.nio.IntBuffer arg8) {
		org.lwjgl.opengl.GL43.glTexSubImage2D(arg0,arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8);
	}

	@Override
	public void glTexSubImage2D(int arg0,int arg1,int arg2,int arg3,int arg4,int arg5,int arg6,int arg7,java.nio.FloatBuffer arg8) {
		org.lwjgl.opengl.GL43.glTexSubImage2D(arg0,arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8);
	}

	@Override
	public void glTexSubImage2D(int arg0,int arg1,int arg2,int arg3,int arg4,int arg5,int arg6,int arg7,java.nio.DoubleBuffer arg8) {
		org.lwjgl.opengl.GL43.glTexSubImage2D(arg0,arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8);
	}

	@Override
	public void glTexSubImage2D(int arg0,int arg1,int arg2,int arg3,int arg4,int arg5,int arg6,int arg7,float[] arg8) {
		org.lwjgl.opengl.GL43.glTexSubImage2D(arg0,arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8);
	}

	@Override
	public void glTexSubImage2D(int arg0,int arg1,int arg2,int arg3,int arg4,int arg5,int arg6,int arg7,double[] arg8) {
		org.lwjgl.opengl.GL43.glTexSubImage2D(arg0,arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8);
	}

	@Override
	public void glTexSubImage2D(int arg0,int arg1,int arg2,int arg3,int arg4,int arg5,int arg6,int arg7,java.nio.ByteBuffer arg8) {
		org.lwjgl.opengl.GL43.glTexSubImage2D(arg0,arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8);
	}

	@Override
	public void glTexSubImage2D(int arg0,int arg1,int arg2,int arg3,int arg4,int arg5,int arg6,int arg7,long arg8) {
		org.lwjgl.opengl.GL43.glTexSubImage2D(arg0,arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8);
	}

	@Override
	public void glDeleteShader(int arg0) {
		org.lwjgl.opengl.GL43.glDeleteShader(arg0);
	}

	@Override
	public void glUniform3uiv(int arg0,int[] arg1) {
		org.lwjgl.opengl.GL43.glUniform3uiv(arg0,arg1);
	}

	@Override
	public void glUniform3uiv(int arg0,java.nio.IntBuffer arg1) {
		org.lwjgl.opengl.GL43.glUniform3uiv(arg0,arg1);
	}

	@Override
	public void glVertexAttrib4iv(int arg0,java.nio.IntBuffer arg1) {
		org.lwjgl.opengl.GL43.glVertexAttrib4iv(arg0,arg1);
	}

	@Override
	public void glVertexAttrib4iv(int arg0,int[] arg1) {
		org.lwjgl.opengl.GL43.glVertexAttrib4iv(arg0,arg1);
	}

	@Override
	public void nglVertexAttrib4iv(int arg0,long arg1) {
		org.lwjgl.opengl.GL43.nglVertexAttrib4iv(arg0,arg1);
	}

	@Override
	public void glVertexAttrib4fv(int arg0,java.nio.FloatBuffer arg1) {
		org.lwjgl.opengl.GL43.glVertexAttrib4fv(arg0,arg1);
	}

	@Override
	public void glVertexAttrib4fv(int arg0,float[] arg1) {
		org.lwjgl.opengl.GL43.glVertexAttrib4fv(arg0,arg1);
	}

	@Override
	public void nglGetShaderInfoLog(int arg0,int arg1,long arg2,long arg3) {
		org.lwjgl.opengl.GL43.nglGetShaderInfoLog(arg0,arg1,arg2,arg3);
	}

	@Override
	public void nglVertexAttribI1iv(int arg0,long arg1) {
		org.lwjgl.opengl.GL43.nglVertexAttribI1iv(arg0,arg1);
	}

	@Override
	public void nglTexGeniv(int arg0,int arg1,long arg2) {
		org.lwjgl.opengl.GL43.nglTexGeniv(arg0,arg1,arg2);
	}

	@Override
	public void glDrawArrays(int arg0,int arg1,int arg2) {
		org.lwjgl.opengl.GL43.glDrawArrays(arg0,arg1,arg2);
	}

	@Override
	public void nglVertex4iv(long arg0) {
		org.lwjgl.opengl.GL43.nglVertex4iv(arg0);
	}

	@Override
	public void glScissorIndexed(int arg0,int arg1,int arg2,int arg3,int arg4) {
		org.lwjgl.opengl.GL43.glScissorIndexed(arg0,arg1,arg2,arg3,arg4);
	}

	@Override
	public void glTexSubImage3D(int arg0,int arg1,int arg2,int arg3,int arg4,int arg5,int arg6,int arg7,int arg8,int arg9,float[] arg10) {
		org.lwjgl.opengl.GL43.glTexSubImage3D(arg0,arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10);
	}

	@Override
	public void glTexSubImage3D(int arg0,int arg1,int arg2,int arg3,int arg4,int arg5,int arg6,int arg7,int arg8,int arg9,int[] arg10) {
		org.lwjgl.opengl.GL43.glTexSubImage3D(arg0,arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10);
	}

	@Override
	public void glTexSubImage3D(int arg0,int arg1,int arg2,int arg3,int arg4,int arg5,int arg6,int arg7,int arg8,int arg9,java.nio.FloatBuffer arg10) {
		org.lwjgl.opengl.GL43.glTexSubImage3D(arg0,arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10);
	}

	@Override
	public void glTexSubImage3D(int arg0,int arg1,int arg2,int arg3,int arg4,int arg5,int arg6,int arg7,int arg8,int arg9,short[] arg10) {
		org.lwjgl.opengl.GL43.glTexSubImage3D(arg0,arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10);
	}

	@Override
	public void glTexSubImage3D(int arg0,int arg1,int arg2,int arg3,int arg4,int arg5,int arg6,int arg7,int arg8,int arg9,java.nio.ByteBuffer arg10) {
		org.lwjgl.opengl.GL43.glTexSubImage3D(arg0,arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10);
	}

	@Override
	public void glTexSubImage3D(int arg0,int arg1,int arg2,int arg3,int arg4,int arg5,int arg6,int arg7,int arg8,int arg9,long arg10) {
		org.lwjgl.opengl.GL43.glTexSubImage3D(arg0,arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10);
	}

	@Override
	public void glTexSubImage3D(int arg0,int arg1,int arg2,int arg3,int arg4,int arg5,int arg6,int arg7,int arg8,int arg9,java.nio.ShortBuffer arg10) {
		org.lwjgl.opengl.GL43.glTexSubImage3D(arg0,arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10);
	}

	@Override
	public void glTexSubImage3D(int arg0,int arg1,int arg2,int arg3,int arg4,int arg5,int arg6,int arg7,int arg8,int arg9,java.nio.IntBuffer arg10) {
		org.lwjgl.opengl.GL43.glTexSubImage3D(arg0,arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10);
	}

	@Override
	public void glTexSubImage3D(int arg0,int arg1,int arg2,int arg3,int arg4,int arg5,int arg6,int arg7,int arg8,int arg9,java.nio.DoubleBuffer arg10) {
		org.lwjgl.opengl.GL43.glTexSubImage3D(arg0,arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10);
	}

	@Override
	public void glTexSubImage3D(int arg0,int arg1,int arg2,int arg3,int arg4,int arg5,int arg6,int arg7,int arg8,int arg9,double[] arg10) {
		org.lwjgl.opengl.GL43.glTexSubImage3D(arg0,arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10);
	}

	@Override
	public int nglCreateShaderProgramv(int arg0,int arg1,long arg2) {
		return org.lwjgl.opengl.GL43.nglCreateShaderProgramv(arg0,arg1,arg2);
	}

	@Override
	public void nglGetUniformdv(int arg0,int arg1,long arg2) {
		org.lwjgl.opengl.GL43.nglGetUniformdv(arg0,arg1,arg2);
	}

	@Override
	public void glSamplerParameteri(int arg0,int arg1,int arg2) {
		org.lwjgl.opengl.GL43.glSamplerParameteri(arg0,arg1,arg2);
	}

	@Override
	public void glSamplerParameterf(int arg0,int arg1,float arg2) {
		org.lwjgl.opengl.GL43.glSamplerParameterf(arg0,arg1,arg2);
	}

	@Override
	public void nglGetActiveUniformsiv(int arg0,int arg1,long arg2,int arg3,long arg4) {
		org.lwjgl.opengl.GL43.nglGetActiveUniformsiv(arg0,arg1,arg2,arg3,arg4);
	}

	@Override
	public void glUniformMatrix2x3dv(int arg0,boolean arg1,double[] arg2) {
		org.lwjgl.opengl.GL43.glUniformMatrix2x3dv(arg0,arg1,arg2);
	}

	@Override
	public void glUniformMatrix2x3dv(int arg0,boolean arg1,java.nio.DoubleBuffer arg2) {
		org.lwjgl.opengl.GL43.glUniformMatrix2x3dv(arg0,arg1,arg2);
	}

	@Override
	public void nglDeleteVertexArrays(int arg0,long arg1) {
		org.lwjgl.opengl.GL43.nglDeleteVertexArrays(arg0,arg1);
	}

	@Override
	public int glRenderMode(int arg0) {
		return org.lwjgl.opengl.GL43.glRenderMode(arg0);
	}

	@Override
	public void glDrawTransformFeedbackStream(int arg0,int arg1,int arg2) {
		org.lwjgl.opengl.GL43.glDrawTransformFeedbackStream(arg0,arg1,arg2);
	}

	@Override
	public void nglGetFloati_v(int arg0,int arg1,long arg2) {
		org.lwjgl.opengl.GL43.nglGetFloati_v(arg0,arg1,arg2);
	}

	@Override
	public void glUniform4dv(int arg0,java.nio.DoubleBuffer arg1) {
		org.lwjgl.opengl.GL43.glUniform4dv(arg0,arg1);
	}

	@Override
	public void glUniform4dv(int arg0,double[] arg1) {
		org.lwjgl.opengl.GL43.glUniform4dv(arg0,arg1);
	}

	@Override
	public void nglInvalidateFramebuffer(int arg0,int arg1,long arg2) {
		org.lwjgl.opengl.GL43.nglInvalidateFramebuffer(arg0,arg1,arg2);
	}

	@Override
	public void glTexCoord1dv(double[] arg0) {
		org.lwjgl.opengl.GL43.glTexCoord1dv(arg0);
	}

	@Override
	public void glTexCoord1dv(java.nio.DoubleBuffer arg0) {
		org.lwjgl.opengl.GL43.glTexCoord1dv(arg0);
	}

	@Override
	public void glEndQueryIndexed(int arg0,int arg1) {
		org.lwjgl.opengl.GL43.glEndQueryIndexed(arg0,arg1);
	}

	@Override
	public void nglShaderSource(int arg0,int arg1,long arg2,long arg3) {
		org.lwjgl.opengl.GL43.nglShaderSource(arg0,arg1,arg2,arg3);
	}

	@Override
	public void glNewList(int arg0,int arg1) {
		org.lwjgl.opengl.GL43.glNewList(arg0,arg1);
	}

	@Override
	public void glVertexAttribI4sv(int arg0,java.nio.ShortBuffer arg1) {
		org.lwjgl.opengl.GL43.glVertexAttribI4sv(arg0,arg1);
	}

	@Override
	public void glVertexAttribI4sv(int arg0,short[] arg1) {
		org.lwjgl.opengl.GL43.glVertexAttribI4sv(arg0,arg1);
	}

	@Override
	public void glGetTexImage(int arg0,int arg1,int arg2,int arg3,float[] arg4) {
		org.lwjgl.opengl.GL43.glGetTexImage(arg0,arg1,arg2,arg3,arg4);
	}

	@Override
	public void glGetTexImage(int arg0,int arg1,int arg2,int arg3,java.nio.DoubleBuffer arg4) {
		org.lwjgl.opengl.GL43.glGetTexImage(arg0,arg1,arg2,arg3,arg4);
	}

	@Override
	public void glGetTexImage(int arg0,int arg1,int arg2,int arg3,double[] arg4) {
		org.lwjgl.opengl.GL43.glGetTexImage(arg0,arg1,arg2,arg3,arg4);
	}

	@Override
	public void glGetTexImage(int arg0,int arg1,int arg2,int arg3,short[] arg4) {
		org.lwjgl.opengl.GL43.glGetTexImage(arg0,arg1,arg2,arg3,arg4);
	}

	@Override
	public void glGetTexImage(int arg0,int arg1,int arg2,int arg3,int[] arg4) {
		org.lwjgl.opengl.GL43.glGetTexImage(arg0,arg1,arg2,arg3,arg4);
	}

	@Override
	public void glGetTexImage(int arg0,int arg1,int arg2,int arg3,java.nio.FloatBuffer arg4) {
		org.lwjgl.opengl.GL43.glGetTexImage(arg0,arg1,arg2,arg3,arg4);
	}

	@Override
	public void glGetTexImage(int arg0,int arg1,int arg2,int arg3,java.nio.ShortBuffer arg4) {
		org.lwjgl.opengl.GL43.glGetTexImage(arg0,arg1,arg2,arg3,arg4);
	}

	@Override
	public void glGetTexImage(int arg0,int arg1,int arg2,int arg3,java.nio.ByteBuffer arg4) {
		org.lwjgl.opengl.GL43.glGetTexImage(arg0,arg1,arg2,arg3,arg4);
	}

	@Override
	public void glGetTexImage(int arg0,int arg1,int arg2,int arg3,long arg4) {
		org.lwjgl.opengl.GL43.glGetTexImage(arg0,arg1,arg2,arg3,arg4);
	}

	@Override
	public void glGetTexImage(int arg0,int arg1,int arg2,int arg3,java.nio.IntBuffer arg4) {
		org.lwjgl.opengl.GL43.glGetTexImage(arg0,arg1,arg2,arg3,arg4);
	}

	@Override
	public int nglGetSubroutineIndex(int arg0,int arg1,long arg2) {
		return org.lwjgl.opengl.GL43.nglGetSubroutineIndex(arg0,arg1,arg2);
	}

	@Override
	public void glProgramUniformMatrix2x4dv(int arg0,int arg1,boolean arg2,double[] arg3) {
		org.lwjgl.opengl.GL43.glProgramUniformMatrix2x4dv(arg0,arg1,arg2,arg3);
	}

	@Override
	public void glProgramUniformMatrix2x4dv(int arg0,int arg1,boolean arg2,java.nio.DoubleBuffer arg3) {
		org.lwjgl.opengl.GL43.glProgramUniformMatrix2x4dv(arg0,arg1,arg2,arg3);
	}

	@Override
	public void glVertexAttribL1dv(int arg0,java.nio.DoubleBuffer arg1) {
		org.lwjgl.opengl.GL43.glVertexAttribL1dv(arg0,arg1);
	}

	@Override
	public void glVertexAttribL1dv(int arg0,double[] arg1) {
		org.lwjgl.opengl.GL43.glVertexAttribL1dv(arg0,arg1);
	}

	@Override
	public void glFramebufferTexture1D(int arg0,int arg1,int arg2,int arg3,int arg4) {
		org.lwjgl.opengl.GL43.glFramebufferTexture1D(arg0,arg1,arg2,arg3,arg4);
	}

	@Override
	public void glPassThrough(float arg0) {
		org.lwjgl.opengl.GL43.glPassThrough(arg0);
	}

	@Override
	public void glPixelMapfv(int arg0,float[] arg1) {
		org.lwjgl.opengl.GL43.glPixelMapfv(arg0,arg1);
	}

	@Override
	public void glPixelMapfv(int arg0,java.nio.FloatBuffer arg1) {
		org.lwjgl.opengl.GL43.glPixelMapfv(arg0,arg1);
	}

	@Override
	public void glPixelMapfv(int arg0,int arg1,long arg2) {
		org.lwjgl.opengl.GL43.glPixelMapfv(arg0,arg1,arg2);
	}

	@Override
	public void glTexImage3DMultisample(int arg0,int arg1,int arg2,int arg3,int arg4,int arg5,boolean arg6) {
		org.lwjgl.opengl.GL43.glTexImage3DMultisample(arg0,arg1,arg2,arg3,arg4,arg5,arg6);
	}

	@Override
	public void glVertexAttribL2d(int arg0,double arg1,double arg2) {
		org.lwjgl.opengl.GL43.glVertexAttribL2d(arg0,arg1,arg2);
	}

	@Override
	public void nglTexCoord1sv(long arg0) {
		org.lwjgl.opengl.GL43.nglTexCoord1sv(arg0);
	}

	@Override
	public void glProgramUniformMatrix3x2dv(int arg0,int arg1,boolean arg2,double[] arg3) {
		org.lwjgl.opengl.GL43.glProgramUniformMatrix3x2dv(arg0,arg1,arg2,arg3);
	}

	@Override
	public void glProgramUniformMatrix3x2dv(int arg0,int arg1,boolean arg2,java.nio.DoubleBuffer arg3) {
		org.lwjgl.opengl.GL43.glProgramUniformMatrix3x2dv(arg0,arg1,arg2,arg3);
	}

	@Override
	public void nglClearBufferuiv(int arg0,int arg1,long arg2) {
		org.lwjgl.opengl.GL43.nglClearBufferuiv(arg0,arg1,arg2);
	}

	@Override
	public void nglProgramUniformMatrix2fv(int arg0,int arg1,int arg2,boolean arg3,long arg4) {
		org.lwjgl.opengl.GL43.nglProgramUniformMatrix2fv(arg0,arg1,arg2,arg3,arg4);
	}

	@Override
	public void nglIndexPointer(int arg0,int arg1,long arg2) {
		org.lwjgl.opengl.GL43.nglIndexPointer(arg0,arg1,arg2);
	}

	@Override
	public void glUniformMatrix2x4dv(int arg0,boolean arg1,java.nio.DoubleBuffer arg2) {
		org.lwjgl.opengl.GL43.glUniformMatrix2x4dv(arg0,arg1,arg2);
	}

	@Override
	public void glUniformMatrix2x4dv(int arg0,boolean arg1,double[] arg2) {
		org.lwjgl.opengl.GL43.glUniformMatrix2x4dv(arg0,arg1,arg2);
	}

	@Override
	public void glVertexAttribI4ui(int arg0,int arg1,int arg2,int arg3,int arg4) {
		org.lwjgl.opengl.GL43.glVertexAttribI4ui(arg0,arg1,arg2,arg3,arg4);
	}

	@Override
	public void glVertexAttribL3d(int arg0,double arg1,double arg2,double arg3) {
		org.lwjgl.opengl.GL43.glVertexAttribL3d(arg0,arg1,arg2,arg3);
	}

	@Override
	public int nglGetAttribLocation(int arg0,long arg1) {
		return org.lwjgl.opengl.GL43.nglGetAttribLocation(arg0,arg1);
	}

	@Override
	public void glFlushMappedBufferRange(int arg0,long arg1,long arg2) {
		org.lwjgl.opengl.GL43.glFlushMappedBufferRange(arg0,arg1,arg2);
	}

	@Override
	public void glUniformMatrix3x2dv(int arg0,boolean arg1,double[] arg2) {
		org.lwjgl.opengl.GL43.glUniformMatrix3x2dv(arg0,arg1,arg2);
	}

	@Override
	public void glUniformMatrix3x2dv(int arg0,boolean arg1,java.nio.DoubleBuffer arg2) {
		org.lwjgl.opengl.GL43.glUniformMatrix3x2dv(arg0,arg1,arg2);
	}

	@Override
	public void glStencilOp(int arg0,int arg1,int arg2) {
		org.lwjgl.opengl.GL43.glStencilOp(arg0,arg1,arg2);
	}

	@Override
	public float glGetUniformf(int arg0,int arg1) {
		return org.lwjgl.opengl.GL43.glGetUniformf(arg0,arg1);
	}

	@Override
	public double glGetUniformd(int arg0,int arg1) {
		return org.lwjgl.opengl.GL43.glGetUniformd(arg0,arg1);
	}

	@Override
	public int glGetUniformi(int arg0,int arg1) {
		return org.lwjgl.opengl.GL43.glGetUniformi(arg0,arg1);
	}

	@Override
	public void glBindBuffer(int arg0,int arg1) {
		org.lwjgl.opengl.GL43.glBindBuffer(arg0,arg1);
	}

	@Override
	public void nglUniform2dv(int arg0,int arg1,long arg2) {
		org.lwjgl.opengl.GL43.nglUniform2dv(arg0,arg1,arg2);
	}

	@Override
	public void nglTexSubImage2D(int arg0,int arg1,int arg2,int arg3,int arg4,int arg5,int arg6,int arg7,long arg8) {
		org.lwjgl.opengl.GL43.nglTexSubImage2D(arg0,arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8);
	}

	@Override
	public void glTexCoordP3ui(int arg0,int arg1) {
		org.lwjgl.opengl.GL43.glTexCoordP3ui(arg0,arg1);
	}

	@Override
	public void glTransformFeedbackVaryings(int arg0,java.lang.CharSequence arg1,int arg2) {
		org.lwjgl.opengl.GL43.glTransformFeedbackVaryings(arg0,arg1,arg2);
	}

	@Override
	public void glTransformFeedbackVaryings(int arg0,java.lang.CharSequence[] arg1,int arg2) {
		org.lwjgl.opengl.GL43.glTransformFeedbackVaryings(arg0,arg1,arg2);
	}

	@Override
	public void glTransformFeedbackVaryings(int arg0,org.lwjgl.PointerBuffer arg1,int arg2) {
		org.lwjgl.opengl.GL43.glTransformFeedbackVaryings(arg0,arg1,arg2);
	}

	@Override
	public boolean glIsTexture(int arg0) {
		return org.lwjgl.opengl.GL43.glIsTexture(arg0);
	}

	@Override
	public void glMultiTexCoordP4uiv(int arg0,int arg1,java.nio.IntBuffer arg2) {
		org.lwjgl.opengl.GL43.glMultiTexCoordP4uiv(arg0,arg1,arg2);
	}

	@Override
	public void glMultiTexCoordP4uiv(int arg0,int arg1,int[] arg2) {
		org.lwjgl.opengl.GL43.glMultiTexCoordP4uiv(arg0,arg1,arg2);
	}

	@Override
	public void glFramebufferTexture3D(int arg0,int arg1,int arg2,int arg3,int arg4,int arg5) {
		org.lwjgl.opengl.GL43.glFramebufferTexture3D(arg0,arg1,arg2,arg3,arg4,arg5);
	}

	@Override
	public void glProgramUniformMatrix3fv(int arg0,int arg1,boolean arg2,float[] arg3) {
		org.lwjgl.opengl.GL43.glProgramUniformMatrix3fv(arg0,arg1,arg2,arg3);
	}

	@Override
	public void glProgramUniformMatrix3fv(int arg0,int arg1,boolean arg2,java.nio.FloatBuffer arg3) {
		org.lwjgl.opengl.GL43.glProgramUniformMatrix3fv(arg0,arg1,arg2,arg3);
	}

	@Override
	public void glColor4uiv(int[] arg0) {
		org.lwjgl.opengl.GL43.glColor4uiv(arg0);
	}

	@Override
	public void glColor4uiv(java.nio.IntBuffer arg0) {
		org.lwjgl.opengl.GL43.glColor4uiv(arg0);
	}

	@Override
	public void glNormalPointer(int arg0,int arg1,java.nio.ShortBuffer arg2) {
		org.lwjgl.opengl.GL43.glNormalPointer(arg0,arg1,arg2);
	}

	@Override
	public void glNormalPointer(int arg0,int arg1,java.nio.FloatBuffer arg2) {
		org.lwjgl.opengl.GL43.glNormalPointer(arg0,arg1,arg2);
	}

	@Override
	public void glNormalPointer(int arg0,int arg1,java.nio.IntBuffer arg2) {
		org.lwjgl.opengl.GL43.glNormalPointer(arg0,arg1,arg2);
	}

	@Override
	public void glNormalPointer(int arg0,int arg1,java.nio.ByteBuffer arg2) {
		org.lwjgl.opengl.GL43.glNormalPointer(arg0,arg1,arg2);
	}

	@Override
	public void glNormalPointer(int arg0,int arg1,long arg2) {
		org.lwjgl.opengl.GL43.glNormalPointer(arg0,arg1,arg2);
	}

	@Override
	public void glScalef(float arg0,float arg1,float arg2) {
		org.lwjgl.opengl.GL43.glScalef(arg0,arg1,arg2);
	}

	@Override
	public void nglColor3iv(long arg0) {
		org.lwjgl.opengl.GL43.nglColor3iv(arg0);
	}

	@Override
	public void glScaled(double arg0,double arg1,double arg2) {
		org.lwjgl.opengl.GL43.glScaled(arg0,arg1,arg2);
	}

	@Override
	public void nglTexSubImage3D(int arg0,int arg1,int arg2,int arg3,int arg4,int arg5,int arg6,int arg7,int arg8,int arg9,long arg10) {
		org.lwjgl.opengl.GL43.nglTexSubImage3D(arg0,arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10);
	}

	@Override
	public void glRasterPos4sv(short[] arg0) {
		org.lwjgl.opengl.GL43.glRasterPos4sv(arg0);
	}

	@Override
	public void glRasterPos4sv(java.nio.ShortBuffer arg0) {
		org.lwjgl.opengl.GL43.glRasterPos4sv(arg0);
	}

	@Override
	public void nglProgramUniformMatrix4x3dv(int arg0,int arg1,int arg2,boolean arg3,long arg4) {
		org.lwjgl.opengl.GL43.nglProgramUniformMatrix4x3dv(arg0,arg1,arg2,arg3,arg4);
	}

	@Override
	public void glFramebufferTexture2D(int arg0,int arg1,int arg2,int arg3,int arg4) {
		org.lwjgl.opengl.GL43.glFramebufferTexture2D(arg0,arg1,arg2,arg3,arg4);
	}

	@Override
	public void glBegin(int arg0) {
		org.lwjgl.opengl.GL43.glBegin(arg0);
	}

	@Override
	public void glTexParameterIuiv(int arg0,int arg1,java.nio.IntBuffer arg2) {
		org.lwjgl.opengl.GL43.glTexParameterIuiv(arg0,arg1,arg2);
	}

	@Override
	public void glTexParameterIuiv(int arg0,int arg1,int[] arg2) {
		org.lwjgl.opengl.GL43.glTexParameterIuiv(arg0,arg1,arg2);
	}

	@Override
	public void glEnable(int arg0) {
		org.lwjgl.opengl.GL43.glEnable(arg0);
	}

	@Override
	public void glVertexAttribL1d(int arg0,double arg1) {
		org.lwjgl.opengl.GL43.glVertexAttribL1d(arg0,arg1);
	}

	@Override
	public void nglUniform2fv(int arg0,int arg1,long arg2) {
		org.lwjgl.opengl.GL43.nglUniform2fv(arg0,arg1,arg2);
	}

	@Override
	public void nglVertexAttrib4sv(int arg0,long arg1) {
		org.lwjgl.opengl.GL43.nglVertexAttrib4sv(arg0,arg1);
	}

	@Override
	public float glGetTexGenf(int arg0,int arg1) {
		return org.lwjgl.opengl.GL43.glGetTexGenf(arg0,arg1);
	}

	@Override
	public int glGetTexGeni(int arg0,int arg1) {
		return org.lwjgl.opengl.GL43.glGetTexGeni(arg0,arg1);
	}

	@Override
	public int glGetQueryIndexedi(int arg0,int arg1,int arg2) {
		return org.lwjgl.opengl.GL43.glGetQueryIndexedi(arg0,arg1,arg2);
	}

	@Override
	public void glFogCoordf(float arg0) {
		org.lwjgl.opengl.GL43.glFogCoordf(arg0);
	}

	@Override
	public void glGetFloatv(int arg0,java.nio.FloatBuffer arg1) {
		org.lwjgl.opengl.GL43.glGetFloatv(arg0,arg1);
	}

	@Override
	public void glGetFloatv(int arg0,float[] arg1) {
		org.lwjgl.opengl.GL43.glGetFloatv(arg0,arg1);
	}

	@Override
	public void glFogCoordd(double arg0) {
		org.lwjgl.opengl.GL43.glFogCoordd(arg0);
	}

	@Override
	public double glGetTexGend(int arg0,int arg1) {
		return org.lwjgl.opengl.GL43.glGetTexGend(arg0,arg1);
	}

	@Override
	public void glReadPixels(int arg0,int arg1,int arg2,int arg3,int arg4,int arg5,java.nio.ByteBuffer arg6) {
		org.lwjgl.opengl.GL43.glReadPixels(arg0,arg1,arg2,arg3,arg4,arg5,arg6);
	}

	@Override
	public void glReadPixels(int arg0,int arg1,int arg2,int arg3,int arg4,int arg5,java.nio.FloatBuffer arg6) {
		org.lwjgl.opengl.GL43.glReadPixels(arg0,arg1,arg2,arg3,arg4,arg5,arg6);
	}

	@Override
	public void glReadPixels(int arg0,int arg1,int arg2,int arg3,int arg4,int arg5,short[] arg6) {
		org.lwjgl.opengl.GL43.glReadPixels(arg0,arg1,arg2,arg3,arg4,arg5,arg6);
	}

	@Override
	public void glReadPixels(int arg0,int arg1,int arg2,int arg3,int arg4,int arg5,float[] arg6) {
		org.lwjgl.opengl.GL43.glReadPixels(arg0,arg1,arg2,arg3,arg4,arg5,arg6);
	}

	@Override
	public void glReadPixels(int arg0,int arg1,int arg2,int arg3,int arg4,int arg5,int[] arg6) {
		org.lwjgl.opengl.GL43.glReadPixels(arg0,arg1,arg2,arg3,arg4,arg5,arg6);
	}

	@Override
	public void glReadPixels(int arg0,int arg1,int arg2,int arg3,int arg4,int arg5,long arg6) {
		org.lwjgl.opengl.GL43.glReadPixels(arg0,arg1,arg2,arg3,arg4,arg5,arg6);
	}

	@Override
	public void glReadPixels(int arg0,int arg1,int arg2,int arg3,int arg4,int arg5,java.nio.IntBuffer arg6) {
		org.lwjgl.opengl.GL43.glReadPixels(arg0,arg1,arg2,arg3,arg4,arg5,arg6);
	}

	@Override
	public void glReadPixels(int arg0,int arg1,int arg2,int arg3,int arg4,int arg5,java.nio.ShortBuffer arg6) {
		org.lwjgl.opengl.GL43.glReadPixels(arg0,arg1,arg2,arg3,arg4,arg5,arg6);
	}

	@Override
	public void glProgramUniformMatrix3dv(int arg0,int arg1,boolean arg2,java.nio.DoubleBuffer arg3) {
		org.lwjgl.opengl.GL43.glProgramUniformMatrix3dv(arg0,arg1,arg2,arg3);
	}

	@Override
	public void glProgramUniformMatrix3dv(int arg0,int arg1,boolean arg2,double[] arg3) {
		org.lwjgl.opengl.GL43.glProgramUniformMatrix3dv(arg0,arg1,arg2,arg3);
	}

	@Override
	public void nglNormalP3uiv(int arg0,long arg1) {
		org.lwjgl.opengl.GL43.nglNormalP3uiv(arg0,arg1);
	}

	@Override
	public void glVertex2sv(java.nio.ShortBuffer arg0) {
		org.lwjgl.opengl.GL43.glVertex2sv(arg0);
	}

	@Override
	public void glVertex2sv(short[] arg0) {
		org.lwjgl.opengl.GL43.glVertex2sv(arg0);
	}

	@Override
	public float glGetFloati(int arg0,int arg1) {
		return org.lwjgl.opengl.GL43.glGetFloati(arg0,arg1);
	}

	@Override
	public void nglDrawBuffers(int arg0,long arg1) {
		org.lwjgl.opengl.GL43.nglDrawBuffers(arg0,arg1);
	}

	@Override
	public void nglProgramUniformMatrix4x3fv(int arg0,int arg1,int arg2,boolean arg3,long arg4) {
		org.lwjgl.opengl.GL43.nglProgramUniformMatrix4x3fv(arg0,arg1,arg2,arg3,arg4);
	}

	@Override
	public void glDrawElementsInstancedBaseInstance(int arg0,java.nio.ShortBuffer arg1,int arg2,int arg3) {
		org.lwjgl.opengl.GL43.glDrawElementsInstancedBaseInstance(arg0,arg1,arg2,arg3);
	}

	@Override
	public void glDrawElementsInstancedBaseInstance(int arg0,java.nio.IntBuffer arg1,int arg2,int arg3) {
		org.lwjgl.opengl.GL43.glDrawElementsInstancedBaseInstance(arg0,arg1,arg2,arg3);
	}

	@Override
	public void glDrawElementsInstancedBaseInstance(int arg0,int arg1,int arg2,long arg3,int arg4,int arg5) {
		org.lwjgl.opengl.GL43.glDrawElementsInstancedBaseInstance(arg0,arg1,arg2,arg3,arg4,arg5);
	}

	@Override
	public void glDrawElementsInstancedBaseInstance(int arg0,int arg1,java.nio.ByteBuffer arg2,int arg3,int arg4) {
		org.lwjgl.opengl.GL43.glDrawElementsInstancedBaseInstance(arg0,arg1,arg2,arg3,arg4);
	}

	@Override
	public void glDrawElementsInstancedBaseInstance(int arg0,java.nio.ByteBuffer arg1,int arg2,int arg3) {
		org.lwjgl.opengl.GL43.glDrawElementsInstancedBaseInstance(arg0,arg1,arg2,arg3);
	}

	@Override
	public void glPolygonStipple(long arg0) {
		org.lwjgl.opengl.GL43.glPolygonStipple(arg0);
	}

	@Override
	public void glPolygonStipple(java.nio.ByteBuffer arg0) {
		org.lwjgl.opengl.GL43.glPolygonStipple(arg0);
	}

	@Override
	public void glFrontFace(int arg0) {
		org.lwjgl.opengl.GL43.glFrontFace(arg0);
	}

	@Override
	public void glDispatchCompute(int arg0,int arg1,int arg2) {
		org.lwjgl.opengl.GL43.glDispatchCompute(arg0,arg1,arg2);
	}

	@Override
	public void glProgramUniformMatrix2x4fv(int arg0,int arg1,boolean arg2,java.nio.FloatBuffer arg3) {
		org.lwjgl.opengl.GL43.glProgramUniformMatrix2x4fv(arg0,arg1,arg2,arg3);
	}

	@Override
	public void glProgramUniformMatrix2x4fv(int arg0,int arg1,boolean arg2,float[] arg3) {
		org.lwjgl.opengl.GL43.glProgramUniformMatrix2x4fv(arg0,arg1,arg2,arg3);
	}

	@Override
	public void glProgramUniformMatrix3x2fv(int arg0,int arg1,boolean arg2,java.nio.FloatBuffer arg3) {
		org.lwjgl.opengl.GL43.glProgramUniformMatrix3x2fv(arg0,arg1,arg2,arg3);
	}

	@Override
	public void glProgramUniformMatrix3x2fv(int arg0,int arg1,boolean arg2,float[] arg3) {
		org.lwjgl.opengl.GL43.glProgramUniformMatrix3x2fv(arg0,arg1,arg2,arg3);
	}

	@Override
	public void nglTexParameterIiv(int arg0,int arg1,long arg2) {
		org.lwjgl.opengl.GL43.nglTexParameterIiv(arg0,arg1,arg2);
	}

	@Override
	public void glAlphaFunc(int arg0,float arg1) {
		org.lwjgl.opengl.GL43.glAlphaFunc(arg0,arg1);
	}

	@Override
	public void nglRasterPos3sv(long arg0) {
		org.lwjgl.opengl.GL43.nglRasterPos3sv(arg0);
	}

	@Override
	public void nglUniform2iv(int arg0,int arg1,long arg2) {
		org.lwjgl.opengl.GL43.nglUniform2iv(arg0,arg1,arg2);
	}

	@Override
	public void nglGetVertexAttribIiv(int arg0,int arg1,long arg2) {
		org.lwjgl.opengl.GL43.nglGetVertexAttribIiv(arg0,arg1,arg2);
	}

	@Override
	public int glGenLists(int arg0) {
		return org.lwjgl.opengl.GL43.glGenLists(arg0);
	}

	@Override
	public void nglSecondaryColor3usv(long arg0) {
		org.lwjgl.opengl.GL43.nglSecondaryColor3usv(arg0);
	}

	@Override
	public void glRectsv(short[] arg0,short[] arg1) {
		org.lwjgl.opengl.GL43.glRectsv(arg0,arg1);
	}

	@Override
	public void glRectsv(java.nio.ShortBuffer arg0,java.nio.ShortBuffer arg1) {
		org.lwjgl.opengl.GL43.glRectsv(arg0,arg1);
	}

	@Override
	public int glGetActiveUniformBlocki(int arg0,int arg1,int arg2) {
		return org.lwjgl.opengl.GL43.glGetActiveUniformBlocki(arg0,arg1,arg2);
	}

	@Override
	public int glGetFramebufferAttachmentParameteri(int arg0,int arg1,int arg2) {
		return org.lwjgl.opengl.GL43.glGetFramebufferAttachmentParameteri(arg0,arg1,arg2);
	}

	@Override
	public void glBindVertexBuffer(int arg0,int arg1,long arg2,int arg3) {
		org.lwjgl.opengl.GL43.glBindVertexBuffer(arg0,arg1,arg2,arg3);
	}

	@Override
	public void glGetTexParameterIuiv(int arg0,int arg1,java.nio.IntBuffer arg2) {
		org.lwjgl.opengl.GL43.glGetTexParameterIuiv(arg0,arg1,arg2);
	}

	@Override
	public void glGetTexParameterIuiv(int arg0,int arg1,int[] arg2) {
		org.lwjgl.opengl.GL43.glGetTexParameterIuiv(arg0,arg1,arg2);
	}

	@Override
	public void glVertexAttribBinding(int arg0,int arg1) {
		org.lwjgl.opengl.GL43.glVertexAttribBinding(arg0,arg1);
	}

	@Override
	public void nglVertexAttrib4Nubv(int arg0,long arg1) {
		org.lwjgl.opengl.GL43.nglVertexAttrib4Nubv(arg0,arg1);
	}

	@Override
	public void glSamplerParameterfv(int arg0,int arg1,float[] arg2) {
		org.lwjgl.opengl.GL43.glSamplerParameterfv(arg0,arg1,arg2);
	}

	@Override
	public void glSamplerParameterfv(int arg0,int arg1,java.nio.FloatBuffer arg2) {
		org.lwjgl.opengl.GL43.glSamplerParameterfv(arg0,arg1,arg2);
	}

	@Override
	public void glTexCoordP1uiv(int arg0,int[] arg1) {
		org.lwjgl.opengl.GL43.glTexCoordP1uiv(arg0,arg1);
	}

	@Override
	public void glTexCoordP1uiv(int arg0,java.nio.IntBuffer arg1) {
		org.lwjgl.opengl.GL43.glTexCoordP1uiv(arg0,arg1);
	}

	@Override
	public void glSecondaryColorP3ui(int arg0,int arg1) {
		org.lwjgl.opengl.GL43.glSecondaryColorP3ui(arg0,arg1);
	}

	@Override
	public void glGenProgramPipelines(int[] arg0) {
		org.lwjgl.opengl.GL43.glGenProgramPipelines(arg0);
	}

	@Override
	public void glGenProgramPipelines(java.nio.IntBuffer arg0) {
		org.lwjgl.opengl.GL43.glGenProgramPipelines(arg0);
	}

	@Override
	public int glGenProgramPipelines() {
		return org.lwjgl.opengl.GL43.glGenProgramPipelines();
	}

	@Override
	public void glProgramUniform2dv(int arg0,int arg1,double[] arg2) {
		org.lwjgl.opengl.GL43.glProgramUniform2dv(arg0,arg1,arg2);
	}

	@Override
	public void glProgramUniform2dv(int arg0,int arg1,java.nio.DoubleBuffer arg2) {
		org.lwjgl.opengl.GL43.glProgramUniform2dv(arg0,arg1,arg2);
	}

	@Override
	public void nglGetTexImage(int arg0,int arg1,int arg2,int arg3,long arg4) {
		org.lwjgl.opengl.GL43.nglGetTexImage(arg0,arg1,arg2,arg3,arg4);
	}

	@Override
	public void glTexCoord1sv(java.nio.ShortBuffer arg0) {
		org.lwjgl.opengl.GL43.glTexCoord1sv(arg0);
	}

	@Override
	public void glTexCoord1sv(short[] arg0) {
		org.lwjgl.opengl.GL43.glTexCoord1sv(arg0);
	}

	@Override
	public void nglGetPolygonStipple(long arg0) {
		org.lwjgl.opengl.GL43.nglGetPolygonStipple(arg0);
	}

	@Override
	public void nglUniformMatrix4x2dv(int arg0,int arg1,boolean arg2,long arg3) {
		org.lwjgl.opengl.GL43.nglUniformMatrix4x2dv(arg0,arg1,arg2,arg3);
	}

	@Override
	public void glVertexAttribP1uiv(int arg0,int arg1,boolean arg2,int[] arg3) {
		org.lwjgl.opengl.GL43.glVertexAttribP1uiv(arg0,arg1,arg2,arg3);
	}

	@Override
	public void glVertexAttribP1uiv(int arg0,int arg1,boolean arg2,java.nio.IntBuffer arg3) {
		org.lwjgl.opengl.GL43.glVertexAttribP1uiv(arg0,arg1,arg2,arg3);
	}

	@Override
	public void glTexParameterIiv(int arg0,int arg1,int[] arg2) {
		org.lwjgl.opengl.GL43.glTexParameterIiv(arg0,arg1,arg2);
	}

	@Override
	public void glTexParameterIiv(int arg0,int arg1,java.nio.IntBuffer arg2) {
		org.lwjgl.opengl.GL43.glTexParameterIiv(arg0,arg1,arg2);
	}

	@Override
	public void nglGetClipPlane(int arg0,long arg1) {
		org.lwjgl.opengl.GL43.nglGetClipPlane(arg0,arg1);
	}

	@Override
	public void glRenderbufferStorageMultisample(int arg0,int arg1,int arg2,int arg3,int arg4) {
		org.lwjgl.opengl.GL43.glRenderbufferStorageMultisample(arg0,arg1,arg2,arg3,arg4);
	}

	@Override
	public void nglMultiTexCoord3dv(int arg0,long arg1) {
		org.lwjgl.opengl.GL43.nglMultiTexCoord3dv(arg0,arg1);
	}

	@Override
	public void glRasterPos4s(short arg0,short arg1,short arg2,short arg3) {
		org.lwjgl.opengl.GL43.glRasterPos4s(arg0,arg1,arg2,arg3);
	}

	@Override
	public boolean glIsSampler(int arg0) {
		return org.lwjgl.opengl.GL43.glIsSampler(arg0);
	}

	@Override
	public void nglUniformMatrix3x4dv(int arg0,int arg1,boolean arg2,long arg3) {
		org.lwjgl.opengl.GL43.nglUniformMatrix3x4dv(arg0,arg1,arg2,arg3);
	}

	@Override
	public void glGetQueryObjecti64v(int arg0,int arg1,long[] arg2) {
		org.lwjgl.opengl.GL43.glGetQueryObjecti64v(arg0,arg1,arg2);
	}

	@Override
	public void glGetQueryObjecti64v(int arg0,int arg1,long arg2) {
		org.lwjgl.opengl.GL43.glGetQueryObjecti64v(arg0,arg1,arg2);
	}

	@Override
	public void glGetQueryObjecti64v(int arg0,int arg1,java.nio.LongBuffer arg2) {
		org.lwjgl.opengl.GL43.glGetQueryObjecti64v(arg0,arg1,arg2);
	}

	@Override
	public void glColor4usv(java.nio.ShortBuffer arg0) {
		org.lwjgl.opengl.GL43.glColor4usv(arg0);
	}

	@Override
	public void glColor4usv(short[] arg0) {
		org.lwjgl.opengl.GL43.glColor4usv(arg0);
	}

	@Override
	public void glSamplerParameteriv(int arg0,int arg1,int[] arg2) {
		org.lwjgl.opengl.GL43.glSamplerParameteriv(arg0,arg1,arg2);
	}

	@Override
	public void glSamplerParameteriv(int arg0,int arg1,java.nio.IntBuffer arg2) {
		org.lwjgl.opengl.GL43.glSamplerParameteriv(arg0,arg1,arg2);
	}

	@Override
	public float glGetMapf(int arg0,int arg1) {
		return org.lwjgl.opengl.GL43.glGetMapf(arg0,arg1);
	}

	@Override
	public void glRasterPos4i(int arg0,int arg1,int arg2,int arg3) {
		org.lwjgl.opengl.GL43.glRasterPos4i(arg0,arg1,arg2,arg3);
	}

	@Override
	public void glRasterPos4f(float arg0,float arg1,float arg2,float arg3) {
		org.lwjgl.opengl.GL43.glRasterPos4f(arg0,arg1,arg2,arg3);
	}

	@Override
	public void nglGenVertexArrays(int arg0,long arg1) {
		org.lwjgl.opengl.GL43.nglGenVertexArrays(arg0,arg1);
	}

	@Override
	public double glGetMapd(int arg0,int arg1) {
		return org.lwjgl.opengl.GL43.glGetMapd(arg0,arg1);
	}

	@Override
	public int glGetMapi(int arg0,int arg1) {
		return org.lwjgl.opengl.GL43.glGetMapi(arg0,arg1);
	}

	@Override
	public void glRasterPos4d(double arg0,double arg1,double arg2,double arg3) {
		org.lwjgl.opengl.GL43.glRasterPos4d(arg0,arg1,arg2,arg3);
	}

	@Override
	public void glDrawPixels(int arg0,int arg1,int arg2,int arg3,int[] arg4) {
		org.lwjgl.opengl.GL43.glDrawPixels(arg0,arg1,arg2,arg3,arg4);
	}

	@Override
	public void glDrawPixels(int arg0,int arg1,int arg2,int arg3,float[] arg4) {
		org.lwjgl.opengl.GL43.glDrawPixels(arg0,arg1,arg2,arg3,arg4);
	}

	@Override
	public void glDrawPixels(int arg0,int arg1,int arg2,int arg3,java.nio.IntBuffer arg4) {
		org.lwjgl.opengl.GL43.glDrawPixels(arg0,arg1,arg2,arg3,arg4);
	}

	@Override
	public void glDrawPixels(int arg0,int arg1,int arg2,int arg3,java.nio.FloatBuffer arg4) {
		org.lwjgl.opengl.GL43.glDrawPixels(arg0,arg1,arg2,arg3,arg4);
	}

	@Override
	public void glDrawPixels(int arg0,int arg1,int arg2,int arg3,java.nio.ByteBuffer arg4) {
		org.lwjgl.opengl.GL43.glDrawPixels(arg0,arg1,arg2,arg3,arg4);
	}

	@Override
	public void glDrawPixels(int arg0,int arg1,int arg2,int arg3,long arg4) {
		org.lwjgl.opengl.GL43.glDrawPixels(arg0,arg1,arg2,arg3,arg4);
	}

	@Override
	public void glDrawPixels(int arg0,int arg1,int arg2,int arg3,java.nio.ShortBuffer arg4) {
		org.lwjgl.opengl.GL43.glDrawPixels(arg0,arg1,arg2,arg3,arg4);
	}

	@Override
	public void glDrawPixels(int arg0,int arg1,int arg2,int arg3,short[] arg4) {
		org.lwjgl.opengl.GL43.glDrawPixels(arg0,arg1,arg2,arg3,arg4);
	}

	@Override
	public void glSecondaryColor3d(double arg0,double arg1,double arg2) {
		org.lwjgl.opengl.GL43.glSecondaryColor3d(arg0,arg1,arg2);
	}

	@Override
	public void glSecondaryColor3f(float arg0,float arg1,float arg2) {
		org.lwjgl.opengl.GL43.glSecondaryColor3f(arg0,arg1,arg2);
	}

	@Override
	public void nglProgramUniform1iv(int arg0,int arg1,int arg2,long arg3) {
		org.lwjgl.opengl.GL43.nglProgramUniform1iv(arg0,arg1,arg2,arg3);
	}

	@Override
	public void glSecondaryColor3b(byte arg0,byte arg1,byte arg2) {
		org.lwjgl.opengl.GL43.glSecondaryColor3b(arg0,arg1,arg2);
	}

	@Override
	public void glRasterPos3s(short arg0,short arg1,short arg2) {
		org.lwjgl.opengl.GL43.glRasterPos3s(arg0,arg1,arg2);
	}

	@Override
	public void glGetAttachedShaders(int arg0,int[] arg1,int[] arg2) {
		org.lwjgl.opengl.GL43.glGetAttachedShaders(arg0,arg1,arg2);
	}

	@Override
	public void glGetAttachedShaders(int arg0,java.nio.IntBuffer arg1,java.nio.IntBuffer arg2) {
		org.lwjgl.opengl.GL43.glGetAttachedShaders(arg0,arg1,arg2);
	}

	@Override
	public void glSecondaryColor3i(int arg0,int arg1,int arg2) {
		org.lwjgl.opengl.GL43.glSecondaryColor3i(arg0,arg1,arg2);
	}

	@Override
	public void glSecondaryColor3s(short arg0,short arg1,short arg2) {
		org.lwjgl.opengl.GL43.glSecondaryColor3s(arg0,arg1,arg2);
	}

	@Override
	public void glClearStencil(int arg0) {
		org.lwjgl.opengl.GL43.glClearStencil(arg0);
	}

	@Override
	public void nglBindFragDataLocationIndexed(int arg0,int arg1,int arg2,long arg3) {
		org.lwjgl.opengl.GL43.nglBindFragDataLocationIndexed(arg0,arg1,arg2,arg3);
	}

	@Override
	public void nglClearBufferData(int arg0,int arg1,int arg2,int arg3,long arg4) {
		org.lwjgl.opengl.GL43.nglClearBufferData(arg0,arg1,arg2,arg3,arg4);
	}

	@Override
	public void glRasterPos3i(int arg0,int arg1,int arg2) {
		org.lwjgl.opengl.GL43.glRasterPos3i(arg0,arg1,arg2);
	}

	@Override
	public void glGetActiveUniformsiv(int arg0,int[] arg1,int arg2,int[] arg3) {
		org.lwjgl.opengl.GL43.glGetActiveUniformsiv(arg0,arg1,arg2,arg3);
	}

	@Override
	public void glGetActiveUniformsiv(int arg0,java.nio.IntBuffer arg1,int arg2,java.nio.IntBuffer arg3) {
		org.lwjgl.opengl.GL43.glGetActiveUniformsiv(arg0,arg1,arg2,arg3);
	}

	@Override
	public void glRasterPos3f(float arg0,float arg1,float arg2) {
		org.lwjgl.opengl.GL43.glRasterPos3f(arg0,arg1,arg2);
	}

	@Override
	public void glTexParameteriv(int arg0,int arg1,java.nio.IntBuffer arg2) {
		org.lwjgl.opengl.GL43.glTexParameteriv(arg0,arg1,arg2);
	}

	@Override
	public void glTexParameteriv(int arg0,int arg1,int[] arg2) {
		org.lwjgl.opengl.GL43.glTexParameteriv(arg0,arg1,arg2);
	}

	@Override
	public void glRasterPos3d(double arg0,double arg1,double arg2) {
		org.lwjgl.opengl.GL43.glRasterPos3d(arg0,arg1,arg2);
	}

	@Override
	public void glShaderBinary(java.nio.IntBuffer arg0,int arg1,java.nio.ByteBuffer arg2) {
		org.lwjgl.opengl.GL43.glShaderBinary(arg0,arg1,arg2);
	}

	@Override
	public void glShaderBinary(int[] arg0,int arg1,java.nio.ByteBuffer arg2) {
		org.lwjgl.opengl.GL43.glShaderBinary(arg0,arg1,arg2);
	}

	@Override
	public void glTexImage2D(int arg0,int arg1,int arg2,int arg3,int arg4,int arg5,int arg6,int arg7,double[] arg8) {
		org.lwjgl.opengl.GL43.glTexImage2D(arg0,arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8);
	}

	@Override
	public void glTexImage2D(int arg0,int arg1,int arg2,int arg3,int arg4,int arg5,int arg6,int arg7,float[] arg8) {
		org.lwjgl.opengl.GL43.glTexImage2D(arg0,arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8);
	}

	@Override
	public void glTexImage2D(int arg0,int arg1,int arg2,int arg3,int arg4,int arg5,int arg6,int arg7,java.nio.DoubleBuffer arg8) {
		org.lwjgl.opengl.GL43.glTexImage2D(arg0,arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8);
	}

	@Override
	public void glTexImage2D(int arg0,int arg1,int arg2,int arg3,int arg4,int arg5,int arg6,int arg7,int[] arg8) {
		org.lwjgl.opengl.GL43.glTexImage2D(arg0,arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8);
	}

	@Override
	public void glTexImage2D(int arg0,int arg1,int arg2,int arg3,int arg4,int arg5,int arg6,int arg7,short[] arg8) {
		org.lwjgl.opengl.GL43.glTexImage2D(arg0,arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8);
	}

	@Override
	public void glTexImage2D(int arg0,int arg1,int arg2,int arg3,int arg4,int arg5,int arg6,int arg7,java.nio.ByteBuffer arg8) {
		org.lwjgl.opengl.GL43.glTexImage2D(arg0,arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8);
	}

	@Override
	public void glTexImage2D(int arg0,int arg1,int arg2,int arg3,int arg4,int arg5,int arg6,int arg7,long arg8) {
		org.lwjgl.opengl.GL43.glTexImage2D(arg0,arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8);
	}

	@Override
	public void glTexImage2D(int arg0,int arg1,int arg2,int arg3,int arg4,int arg5,int arg6,int arg7,java.nio.ShortBuffer arg8) {
		org.lwjgl.opengl.GL43.glTexImage2D(arg0,arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8);
	}

	@Override
	public void glTexImage2D(int arg0,int arg1,int arg2,int arg3,int arg4,int arg5,int arg6,int arg7,java.nio.IntBuffer arg8) {
		org.lwjgl.opengl.GL43.glTexImage2D(arg0,arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8);
	}

	@Override
	public void glTexImage2D(int arg0,int arg1,int arg2,int arg3,int arg4,int arg5,int arg6,int arg7,java.nio.FloatBuffer arg8) {
		org.lwjgl.opengl.GL43.glTexImage2D(arg0,arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8);
	}

	@Override
	public void nglProgramUniformMatrix2x3dv(int arg0,int arg1,int arg2,boolean arg3,long arg4) {
		org.lwjgl.opengl.GL43.nglProgramUniformMatrix2x3dv(arg0,arg1,arg2,arg3,arg4);
	}

	@Override
	public void nglUniformMatrix4x2fv(int arg0,int arg1,boolean arg2,long arg3) {
		org.lwjgl.opengl.GL43.nglUniformMatrix4x2fv(arg0,arg1,arg2,arg3);
	}

	@Override
	public void nglProgramUniform1fv(int arg0,int arg1,int arg2,long arg3) {
		org.lwjgl.opengl.GL43.nglProgramUniform1fv(arg0,arg1,arg2,arg3);
	}

	@Override
	public void nglGetActiveUniformBlockName(int arg0,int arg1,int arg2,long arg3,long arg4) {
		org.lwjgl.opengl.GL43.nglGetActiveUniformBlockName(arg0,arg1,arg2,arg3,arg4);
	}

	@Override
	public void glMultiTexCoord3dv(int arg0,java.nio.DoubleBuffer arg1) {
		org.lwjgl.opengl.GL43.glMultiTexCoord3dv(arg0,arg1);
	}

	@Override
	public void glMultiTexCoord3dv(int arg0,double[] arg1) {
		org.lwjgl.opengl.GL43.glMultiTexCoord3dv(arg0,arg1);
	}

	@Override
	public void glRasterPos2s(short arg0,short arg1) {
		org.lwjgl.opengl.GL43.glRasterPos2s(arg0,arg1);
	}

	@Override
	public void glTexStorage3DMultisample(int arg0,int arg1,int arg2,int arg3,int arg4,int arg5,boolean arg6) {
		org.lwjgl.opengl.GL43.glTexStorage3DMultisample(arg0,arg1,arg2,arg3,arg4,arg5,arg6);
	}

	@Override
	public void nglMultiTexCoord3fv(int arg0,long arg1) {
		org.lwjgl.opengl.GL43.nglMultiTexCoord3fv(arg0,arg1);
	}

	@Override
	public void nglUniformMatrix3x4fv(int arg0,int arg1,boolean arg2,long arg3) {
		org.lwjgl.opengl.GL43.nglUniformMatrix3x4fv(arg0,arg1,arg2,arg3);
	}

	@Override
	public void nglGetProgramPipelineInfoLog(int arg0,int arg1,long arg2,long arg3) {
		org.lwjgl.opengl.GL43.nglGetProgramPipelineInfoLog(arg0,arg1,arg2,arg3);
	}

	@Override
	public void nglDeleteTextures(int arg0,long arg1) {
		org.lwjgl.opengl.GL43.nglDeleteTextures(arg0,arg1);
	}

	@Override
	public int glGetInternalformati(int arg0,int arg1,int arg2) {
		return org.lwjgl.opengl.GL43.glGetInternalformati(arg0,arg1,arg2);
	}

	@Override
	public void nglIndexubv(long arg0) {
		org.lwjgl.opengl.GL43.nglIndexubv(arg0);
	}

	@Override
	public void glRasterPos2i(int arg0,int arg1) {
		org.lwjgl.opengl.GL43.glRasterPos2i(arg0,arg1);
	}

	@Override
	public void glRasterPos2f(float arg0,float arg1) {
		org.lwjgl.opengl.GL43.glRasterPos2f(arg0,arg1);
	}

	@Override
	public void glRasterPos2d(double arg0,double arg1) {
		org.lwjgl.opengl.GL43.glRasterPos2d(arg0,arg1);
	}

	@Override
	public void glMultiDrawElements(int arg0,int[] arg1,int arg2,org.lwjgl.PointerBuffer arg3) {
		org.lwjgl.opengl.GL43.glMultiDrawElements(arg0,arg1,arg2,arg3);
	}

	@Override
	public void glMultiDrawElements(int arg0,java.nio.IntBuffer arg1,int arg2,org.lwjgl.PointerBuffer arg3) {
		org.lwjgl.opengl.GL43.glMultiDrawElements(arg0,arg1,arg2,arg3);
	}

	@Override
	public void glTexImage3D(int arg0,int arg1,int arg2,int arg3,int arg4,int arg5,int arg6,int arg7,int arg8,short[] arg9) {
		org.lwjgl.opengl.GL43.glTexImage3D(arg0,arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9);
	}

	@Override
	public void glTexImage3D(int arg0,int arg1,int arg2,int arg3,int arg4,int arg5,int arg6,int arg7,int arg8,int[] arg9) {
		org.lwjgl.opengl.GL43.glTexImage3D(arg0,arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9);
	}

	@Override
	public void glTexImage3D(int arg0,int arg1,int arg2,int arg3,int arg4,int arg5,int arg6,int arg7,int arg8,java.nio.DoubleBuffer arg9) {
		org.lwjgl.opengl.GL43.glTexImage3D(arg0,arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9);
	}

	@Override
	public void glTexImage3D(int arg0,int arg1,int arg2,int arg3,int arg4,int arg5,int arg6,int arg7,int arg8,double[] arg9) {
		org.lwjgl.opengl.GL43.glTexImage3D(arg0,arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9);
	}

	@Override
	public void glTexImage3D(int arg0,int arg1,int arg2,int arg3,int arg4,int arg5,int arg6,int arg7,int arg8,float[] arg9) {
		org.lwjgl.opengl.GL43.glTexImage3D(arg0,arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9);
	}

	@Override
	public void glTexImage3D(int arg0,int arg1,int arg2,int arg3,int arg4,int arg5,int arg6,int arg7,int arg8,java.nio.ShortBuffer arg9) {
		org.lwjgl.opengl.GL43.glTexImage3D(arg0,arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9);
	}

	@Override
	public void glTexImage3D(int arg0,int arg1,int arg2,int arg3,int arg4,int arg5,int arg6,int arg7,int arg8,long arg9) {
		org.lwjgl.opengl.GL43.glTexImage3D(arg0,arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9);
	}

	@Override
	public void glTexImage3D(int arg0,int arg1,int arg2,int arg3,int arg4,int arg5,int arg6,int arg7,int arg8,java.nio.ByteBuffer arg9) {
		org.lwjgl.opengl.GL43.glTexImage3D(arg0,arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9);
	}

	@Override
	public void glTexImage3D(int arg0,int arg1,int arg2,int arg3,int arg4,int arg5,int arg6,int arg7,int arg8,java.nio.IntBuffer arg9) {
		org.lwjgl.opengl.GL43.glTexImage3D(arg0,arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9);
	}

	@Override
	public void glTexImage3D(int arg0,int arg1,int arg2,int arg3,int arg4,int arg5,int arg6,int arg7,int arg8,java.nio.FloatBuffer arg9) {
		org.lwjgl.opengl.GL43.glTexImage3D(arg0,arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9);
	}

	@Override
	public void glEnablei(int arg0,int arg1) {
		org.lwjgl.opengl.GL43.glEnablei(arg0,arg1);
	}

	@Override
	public void glGetSamplerParameterIuiv(int arg0,int arg1,java.nio.IntBuffer arg2) {
		org.lwjgl.opengl.GL43.glGetSamplerParameterIuiv(arg0,arg1,arg2);
	}

	@Override
	public void glGetSamplerParameterIuiv(int arg0,int arg1,int[] arg2) {
		org.lwjgl.opengl.GL43.glGetSamplerParameterIuiv(arg0,arg1,arg2);
	}

	@Override
	public void glCallLists(java.nio.IntBuffer arg0) {
		org.lwjgl.opengl.GL43.glCallLists(arg0);
	}

	@Override
	public void glCallLists(int arg0,java.nio.ByteBuffer arg1) {
		org.lwjgl.opengl.GL43.glCallLists(arg0,arg1);
	}

	@Override
	public void glCallLists(java.nio.ByteBuffer arg0) {
		org.lwjgl.opengl.GL43.glCallLists(arg0);
	}

	@Override
	public void glCallLists(java.nio.ShortBuffer arg0) {
		org.lwjgl.opengl.GL43.glCallLists(arg0);
	}

	@Override
	public void nglVertex3sv(long arg0) {
		org.lwjgl.opengl.GL43.nglVertex3sv(arg0);
	}

	@Override
	public void nglColor3bv(long arg0) {
		org.lwjgl.opengl.GL43.nglColor3bv(arg0);
	}

	@Override
	public void glColorMaski(int arg0,boolean arg1,boolean arg2,boolean arg3,boolean arg4) {
		org.lwjgl.opengl.GL43.glColorMaski(arg0,arg1,arg2,arg3,arg4);
	}

	@Override
	public void nglProgramUniformMatrix2x3fv(int arg0,int arg1,int arg2,boolean arg3,long arg4) {
		org.lwjgl.opengl.GL43.nglProgramUniformMatrix2x3fv(arg0,arg1,arg2,arg3,arg4);
	}

	@Override
	public void glMultiTexCoord3fv(int arg0,java.nio.FloatBuffer arg1) {
		org.lwjgl.opengl.GL43.glMultiTexCoord3fv(arg0,arg1);
	}

	@Override
	public void glMultiTexCoord3fv(int arg0,float[] arg1) {
		org.lwjgl.opengl.GL43.glMultiTexCoord3fv(arg0,arg1);
	}

	@Override
	public void glBlendFuncSeparate(int arg0,int arg1,int arg2,int arg3) {
		org.lwjgl.opengl.GL43.glBlendFuncSeparate(arg0,arg1,arg2,arg3);
	}

	@Override
	public void nglGetActiveAtomicCounterBufferiv(int arg0,int arg1,int arg2,long arg3) {
		org.lwjgl.opengl.GL43.nglGetActiveAtomicCounterBufferiv(arg0,arg1,arg2,arg3);
	}

	@Override
	public void glEvalCoord1dv(java.nio.DoubleBuffer arg0) {
		org.lwjgl.opengl.GL43.glEvalCoord1dv(arg0);
	}

	@Override
	public void glEvalCoord1dv(double[] arg0) {
		org.lwjgl.opengl.GL43.glEvalCoord1dv(arg0);
	}

	@Override
	public void nglVertexAttrib4Nuiv(int arg0,long arg1) {
		org.lwjgl.opengl.GL43.nglVertexAttrib4Nuiv(arg0,arg1);
	}

	@Override
	public void glBufferData(int arg0,float[] arg1,int arg2) {
		org.lwjgl.opengl.GL43.glBufferData(arg0,arg1,arg2);
	}

	@Override
	public void glBufferData(int arg0,double[] arg1,int arg2) {
		org.lwjgl.opengl.GL43.glBufferData(arg0,arg1,arg2);
	}

	@Override
	public void glBufferData(int arg0,long arg1,int arg2) {
		org.lwjgl.opengl.GL43.glBufferData(arg0,arg1,arg2);
	}

	@Override
	public void glBufferData(int arg0,java.nio.ByteBuffer arg1,int arg2) {
		org.lwjgl.opengl.GL43.glBufferData(arg0,arg1,arg2);
	}

	@Override
	public void glBufferData(int arg0,long[] arg1,int arg2) {
		org.lwjgl.opengl.GL43.glBufferData(arg0,arg1,arg2);
	}

	@Override
	public void glBufferData(int arg0,int[] arg1,int arg2) {
		org.lwjgl.opengl.GL43.glBufferData(arg0,arg1,arg2);
	}

	@Override
	public void glBufferData(int arg0,short[] arg1,int arg2) {
		org.lwjgl.opengl.GL43.glBufferData(arg0,arg1,arg2);
	}

	@Override
	public void glBufferData(int arg0,java.nio.IntBuffer arg1,int arg2) {
		org.lwjgl.opengl.GL43.glBufferData(arg0,arg1,arg2);
	}

	@Override
	public void glBufferData(int arg0,java.nio.LongBuffer arg1,int arg2) {
		org.lwjgl.opengl.GL43.glBufferData(arg0,arg1,arg2);
	}

	@Override
	public void glBufferData(int arg0,java.nio.FloatBuffer arg1,int arg2) {
		org.lwjgl.opengl.GL43.glBufferData(arg0,arg1,arg2);
	}

	@Override
	public void glBufferData(int arg0,java.nio.ShortBuffer arg1,int arg2) {
		org.lwjgl.opengl.GL43.glBufferData(arg0,arg1,arg2);
	}

	@Override
	public void glBufferData(int arg0,java.nio.DoubleBuffer arg1,int arg2) {
		org.lwjgl.opengl.GL43.glBufferData(arg0,arg1,arg2);
	}

	@Override
	public void glTexBuffer(int arg0,int arg1,int arg2) {
		org.lwjgl.opengl.GL43.glTexBuffer(arg0,arg1,arg2);
	}

	@Override
	public void glDetachShader(int arg0,int arg1) {
		org.lwjgl.opengl.GL43.glDetachShader(arg0,arg1);
	}

	@Override
	public void glGetIntegeri_v(int arg0,int arg1,java.nio.IntBuffer arg2) {
		org.lwjgl.opengl.GL43.glGetIntegeri_v(arg0,arg1,arg2);
	}

	@Override
	public void glGetIntegeri_v(int arg0,int arg1,int[] arg2) {
		org.lwjgl.opengl.GL43.glGetIntegeri_v(arg0,arg1,arg2);
	}

	@Override
	public void nglTexSubImage1D(int arg0,int arg1,int arg2,int arg3,int arg4,int arg5,long arg6) {
		org.lwjgl.opengl.GL43.nglTexSubImage1D(arg0,arg1,arg2,arg3,arg4,arg5,arg6);
	}

	@Override
	public void glProgramUniform2iv(int arg0,int arg1,java.nio.IntBuffer arg2) {
		org.lwjgl.opengl.GL43.glProgramUniform2iv(arg0,arg1,arg2);
	}

	@Override
	public void glProgramUniform2iv(int arg0,int arg1,int[] arg2) {
		org.lwjgl.opengl.GL43.glProgramUniform2iv(arg0,arg1,arg2);
	}

	@Override
	public void glTexImage1D(int arg0,int arg1,int arg2,int arg3,int arg4,int arg5,int arg6,java.nio.ByteBuffer arg7) {
		org.lwjgl.opengl.GL43.glTexImage1D(arg0,arg1,arg2,arg3,arg4,arg5,arg6,arg7);
	}

	@Override
	public void glTexImage1D(int arg0,int arg1,int arg2,int arg3,int arg4,int arg5,int arg6,long arg7) {
		org.lwjgl.opengl.GL43.glTexImage1D(arg0,arg1,arg2,arg3,arg4,arg5,arg6,arg7);
	}

	@Override
	public void glTexImage1D(int arg0,int arg1,int arg2,int arg3,int arg4,int arg5,int arg6,java.nio.ShortBuffer arg7) {
		org.lwjgl.opengl.GL43.glTexImage1D(arg0,arg1,arg2,arg3,arg4,arg5,arg6,arg7);
	}

	@Override
	public void glTexImage1D(int arg0,int arg1,int arg2,int arg3,int arg4,int arg5,int arg6,java.nio.IntBuffer arg7) {
		org.lwjgl.opengl.GL43.glTexImage1D(arg0,arg1,arg2,arg3,arg4,arg5,arg6,arg7);
	}

	@Override
	public void glTexImage1D(int arg0,int arg1,int arg2,int arg3,int arg4,int arg5,int arg6,java.nio.FloatBuffer arg7) {
		org.lwjgl.opengl.GL43.glTexImage1D(arg0,arg1,arg2,arg3,arg4,arg5,arg6,arg7);
	}

	@Override
	public void glTexImage1D(int arg0,int arg1,int arg2,int arg3,int arg4,int arg5,int arg6,int[] arg7) {
		org.lwjgl.opengl.GL43.glTexImage1D(arg0,arg1,arg2,arg3,arg4,arg5,arg6,arg7);
	}

	@Override
	public void glTexImage1D(int arg0,int arg1,int arg2,int arg3,int arg4,int arg5,int arg6,short[] arg7) {
		org.lwjgl.opengl.GL43.glTexImage1D(arg0,arg1,arg2,arg3,arg4,arg5,arg6,arg7);
	}

	@Override
	public void glTexImage1D(int arg0,int arg1,int arg2,int arg3,int arg4,int arg5,int arg6,double[] arg7) {
		org.lwjgl.opengl.GL43.glTexImage1D(arg0,arg1,arg2,arg3,arg4,arg5,arg6,arg7);
	}

	@Override
	public void glTexImage1D(int arg0,int arg1,int arg2,int arg3,int arg4,int arg5,int arg6,float[] arg7) {
		org.lwjgl.opengl.GL43.glTexImage1D(arg0,arg1,arg2,arg3,arg4,arg5,arg6,arg7);
	}

	@Override
	public void glTexImage1D(int arg0,int arg1,int arg2,int arg3,int arg4,int arg5,int arg6,java.nio.DoubleBuffer arg7) {
		org.lwjgl.opengl.GL43.glTexImage1D(arg0,arg1,arg2,arg3,arg4,arg5,arg6,arg7);
	}

	@Override
	public void glGetBufferParameteriv(int arg0,int arg1,java.nio.IntBuffer arg2) {
		org.lwjgl.opengl.GL43.glGetBufferParameteriv(arg0,arg1,arg2);
	}

	@Override
	public void glGetBufferParameteriv(int arg0,int arg1,int[] arg2) {
		org.lwjgl.opengl.GL43.glGetBufferParameteriv(arg0,arg1,arg2);
	}

	@Override
	public void glDrawBuffers(int[] arg0) {
		org.lwjgl.opengl.GL43.glDrawBuffers(arg0);
	}

	@Override
	public void glDrawBuffers(java.nio.IntBuffer arg0) {
		org.lwjgl.opengl.GL43.glDrawBuffers(arg0);
	}

	@Override
	public void glDrawBuffers(int arg0) {
		org.lwjgl.opengl.GL43.glDrawBuffers(arg0);
	}

	@Override
	public void glEvalPoint2(int arg0,int arg1) {
		org.lwjgl.opengl.GL43.glEvalPoint2(arg0,arg1);
	}

	@Override
	public void glEvalPoint1(int arg0) {
		org.lwjgl.opengl.GL43.glEvalPoint1(arg0);
	}

	@Override
	public void glInvalidateBufferSubData(int arg0,long arg1,long arg2) {
		org.lwjgl.opengl.GL43.glInvalidateBufferSubData(arg0,arg1,arg2);
	}

	@Override
	public java.lang.String glGetProgramInfoLog_String(int arg0) {
		return org.lwjgl.opengl.GL43.glGetProgramInfoLog(arg0);
	}

	@Override
	public java.lang.String glGetProgramInfoLog_String(int arg0,int arg1) {
		return org.lwjgl.opengl.GL43.glGetProgramInfoLog(arg0,arg1);
	}

	@Override
	public void glGetProgramInfoLog(int arg0,java.nio.IntBuffer arg1,java.nio.ByteBuffer arg2) {
		org.lwjgl.opengl.GL43.glGetProgramInfoLog(arg0,arg1,arg2);
	}

	@Override
	public void glGetProgramInfoLog(int arg0,int[] arg1,java.nio.ByteBuffer arg2) {
		org.lwjgl.opengl.GL43.glGetProgramInfoLog(arg0,arg1,arg2);
	}

	@Override
	public boolean nglIsSync(long arg0) {
		return org.lwjgl.opengl.GL43.nglIsSync(arg0);
	}

	@Override
	public void nglProgramUniform1dv(int arg0,int arg1,int arg2,long arg3) {
		org.lwjgl.opengl.GL43.nglProgramUniform1dv(arg0,arg1,arg2,arg3);
	}

	@Override
	public void nglColor3dv(long arg0) {
		org.lwjgl.opengl.GL43.nglColor3dv(arg0);
	}

	@Override
	public void glStencilMaskSeparate(int arg0,int arg1) {
		org.lwjgl.opengl.GL43.glStencilMaskSeparate(arg0,arg1);
	}

	@Override
	public void glProgramUniform2fv(int arg0,int arg1,float[] arg2) {
		org.lwjgl.opengl.GL43.glProgramUniform2fv(arg0,arg1,arg2);
	}

	@Override
	public void glProgramUniform2fv(int arg0,int arg1,java.nio.FloatBuffer arg2) {
		org.lwjgl.opengl.GL43.glProgramUniform2fv(arg0,arg1,arg2);
	}

	@Override
	public void glVertexAttribI2uiv(int arg0,java.nio.IntBuffer arg1) {
		org.lwjgl.opengl.GL43.glVertexAttribI2uiv(arg0,arg1);
	}

	@Override
	public void glVertexAttribI2uiv(int arg0,int[] arg1) {
		org.lwjgl.opengl.GL43.glVertexAttribI2uiv(arg0,arg1);
	}

	@Override
	public void glEvalCoord1fv(float[] arg0) {
		org.lwjgl.opengl.GL43.glEvalCoord1fv(arg0);
	}

	@Override
	public void glEvalCoord1fv(java.nio.FloatBuffer arg0) {
		org.lwjgl.opengl.GL43.glEvalCoord1fv(arg0);
	}

	@Override
	public void glGetDoublei_v(int arg0,int arg1,java.nio.DoubleBuffer arg2) {
		org.lwjgl.opengl.GL43.glGetDoublei_v(arg0,arg1,arg2);
	}

	@Override
	public void glGetDoublei_v(int arg0,int arg1,double[] arg2) {
		org.lwjgl.opengl.GL43.glGetDoublei_v(arg0,arg1,arg2);
	}

	@Override
	public void glMultiTexCoord3iv(int arg0,java.nio.IntBuffer arg1) {
		org.lwjgl.opengl.GL43.glMultiTexCoord3iv(arg0,arg1);
	}

	@Override
	public void glMultiTexCoord3iv(int arg0,int[] arg1) {
		org.lwjgl.opengl.GL43.glMultiTexCoord3iv(arg0,arg1);
	}

	@Override
	public void nglProgramUniformMatrix2dv(int arg0,int arg1,int arg2,boolean arg3,long arg4) {
		org.lwjgl.opengl.GL43.nglProgramUniformMatrix2dv(arg0,arg1,arg2,arg3,arg4);
	}

	@Override
	public boolean glGetBoolean(int arg0) {
		return org.lwjgl.opengl.GL43.glGetBoolean(arg0);
	}

	@Override
	public void glDrawTransformFeedback(int arg0,int arg1) {
		org.lwjgl.opengl.GL43.glDrawTransformFeedback(arg0,arg1);
	}

	@Override
	public void glUniform4ui(int arg0,int arg1,int arg2,int arg3,int arg4) {
		org.lwjgl.opengl.GL43.glUniform4ui(arg0,arg1,arg2,arg3,arg4);
	}

	@Override
	public double glGetDouble(int arg0) {
		return org.lwjgl.opengl.GL43.glGetDouble(arg0);
	}

	@Override
	public void glVertexPointer(int arg0,int arg1,int arg2,java.nio.ShortBuffer arg3) {
		org.lwjgl.opengl.GL43.glVertexPointer(arg0,arg1,arg2,arg3);
	}

	@Override
	public void glVertexPointer(int arg0,int arg1,int arg2,java.nio.IntBuffer arg3) {
		org.lwjgl.opengl.GL43.glVertexPointer(arg0,arg1,arg2,arg3);
	}

	@Override
	public void glVertexPointer(int arg0,int arg1,int arg2,java.nio.FloatBuffer arg3) {
		org.lwjgl.opengl.GL43.glVertexPointer(arg0,arg1,arg2,arg3);
	}

	@Override
	public void glVertexPointer(int arg0,int arg1,int arg2,long arg3) {
		org.lwjgl.opengl.GL43.glVertexPointer(arg0,arg1,arg2,arg3);
	}

	@Override
	public void glVertexPointer(int arg0,int arg1,int arg2,java.nio.ByteBuffer arg3) {
		org.lwjgl.opengl.GL43.glVertexPointer(arg0,arg1,arg2,arg3);
	}

	@Override
	public void nglMultiTexCoord3iv(int arg0,long arg1) {
		org.lwjgl.opengl.GL43.nglMultiTexCoord3iv(arg0,arg1);
	}

	@Override
	public void nglColor3fv(long arg0) {
		org.lwjgl.opengl.GL43.nglColor3fv(arg0);
	}

	@Override
	public void nglGetVertexAttribiv(int arg0,int arg1,long arg2) {
		org.lwjgl.opengl.GL43.nglGetVertexAttribiv(arg0,arg1,arg2);
	}

	@Override
	public void glTexGendv(int arg0,int arg1,java.nio.DoubleBuffer arg2) {
		org.lwjgl.opengl.GL43.glTexGendv(arg0,arg1,arg2);
	}

	@Override
	public void glTexGendv(int arg0,int arg1,double[] arg2) {
		org.lwjgl.opengl.GL43.glTexGendv(arg0,arg1,arg2);
	}

	@Override
	public void glPointParameteriv(int arg0,int[] arg1) {
		org.lwjgl.opengl.GL43.glPointParameteriv(arg0,arg1);
	}

	@Override
	public void glPointParameteriv(int arg0,java.nio.IntBuffer arg1) {
		org.lwjgl.opengl.GL43.glPointParameteriv(arg0,arg1);
	}

	@Override
	public void glVertexAttribI4uiv(int arg0,int[] arg1) {
		org.lwjgl.opengl.GL43.glVertexAttribI4uiv(arg0,arg1);
	}

	@Override
	public void glVertexAttribI4uiv(int arg0,java.nio.IntBuffer arg1) {
		org.lwjgl.opengl.GL43.glVertexAttribI4uiv(arg0,arg1);
	}

	@Override
	public void nglTexCoord3fv(long arg0) {
		org.lwjgl.opengl.GL43.nglTexCoord3fv(arg0);
	}

	@Override
	public void nglVertexAttrib4usv(int arg0,long arg1) {
		org.lwjgl.opengl.GL43.nglVertexAttrib4usv(arg0,arg1);
	}

	@Override
	public void glRasterPos4dv(double[] arg0) {
		org.lwjgl.opengl.GL43.glRasterPos4dv(arg0);
	}

	@Override
	public void glRasterPos4dv(java.nio.DoubleBuffer arg0) {
		org.lwjgl.opengl.GL43.glRasterPos4dv(arg0);
	}

	@Override
	public void glPushDebugGroup(int arg0,int arg1,java.lang.CharSequence arg2) {
		org.lwjgl.opengl.GL43.glPushDebugGroup(arg0,arg1,arg2);
	}

	@Override
	public void glPushDebugGroup(int arg0,int arg1,java.nio.ByteBuffer arg2) {
		org.lwjgl.opengl.GL43.glPushDebugGroup(arg0,arg1,arg2);
	}

	@Override
	public void glLineWidth(float arg0) {
		org.lwjgl.opengl.GL43.glLineWidth(arg0);
	}

	@Override
	public void nglGetShaderSource(int arg0,int arg1,long arg2,long arg3) {
		org.lwjgl.opengl.GL43.nglGetShaderSource(arg0,arg1,arg2,arg3);
	}

	@Override
	public void glProgramUniform3uiv(int arg0,int arg1,java.nio.IntBuffer arg2) {
		org.lwjgl.opengl.GL43.glProgramUniform3uiv(arg0,arg1,arg2);
	}

	@Override
	public void glProgramUniform3uiv(int arg0,int arg1,int[] arg2) {
		org.lwjgl.opengl.GL43.glProgramUniform3uiv(arg0,arg1,arg2);
	}

	@Override
	public void glVertexAttrib3sv(int arg0,java.nio.ShortBuffer arg1) {
		org.lwjgl.opengl.GL43.glVertexAttrib3sv(arg0,arg1);
	}

	@Override
	public void glVertexAttrib3sv(int arg0,short[] arg1) {
		org.lwjgl.opengl.GL43.glVertexAttrib3sv(arg0,arg1);
	}

	@Override
	public void nglCompressedTexSubImage1D(int arg0,int arg1,int arg2,int arg3,int arg4,int arg5,long arg6) {
		org.lwjgl.opengl.GL43.nglCompressedTexSubImage1D(arg0,arg1,arg2,arg3,arg4,arg5,arg6);
	}

	@Override
	public void nglMultMatrixd(long arg0) {
		org.lwjgl.opengl.GL43.nglMultMatrixd(arg0);
	}

	@Override
	public void nglMultMatrixf(long arg0) {
		org.lwjgl.opengl.GL43.nglMultMatrixf(arg0);
	}

	@Override
	public void nglProgramUniform4fv(int arg0,int arg1,int arg2,long arg3) {
		org.lwjgl.opengl.GL43.nglProgramUniform4fv(arg0,arg1,arg2,arg3);
	}

	@Override
	public void glVertexAttribPointer(int arg0,int arg1,int arg2,boolean arg3,int arg4,java.nio.FloatBuffer arg5) {
		org.lwjgl.opengl.GL43.glVertexAttribPointer(arg0,arg1,arg2,arg3,arg4,arg5);
	}

	@Override
	public void glVertexAttribPointer(int arg0,int arg1,int arg2,boolean arg3,int arg4,long arg5) {
		org.lwjgl.opengl.GL43.glVertexAttribPointer(arg0,arg1,arg2,arg3,arg4,arg5);
	}

	@Override
	public void glVertexAttribPointer(int arg0,int arg1,int arg2,boolean arg3,int arg4,java.nio.IntBuffer arg5) {
		org.lwjgl.opengl.GL43.glVertexAttribPointer(arg0,arg1,arg2,arg3,arg4,arg5);
	}

	@Override
	public void glVertexAttribPointer(int arg0,int arg1,int arg2,boolean arg3,int arg4,java.nio.ShortBuffer arg5) {
		org.lwjgl.opengl.GL43.glVertexAttribPointer(arg0,arg1,arg2,arg3,arg4,arg5);
	}

	@Override
	public void glVertexAttribPointer(int arg0,int arg1,int arg2,boolean arg3,int arg4,java.nio.ByteBuffer arg5) {
		org.lwjgl.opengl.GL43.glVertexAttribPointer(arg0,arg1,arg2,arg3,arg4,arg5);
	}

	@Override
	public void nglTexCoordP3uiv(int arg0,long arg1) {
		org.lwjgl.opengl.GL43.nglTexCoordP3uiv(arg0,arg1);
	}

	@Override
	public void glTexGenfv(int arg0,int arg1,java.nio.FloatBuffer arg2) {
		org.lwjgl.opengl.GL43.glTexGenfv(arg0,arg1,arg2);
	}

	@Override
	public void glTexGenfv(int arg0,int arg1,float[] arg2) {
		org.lwjgl.opengl.GL43.glTexGenfv(arg0,arg1,arg2);
	}

	@Override
	public void glClampColor(int arg0,int arg1) {
		org.lwjgl.opengl.GL43.glClampColor(arg0,arg1);
	}

	@Override
	public void nglCompressedTexSubImage3D(int arg0,int arg1,int arg2,int arg3,int arg4,int arg5,int arg6,int arg7,int arg8,int arg9,long arg10) {
		org.lwjgl.opengl.GL43.nglCompressedTexSubImage3D(arg0,arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10);
	}

	@Override
	public int glGetShaderi(int arg0,int arg1) {
		return org.lwjgl.opengl.GL43.glGetShaderi(arg0,arg1);
	}

	@Override
	public void nglTexCoord3iv(long arg0) {
		org.lwjgl.opengl.GL43.nglTexCoord3iv(arg0);
	}

	@Override
	public void nglCompressedTexSubImage2D(int arg0,int arg1,int arg2,int arg3,int arg4,int arg5,int arg6,int arg7,long arg8) {
		org.lwjgl.opengl.GL43.nglCompressedTexSubImage2D(arg0,arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8);
	}

	@Override
	public void nglGetIntegeri_v(int arg0,int arg1,long arg2) {
		org.lwjgl.opengl.GL43.nglGetIntegeri_v(arg0,arg1,arg2);
	}

	@Override
	public void glUniform4uiv(int arg0,int[] arg1) {
		org.lwjgl.opengl.GL43.glUniform4uiv(arg0,arg1);
	}

	@Override
	public void glUniform4uiv(int arg0,java.nio.IntBuffer arg1) {
		org.lwjgl.opengl.GL43.glUniform4uiv(arg0,arg1);
	}

	@Override
	public float glGetSamplerParameterf(int arg0,int arg1) {
		return org.lwjgl.opengl.GL43.glGetSamplerParameterf(arg0,arg1);
	}

	@Override
	public int glGetSamplerParameteri(int arg0,int arg1) {
		return org.lwjgl.opengl.GL43.glGetSamplerParameteri(arg0,arg1);
	}

	@Override
	public void glNormalP3uiv(int arg0,java.nio.IntBuffer arg1) {
		org.lwjgl.opengl.GL43.glNormalP3uiv(arg0,arg1);
	}

	@Override
	public void glNormalP3uiv(int arg0,int[] arg1) {
		org.lwjgl.opengl.GL43.glNormalP3uiv(arg0,arg1);
	}

	@Override
	public void nglMaterialiv(int arg0,int arg1,long arg2) {
		org.lwjgl.opengl.GL43.nglMaterialiv(arg0,arg1,arg2);
	}

	@Override
	public void glProgramUniform1iv(int arg0,int arg1,java.nio.IntBuffer arg2) {
		org.lwjgl.opengl.GL43.glProgramUniform1iv(arg0,arg1,arg2);
	}

	@Override
	public void glProgramUniform1iv(int arg0,int arg1,int[] arg2) {
		org.lwjgl.opengl.GL43.glProgramUniform1iv(arg0,arg1,arg2);
	}

	@Override
	public void glDrawElements(int arg0,java.nio.IntBuffer arg1) {
		org.lwjgl.opengl.GL43.glDrawElements(arg0,arg1);
	}

	@Override
	public void glDrawElements(int arg0,java.nio.ShortBuffer arg1) {
		org.lwjgl.opengl.GL43.glDrawElements(arg0,arg1);
	}

	@Override
	public void glDrawElements(int arg0,java.nio.ByteBuffer arg1) {
		org.lwjgl.opengl.GL43.glDrawElements(arg0,arg1);
	}

	@Override
	public void glDrawElements(int arg0,int arg1,java.nio.ByteBuffer arg2) {
		org.lwjgl.opengl.GL43.glDrawElements(arg0,arg1,arg2);
	}

	@Override
	public void glDrawElements(int arg0,int arg1,int arg2,long arg3) {
		org.lwjgl.opengl.GL43.glDrawElements(arg0,arg1,arg2,arg3);
	}

	@Override
	public void glEnd() {
		org.lwjgl.opengl.GL43.glEnd();
	}

	@Override
	public void glPointParameterfv(int arg0,java.nio.FloatBuffer arg1) {
		org.lwjgl.opengl.GL43.glPointParameterfv(arg0,arg1);
	}

	@Override
	public void glPointParameterfv(int arg0,float[] arg1) {
		org.lwjgl.opengl.GL43.glPointParameterfv(arg0,arg1);
	}

	@Override
	public void nglMultiTexCoord1iv(int arg0,long arg1) {
		org.lwjgl.opengl.GL43.nglMultiTexCoord1iv(arg0,arg1);
	}

	@Override
	public long glGetQueryObjecti64(int arg0,int arg1) {
		return org.lwjgl.opengl.GL43.glGetQueryObjecti64(arg0,arg1);
	}

	@Override
	public void nglProgramUniform4dv(int arg0,int arg1,int arg2,long arg3) {
		org.lwjgl.opengl.GL43.nglProgramUniform4dv(arg0,arg1,arg2,arg3);
	}

	@Override
	public void glFogiv(int arg0,int[] arg1) {
		org.lwjgl.opengl.GL43.glFogiv(arg0,arg1);
	}

	@Override
	public void glFogiv(int arg0,java.nio.IntBuffer arg1) {
		org.lwjgl.opengl.GL43.glFogiv(arg0,arg1);
	}

	@Override
	public void glBlendFunc(int arg0,int arg1) {
		org.lwjgl.opengl.GL43.glBlendFunc(arg0,arg1);
	}

	@Override
	public void glRecti(int arg0,int arg1,int arg2,int arg3) {
		org.lwjgl.opengl.GL43.glRecti(arg0,arg1,arg2,arg3);
	}

	@Override
	public void glColor3ubv(java.nio.ByteBuffer arg0) {
		org.lwjgl.opengl.GL43.glColor3ubv(arg0);
	}

	@Override
	public void glTexCoord4s(short arg0,short arg1,short arg2,short arg3) {
		org.lwjgl.opengl.GL43.glTexCoord4s(arg0,arg1,arg2,arg3);
	}

	@Override
	public void glUniform3iv(int arg0,java.nio.IntBuffer arg1) {
		org.lwjgl.opengl.GL43.glUniform3iv(arg0,arg1);
	}

	@Override
	public void glUniform3iv(int arg0,int[] arg1) {
		org.lwjgl.opengl.GL43.glUniform3iv(arg0,arg1);
	}

	@Override
	public void nglGetTexParameterfv(int arg0,int arg1,long arg2) {
		org.lwjgl.opengl.GL43.nglGetTexParameterfv(arg0,arg1,arg2);
	}

	@Override
	public void glRects(short arg0,short arg1,short arg2,short arg3) {
		org.lwjgl.opengl.GL43.glRects(arg0,arg1,arg2,arg3);
	}

	@Override
	public void nglBindAttribLocation(int arg0,int arg1,long arg2) {
		org.lwjgl.opengl.GL43.nglBindAttribLocation(arg0,arg1,arg2);
	}

	@Override
	public void nglSecondaryColor3bv(long arg0) {
		org.lwjgl.opengl.GL43.nglSecondaryColor3bv(arg0);
	}

	@Override
	public void glTexCoord4f(float arg0,float arg1,float arg2,float arg3) {
		org.lwjgl.opengl.GL43.glTexCoord4f(arg0,arg1,arg2,arg3);
	}

	@Override
	public void glTexCoord4d(double arg0,double arg1,double arg2,double arg3) {
		org.lwjgl.opengl.GL43.glTexCoord4d(arg0,arg1,arg2,arg3);
	}

	@Override
	public int glGetSamplerParameterIi(int arg0,int arg1) {
		return org.lwjgl.opengl.GL43.glGetSamplerParameterIi(arg0,arg1);
	}

	@Override
	public void glClearBufferSubData(int arg0,int arg1,long arg2,long arg3,int arg4,int arg5,short[] arg6) {
		org.lwjgl.opengl.GL43.glClearBufferSubData(arg0,arg1,arg2,arg3,arg4,arg5,arg6);
	}

	@Override
	public void glClearBufferSubData(int arg0,int arg1,long arg2,long arg3,int arg4,int arg5,int[] arg6) {
		org.lwjgl.opengl.GL43.glClearBufferSubData(arg0,arg1,arg2,arg3,arg4,arg5,arg6);
	}

	@Override
	public void glClearBufferSubData(int arg0,int arg1,long arg2,long arg3,int arg4,int arg5,float[] arg6) {
		org.lwjgl.opengl.GL43.glClearBufferSubData(arg0,arg1,arg2,arg3,arg4,arg5,arg6);
	}

	@Override
	public void glClearBufferSubData(int arg0,int arg1,long arg2,long arg3,int arg4,int arg5,java.nio.FloatBuffer arg6) {
		org.lwjgl.opengl.GL43.glClearBufferSubData(arg0,arg1,arg2,arg3,arg4,arg5,arg6);
	}

	@Override
	public void glClearBufferSubData(int arg0,int arg1,long arg2,long arg3,int arg4,int arg5,java.nio.IntBuffer arg6) {
		org.lwjgl.opengl.GL43.glClearBufferSubData(arg0,arg1,arg2,arg3,arg4,arg5,arg6);
	}

	@Override
	public void glClearBufferSubData(int arg0,int arg1,long arg2,long arg3,int arg4,int arg5,java.nio.ShortBuffer arg6) {
		org.lwjgl.opengl.GL43.glClearBufferSubData(arg0,arg1,arg2,arg3,arg4,arg5,arg6);
	}

	@Override
	public void glClearBufferSubData(int arg0,int arg1,long arg2,long arg3,int arg4,int arg5,java.nio.ByteBuffer arg6) {
		org.lwjgl.opengl.GL43.glClearBufferSubData(arg0,arg1,arg2,arg3,arg4,arg5,arg6);
	}

	@Override
	public void glTexGeniv(int arg0,int arg1,java.nio.IntBuffer arg2) {
		org.lwjgl.opengl.GL43.glTexGeniv(arg0,arg1,arg2);
	}

	@Override
	public void glTexGeniv(int arg0,int arg1,int[] arg2) {
		org.lwjgl.opengl.GL43.glTexGeniv(arg0,arg1,arg2);
	}

	@Override
	public void glRectfv(java.nio.FloatBuffer arg0,java.nio.FloatBuffer arg1) {
		org.lwjgl.opengl.GL43.glRectfv(arg0,arg1);
	}

	@Override
	public void glRectfv(float[] arg0,float[] arg1) {
		org.lwjgl.opengl.GL43.glRectfv(arg0,arg1);
	}

	@Override
	public void glBindSampler(int arg0,int arg1) {
		org.lwjgl.opengl.GL43.glBindSampler(arg0,arg1);
	}

	@Override
	public void nglGetVertexAttribdv(int arg0,int arg1,long arg2) {
		org.lwjgl.opengl.GL43.nglGetVertexAttribdv(arg0,arg1,arg2);
	}

	@Override
	public void glTexCoord4i(int arg0,int arg1,int arg2,int arg3) {
		org.lwjgl.opengl.GL43.glTexCoord4i(arg0,arg1,arg2,arg3);
	}

	@Override
	public void glProvokingVertex(int arg0) {
		org.lwjgl.opengl.GL43.glProvokingVertex(arg0);
	}

	@Override
	public void glDeleteProgram(int arg0) {
		org.lwjgl.opengl.GL43.glDeleteProgram(arg0);
	}

	@Override
	public void glMaterialfv(int arg0,int arg1,java.nio.FloatBuffer arg2) {
		org.lwjgl.opengl.GL43.glMaterialfv(arg0,arg1,arg2);
	}

	@Override
	public void glMaterialfv(int arg0,int arg1,float[] arg2) {
		org.lwjgl.opengl.GL43.glMaterialfv(arg0,arg1,arg2);
	}

	@Override
	public void nglColorP4uiv(int arg0,long arg1) {
		org.lwjgl.opengl.GL43.nglColorP4uiv(arg0,arg1);
	}

	@Override
	public void glRasterPos4iv(java.nio.IntBuffer arg0) {
		org.lwjgl.opengl.GL43.glRasterPos4iv(arg0);
	}

	@Override
	public void glRasterPos4iv(int[] arg0) {
		org.lwjgl.opengl.GL43.glRasterPos4iv(arg0);
	}

	@Override
	public void glGetIntegerv(int arg0,java.nio.IntBuffer arg1) {
		org.lwjgl.opengl.GL43.glGetIntegerv(arg0,arg1);
	}

	@Override
	public void glGetIntegerv(int arg0,int[] arg1) {
		org.lwjgl.opengl.GL43.glGetIntegerv(arg0,arg1);
	}

	@Override
	public void glOrtho(double arg0,double arg1,double arg2,double arg3,double arg4,double arg5) {
		org.lwjgl.opengl.GL43.glOrtho(arg0,arg1,arg2,arg3,arg4,arg5);
	}

	@Override
	public void glPixelMapuiv(int arg0,int[] arg1) {
		org.lwjgl.opengl.GL43.glPixelMapuiv(arg0,arg1);
	}

	@Override
	public void glPixelMapuiv(int arg0,java.nio.IntBuffer arg1) {
		org.lwjgl.opengl.GL43.glPixelMapuiv(arg0,arg1);
	}

	@Override
	public void glPixelMapuiv(int arg0,int arg1,long arg2) {
		org.lwjgl.opengl.GL43.glPixelMapuiv(arg0,arg1,arg2);
	}

	@Override
	public void glRectd(double arg0,double arg1,double arg2,double arg3) {
		org.lwjgl.opengl.GL43.glRectd(arg0,arg1,arg2,arg3);
	}

	@Override
	public void glRectf(float arg0,float arg1,float arg2,float arg3) {
		org.lwjgl.opengl.GL43.glRectf(arg0,arg1,arg2,arg3);
	}

	@Override
	public void glVertexAttribP3uiv(int arg0,int arg1,boolean arg2,int[] arg3) {
		org.lwjgl.opengl.GL43.glVertexAttribP3uiv(arg0,arg1,arg2,arg3);
	}

	@Override
	public void glVertexAttribP3uiv(int arg0,int arg1,boolean arg2,java.nio.IntBuffer arg3) {
		org.lwjgl.opengl.GL43.glVertexAttribP3uiv(arg0,arg1,arg2,arg3);
	}

	@Override
	public void glEnableClientState(int arg0) {
		org.lwjgl.opengl.GL43.glEnableClientState(arg0);
	}

	@Override
	public void glTexCoord4sv(short[] arg0) {
		org.lwjgl.opengl.GL43.glTexCoord4sv(arg0);
	}

	@Override
	public void glTexCoord4sv(java.nio.ShortBuffer arg0) {
		org.lwjgl.opengl.GL43.glTexCoord4sv(arg0);
	}

	@Override
	public void nglSecondaryColor3dv(long arg0) {
		org.lwjgl.opengl.GL43.nglSecondaryColor3dv(arg0);
	}

	@Override
	public void nglMaterialfv(int arg0,int arg1,long arg2) {
		org.lwjgl.opengl.GL43.nglMaterialfv(arg0,arg1,arg2);
	}

	@Override
	public int glGetFragDataLocation(int arg0,java.nio.ByteBuffer arg1) {
		return org.lwjgl.opengl.GL43.glGetFragDataLocation(arg0,arg1);
	}

	@Override
	public int glGetFragDataLocation(int arg0,java.lang.CharSequence arg1) {
		return org.lwjgl.opengl.GL43.glGetFragDataLocation(arg0,arg1);
	}

	@Override
	public void nglTexCoord3dv(long arg0) {
		org.lwjgl.opengl.GL43.nglTexCoord3dv(arg0);
	}

	@Override
	public void nglGetFramebufferParameteriv(int arg0,int arg1,long arg2) {
		org.lwjgl.opengl.GL43.nglGetFramebufferParameteriv(arg0,arg1,arg2);
	}

	@Override
	public boolean glAreTexturesResident_boolean(int[] arg0,java.nio.ByteBuffer arg1) {
		return org.lwjgl.opengl.GL43.glAreTexturesResident(arg0,arg1);
	}

	@Override
	public boolean glAreTexturesResident_boolean(java.nio.IntBuffer arg0,java.nio.ByteBuffer arg1) {
		return org.lwjgl.opengl.GL43.glAreTexturesResident(arg0,arg1);
	}

	@Override
	public boolean glAreTexturesResident_boolean(int arg0,java.nio.ByteBuffer arg1) {
		return org.lwjgl.opengl.GL43.glAreTexturesResident(arg0,arg1);
	}

	@Override
	public void nglGetInteger64i_v(int arg0,int arg1,long arg2) {
		org.lwjgl.opengl.GL43.nglGetInteger64i_v(arg0,arg1,arg2);
	}

	@Override
	public void glRasterPos4fv(java.nio.FloatBuffer arg0) {
		org.lwjgl.opengl.GL43.glRasterPos4fv(arg0);
	}

	@Override
	public void glRasterPos4fv(float[] arg0) {
		org.lwjgl.opengl.GL43.glRasterPos4fv(arg0);
	}

	@Override
	public void glFogfv(int arg0,java.nio.FloatBuffer arg1) {
		org.lwjgl.opengl.GL43.glFogfv(arg0,arg1);
	}

	@Override
	public void glFogfv(int arg0,float[] arg1) {
		org.lwjgl.opengl.GL43.glFogfv(arg0,arg1);
	}

	@Override
	public void glDrawTransformFeedbackInstanced(int arg0,int arg1,int arg2) {
		org.lwjgl.opengl.GL43.glDrawTransformFeedbackInstanced(arg0,arg1,arg2);
	}

	@Override
	public void glReleaseShaderCompiler() {
		org.lwjgl.opengl.GL43.glReleaseShaderCompiler();
	}

	@Override
	public void glPushName(int arg0) {
		org.lwjgl.opengl.GL43.glPushName(arg0);
	}

	@Override
	public void nglLoadMatrixf(long arg0) {
		org.lwjgl.opengl.GL43.nglLoadMatrixf(arg0);
	}

	@Override
	public int glGetIntegeri(int arg0,int arg1) {
		return org.lwjgl.opengl.GL43.glGetIntegeri(arg0,arg1);
	}

	@Override
	public void nglLoadMatrixd(long arg0) {
		org.lwjgl.opengl.GL43.nglLoadMatrixd(arg0);
	}

	@Override
	public void glRectdv(java.nio.DoubleBuffer arg0,java.nio.DoubleBuffer arg1) {
		org.lwjgl.opengl.GL43.glRectdv(arg0,arg1);
	}

	@Override
	public void glRectdv(double[] arg0,double[] arg1) {
		org.lwjgl.opengl.GL43.glRectdv(arg0,arg1);
	}

	@Override
	public void nglGetTexParameterIiv(int arg0,int arg1,long arg2) {
		org.lwjgl.opengl.GL43.nglGetTexParameterIiv(arg0,arg1,arg2);
	}

	@Override
	public void nglGetVertexAttribfv(int arg0,int arg1,long arg2) {
		org.lwjgl.opengl.GL43.nglGetVertexAttribfv(arg0,arg1,arg2);
	}

	@Override
	public void glTexParameterfv(int arg0,int arg1,java.nio.FloatBuffer arg2) {
		org.lwjgl.opengl.GL43.glTexParameterfv(arg0,arg1,arg2);
	}

	@Override
	public void glTexParameterfv(int arg0,int arg1,float[] arg2) {
		org.lwjgl.opengl.GL43.glTexParameterfv(arg0,arg1,arg2);
	}

	@Override
	public void glUniformBlockBinding(int arg0,int arg1,int arg2) {
		org.lwjgl.opengl.GL43.glUniformBlockBinding(arg0,arg1,arg2);
	}

	@Override
	public void nglGetSamplerParameteriv(int arg0,int arg1,long arg2) {
		org.lwjgl.opengl.GL43.nglGetSamplerParameteriv(arg0,arg1,arg2);
	}

	@Override
	public void nglVertexAttribP2uiv(int arg0,int arg1,boolean arg2,long arg3) {
		org.lwjgl.opengl.GL43.nglVertexAttribP2uiv(arg0,arg1,arg2,arg3);
	}

	@Override
	public int glCheckFramebufferStatus(int arg0) {
		return org.lwjgl.opengl.GL43.glCheckFramebufferStatus(arg0);
	}

	@Override
	public void glGetLightiv(int arg0,int arg1,java.nio.IntBuffer arg2) {
		org.lwjgl.opengl.GL43.glGetLightiv(arg0,arg1,arg2);
	}

	@Override
	public void glGetLightiv(int arg0,int arg1,int[] arg2) {
		org.lwjgl.opengl.GL43.glGetLightiv(arg0,arg1,arg2);
	}

	@Override
	public void glLoadIdentity() {
		org.lwjgl.opengl.GL43.glLoadIdentity();
	}

	@Override
	public void glGetActiveUniformName(int arg0,int arg1,int[] arg2,java.nio.ByteBuffer arg3) {
		org.lwjgl.opengl.GL43.glGetActiveUniformName(arg0,arg1,arg2,arg3);
	}

	@Override
	public void glGetActiveUniformName(int arg0,int arg1,java.nio.IntBuffer arg2,java.nio.ByteBuffer arg3) {
		org.lwjgl.opengl.GL43.glGetActiveUniformName(arg0,arg1,arg2,arg3);
	}

	@Override
	public java.lang.String glGetActiveUniformName_String(int arg0,int arg1,int arg2) {
		return org.lwjgl.opengl.GL43.glGetActiveUniformName(arg0,arg1,arg2);
	}

	@Override
	public java.lang.String glGetActiveUniformName_String(int arg0,int arg1) {
		return org.lwjgl.opengl.GL43.glGetActiveUniformName(arg0,arg1);
	}

	@Override
	public void glDrawElementsInstanced(int arg0,java.nio.ByteBuffer arg1,int arg2) {
		org.lwjgl.opengl.GL43.glDrawElementsInstanced(arg0,arg1,arg2);
	}

	@Override
	public void glDrawElementsInstanced(int arg0,java.nio.IntBuffer arg1,int arg2) {
		org.lwjgl.opengl.GL43.glDrawElementsInstanced(arg0,arg1,arg2);
	}

	@Override
	public void glDrawElementsInstanced(int arg0,java.nio.ShortBuffer arg1,int arg2) {
		org.lwjgl.opengl.GL43.glDrawElementsInstanced(arg0,arg1,arg2);
	}

	@Override
	public void glDrawElementsInstanced(int arg0,int arg1,int arg2,long arg3,int arg4) {
		org.lwjgl.opengl.GL43.glDrawElementsInstanced(arg0,arg1,arg2,arg3,arg4);
	}

	@Override
	public void glDrawElementsInstanced(int arg0,int arg1,java.nio.ByteBuffer arg2,int arg3) {
		org.lwjgl.opengl.GL43.glDrawElementsInstanced(arg0,arg1,arg2,arg3);
	}

	@Override
	public void glMultiTexCoord2f(int arg0,float arg1,float arg2) {
		org.lwjgl.opengl.GL43.glMultiTexCoord2f(arg0,arg1,arg2);
	}

	@Override
	public void glResumeTransformFeedback() {
		org.lwjgl.opengl.GL43.glResumeTransformFeedback();
	}

	@Override
	public void glMultiTexCoord2d(int arg0,double arg1,double arg2) {
		org.lwjgl.opengl.GL43.glMultiTexCoord2d(arg0,arg1,arg2);
	}

	@Override
	public void glEdgeFlagv(java.nio.ByteBuffer arg0) {
		org.lwjgl.opengl.GL43.glEdgeFlagv(arg0);
	}

	@Override
	public void glMultiTexCoord2i(int arg0,int arg1,int arg2) {
		org.lwjgl.opengl.GL43.glMultiTexCoord2i(arg0,arg1,arg2);
	}

	@Override
	public void nglColor3ubv(long arg0) {
		org.lwjgl.opengl.GL43.nglColor3ubv(arg0);
	}

	@Override
	public void glMaterialiv(int arg0,int arg1,int[] arg2) {
		org.lwjgl.opengl.GL43.glMaterialiv(arg0,arg1,arg2);
	}

	@Override
	public void glMaterialiv(int arg0,int arg1,java.nio.IntBuffer arg2) {
		org.lwjgl.opengl.GL43.glMaterialiv(arg0,arg1,arg2);
	}

	@Override
	public void glTexCoord4iv(int[] arg0) {
		org.lwjgl.opengl.GL43.glTexCoord4iv(arg0);
	}

	@Override
	public void glTexCoord4iv(java.nio.IntBuffer arg0) {
		org.lwjgl.opengl.GL43.glTexCoord4iv(arg0);
	}

	@Override
	public void glVertexAttribP3ui(int arg0,int arg1,boolean arg2,int arg3) {
		org.lwjgl.opengl.GL43.glVertexAttribP3ui(arg0,arg1,arg2,arg3);
	}

	@Override
	public void nglVertexAttribI2iv(int arg0,long arg1) {
		org.lwjgl.opengl.GL43.nglVertexAttribI2iv(arg0,arg1);
	}

	@Override
	public void glVertexAttribI3iv(int arg0,java.nio.IntBuffer arg1) {
		org.lwjgl.opengl.GL43.glVertexAttribI3iv(arg0,arg1);
	}

	@Override
	public void glVertexAttribI3iv(int arg0,int[] arg1) {
		org.lwjgl.opengl.GL43.glVertexAttribI3iv(arg0,arg1);
	}

	@Override
	public void glColor4fv(java.nio.FloatBuffer arg0) {
		org.lwjgl.opengl.GL43.glColor4fv(arg0);
	}

	@Override
	public void glColor4fv(float[] arg0) {
		org.lwjgl.opengl.GL43.glColor4fv(arg0);
	}

	@Override
	public void glMapGrid2d(int arg0,double arg1,double arg2,int arg3,double arg4,double arg5) {
		org.lwjgl.opengl.GL43.glMapGrid2d(arg0,arg1,arg2,arg3,arg4,arg5);
	}

	@Override
	public void glMapGrid2f(int arg0,float arg1,float arg2,int arg3,float arg4,float arg5) {
		org.lwjgl.opengl.GL43.glMapGrid2f(arg0,arg1,arg2,arg3,arg4,arg5);
	}

	@Override
	public void glUniformMatrix4x3dv(int arg0,boolean arg1,double[] arg2) {
		org.lwjgl.opengl.GL43.glUniformMatrix4x3dv(arg0,arg1,arg2);
	}

	@Override
	public void glUniformMatrix4x3dv(int arg0,boolean arg1,java.nio.DoubleBuffer arg2) {
		org.lwjgl.opengl.GL43.glUniformMatrix4x3dv(arg0,arg1,arg2);
	}

	@Override
	public void glBindFramebuffer(int arg0,int arg1) {
		org.lwjgl.opengl.GL43.glBindFramebuffer(arg0,arg1);
	}

	@Override
	public void glMultiTexCoord1s(int arg0,short arg1) {
		org.lwjgl.opengl.GL43.glMultiTexCoord1s(arg0,arg1);
	}

	@Override
	public void glDeleteQueries(int arg0) {
		org.lwjgl.opengl.GL43.glDeleteQueries(arg0);
	}

	@Override
	public void glDeleteQueries(java.nio.IntBuffer arg0) {
		org.lwjgl.opengl.GL43.glDeleteQueries(arg0);
	}

	@Override
	public void glDeleteQueries(int[] arg0) {
		org.lwjgl.opengl.GL43.glDeleteQueries(arg0);
	}

	@Override
	public void nglVertexAttrib3dv(int arg0,long arg1) {
		org.lwjgl.opengl.GL43.nglVertexAttrib3dv(arg0,arg1);
	}

	@Override
	public void nglGetQueryiv(int arg0,int arg1,long arg2) {
		org.lwjgl.opengl.GL43.nglGetQueryiv(arg0,arg1,arg2);
	}

	@Override
	public void glGetUniformiv(int arg0,int arg1,int[] arg2) {
		org.lwjgl.opengl.GL43.glGetUniformiv(arg0,arg1,arg2);
	}

	@Override
	public void glGetUniformiv(int arg0,int arg1,java.nio.IntBuffer arg2) {
		org.lwjgl.opengl.GL43.glGetUniformiv(arg0,arg1,arg2);
	}

	@Override
	public void glGetTexGenfv(int arg0,int arg1,float[] arg2) {
		org.lwjgl.opengl.GL43.glGetTexGenfv(arg0,arg1,arg2);
	}

	@Override
	public void glGetTexGenfv(int arg0,int arg1,java.nio.FloatBuffer arg2) {
		org.lwjgl.opengl.GL43.glGetTexGenfv(arg0,arg1,arg2);
	}

	@Override
	public void glTexCoord1s(short arg0) {
		org.lwjgl.opengl.GL43.glTexCoord1s(arg0);
	}

	@Override
	public boolean glIsShader(int arg0) {
		return org.lwjgl.opengl.GL43.glIsShader(arg0);
	}

	@Override
	public void glBitmap(int arg0,int arg1,float arg2,float arg3,float arg4,float arg5,java.nio.ByteBuffer arg6) {
		org.lwjgl.opengl.GL43.glBitmap(arg0,arg1,arg2,arg3,arg4,arg5,arg6);
	}

	@Override
	public void glBitmap(int arg0,int arg1,float arg2,float arg3,float arg4,float arg5,long arg6) {
		org.lwjgl.opengl.GL43.glBitmap(arg0,arg1,arg2,arg3,arg4,arg5,arg6);
	}

	@Override
	public void glMultiTexCoord1f(int arg0,float arg1) {
		org.lwjgl.opengl.GL43.glMultiTexCoord1f(arg0,arg1);
	}

	@Override
	public void glBlendFunci(int arg0,int arg1,int arg2) {
		org.lwjgl.opengl.GL43.glBlendFunci(arg0,arg1,arg2);
	}

	@Override
	public void glMultiTexCoord1d(int arg0,double arg1) {
		org.lwjgl.opengl.GL43.glMultiTexCoord1d(arg0,arg1);
	}

	@Override
	public void nglVertexP2uiv(int arg0,long arg1) {
		org.lwjgl.opengl.GL43.nglVertexP2uiv(arg0,arg1);
	}

	@Override
	public void glMultiTexCoord1i(int arg0,int arg1) {
		org.lwjgl.opengl.GL43.glMultiTexCoord1i(arg0,arg1);
	}

	@Override
	public void nglGetTexParameteriv(int arg0,int arg1,long arg2) {
		org.lwjgl.opengl.GL43.nglGetTexParameteriv(arg0,arg1,arg2);
	}

	@Override
	public void glUniform3dv(int arg0,double[] arg1) {
		org.lwjgl.opengl.GL43.glUniform3dv(arg0,arg1);
	}

	@Override
	public void glUniform3dv(int arg0,java.nio.DoubleBuffer arg1) {
		org.lwjgl.opengl.GL43.glUniform3dv(arg0,arg1);
	}

	@Override
	public java.lang.String glGetShaderInfoLog_String(int arg0) {
		return org.lwjgl.opengl.GL43.glGetShaderInfoLog(arg0);
	}

	@Override
	public void glGetShaderInfoLog(int arg0,java.nio.IntBuffer arg1,java.nio.ByteBuffer arg2) {
		org.lwjgl.opengl.GL43.glGetShaderInfoLog(arg0,arg1,arg2);
	}

	@Override
	public void glGetShaderInfoLog(int arg0,int[] arg1,java.nio.ByteBuffer arg2) {
		org.lwjgl.opengl.GL43.glGetShaderInfoLog(arg0,arg1,arg2);
	}

	@Override
	public java.lang.String glGetShaderInfoLog_String(int arg0,int arg1) {
		return org.lwjgl.opengl.GL43.glGetShaderInfoLog(arg0,arg1);
	}

	@Override
	public void glTexCoord1d(double arg0) {
		org.lwjgl.opengl.GL43.glTexCoord1d(arg0);
	}

	@Override
	public void glVertexAttribI4usv(int arg0,short[] arg1) {
		org.lwjgl.opengl.GL43.glVertexAttribI4usv(arg0,arg1);
	}

	@Override
	public void glVertexAttribI4usv(int arg0,java.nio.ShortBuffer arg1) {
		org.lwjgl.opengl.GL43.glVertexAttribI4usv(arg0,arg1);
	}

	@Override
	public void glRectiv(java.nio.IntBuffer arg0,java.nio.IntBuffer arg1) {
		org.lwjgl.opengl.GL43.glRectiv(arg0,arg1);
	}

	@Override
	public void glRectiv(int[] arg0,int[] arg1) {
		org.lwjgl.opengl.GL43.glRectiv(arg0,arg1);
	}

	@Override
	public void nglRectsv(long arg0,long arg1) {
		org.lwjgl.opengl.GL43.nglRectsv(arg0,arg1);
	}

	@Override
	public void glClearAccum(float arg0,float arg1,float arg2,float arg3) {
		org.lwjgl.opengl.GL43.glClearAccum(arg0,arg1,arg2,arg3);
	}

	@Override
	public void glTexCoord1i(int arg0) {
		org.lwjgl.opengl.GL43.glTexCoord1i(arg0);
	}

	@Override
	public void glTexCoord1f(float arg0) {
		org.lwjgl.opengl.GL43.glTexCoord1f(arg0);
	}

	@Override
	public void glGetInternalformati64v(int arg0,int arg1,int arg2,java.nio.LongBuffer arg3) {
		org.lwjgl.opengl.GL43.glGetInternalformati64v(arg0,arg1,arg2,arg3);
	}

	@Override
	public void glGetInternalformati64v(int arg0,int arg1,int arg2,long[] arg3) {
		org.lwjgl.opengl.GL43.glGetInternalformati64v(arg0,arg1,arg2,arg3);
	}

	@Override
	public void glColor4dv(double[] arg0) {
		org.lwjgl.opengl.GL43.glColor4dv(arg0);
	}

	@Override
	public void glColor4dv(java.nio.DoubleBuffer arg0) {
		org.lwjgl.opengl.GL43.glColor4dv(arg0);
	}

	@Override
	public void nglVertexPointer(int arg0,int arg1,int arg2,long arg3) {
		org.lwjgl.opengl.GL43.nglVertexPointer(arg0,arg1,arg2,arg3);
	}

	@Override
	public void glFramebufferTexture(int arg0,int arg1,int arg2,int arg3) {
		org.lwjgl.opengl.GL43.glFramebufferTexture(arg0,arg1,arg2,arg3);
	}

	@Override
	public void glTexCoord2s(short arg0,short arg1) {
		org.lwjgl.opengl.GL43.glTexCoord2s(arg0,arg1);
	}

	@Override
	public void nglGetSamplerParameterfv(int arg0,int arg1,long arg2) {
		org.lwjgl.opengl.GL43.nglGetSamplerParameterfv(arg0,arg1,arg2);
	}

	@Override
	public void glSecondaryColor3uiv(int[] arg0) {
		org.lwjgl.opengl.GL43.glSecondaryColor3uiv(arg0);
	}

	@Override
	public void glSecondaryColor3uiv(java.nio.IntBuffer arg0) {
		org.lwjgl.opengl.GL43.glSecondaryColor3uiv(arg0);
	}

	@Override
	public void glDepthFunc(int arg0) {
		org.lwjgl.opengl.GL43.glDepthFunc(arg0);
	}

	@Override
	public void glGetLightfv(int arg0,int arg1,java.nio.FloatBuffer arg2) {
		org.lwjgl.opengl.GL43.glGetLightfv(arg0,arg1,arg2);
	}

	@Override
	public void glGetLightfv(int arg0,int arg1,float[] arg2) {
		org.lwjgl.opengl.GL43.glGetLightfv(arg0,arg1,arg2);
	}

	@Override
	public void glIndexiv(java.nio.IntBuffer arg0) {
		org.lwjgl.opengl.GL43.glIndexiv(arg0);
	}

	@Override
	public void glIndexiv(int[] arg0) {
		org.lwjgl.opengl.GL43.glIndexiv(arg0);
	}

	@Override
	public void glUniformMatrix4x3fv(int arg0,boolean arg1,java.nio.FloatBuffer arg2) {
		org.lwjgl.opengl.GL43.glUniformMatrix4x3fv(arg0,arg1,arg2);
	}

	@Override
	public void glUniformMatrix4x3fv(int arg0,boolean arg1,float[] arg2) {
		org.lwjgl.opengl.GL43.glUniformMatrix4x3fv(arg0,arg1,arg2);
	}

	@Override
	public void glGetTexGeniv(int arg0,int arg1,java.nio.IntBuffer arg2) {
		org.lwjgl.opengl.GL43.glGetTexGeniv(arg0,arg1,arg2);
	}

	@Override
	public void glGetTexGeniv(int arg0,int arg1,int[] arg2) {
		org.lwjgl.opengl.GL43.glGetTexGeniv(arg0,arg1,arg2);
	}

	@Override
	public void glTexCoord2f(float arg0,float arg1) {
		org.lwjgl.opengl.GL43.glTexCoord2f(arg0,arg1);
	}

	@Override
	public void nglGetUniformIndices(int arg0,int arg1,long arg2,long arg3) {
		org.lwjgl.opengl.GL43.nglGetUniformIndices(arg0,arg1,arg2,arg3);
	}

	@Override
	public void glTexCoord2d(double arg0,double arg1) {
		org.lwjgl.opengl.GL43.glTexCoord2d(arg0,arg1);
	}

	@Override
	public void glTexCoord2i(int arg0,int arg1) {
		org.lwjgl.opengl.GL43.glTexCoord2i(arg0,arg1);
	}

	@Override
	public void nglVertexAttrib4uiv(int arg0,long arg1) {
		org.lwjgl.opengl.GL43.nglVertexAttrib4uiv(arg0,arg1);
	}

	@Override
	public void glVertexBindingDivisor(int arg0,int arg1) {
		org.lwjgl.opengl.GL43.glVertexBindingDivisor(arg0,arg1);
	}

	@Override
	public void glTexCoord3s(short arg0,short arg1,short arg2) {
		org.lwjgl.opengl.GL43.glTexCoord3s(arg0,arg1,arg2);
	}

	@Override
	public void glUniform3fv(int arg0,java.nio.FloatBuffer arg1) {
		org.lwjgl.opengl.GL43.glUniform3fv(arg0,arg1);
	}

	@Override
	public void glUniform3fv(int arg0,float[] arg1) {
		org.lwjgl.opengl.GL43.glUniform3fv(arg0,arg1);
	}

	@Override
	public void nglGetBufferSubData(int arg0,long arg1,long arg2,long arg3) {
		org.lwjgl.opengl.GL43.nglGetBufferSubData(arg0,arg1,arg2,arg3);
	}

	@Override
	public void glMapGrid1d(int arg0,double arg1,double arg2) {
		org.lwjgl.opengl.GL43.glMapGrid1d(arg0,arg1,arg2);
	}

	@Override
	public void glTexCoord3f(float arg0,float arg1,float arg2) {
		org.lwjgl.opengl.GL43.glTexCoord3f(arg0,arg1,arg2);
	}

	@Override
	public void glMapGrid1f(int arg0,float arg1,float arg2) {
		org.lwjgl.opengl.GL43.glMapGrid1f(arg0,arg1,arg2);
	}

	@Override
	public void glTexCoord3d(double arg0,double arg1,double arg2) {
		org.lwjgl.opengl.GL43.glTexCoord3d(arg0,arg1,arg2);
	}

	@Override
	public void glTexCoord4fv(java.nio.FloatBuffer arg0) {
		org.lwjgl.opengl.GL43.glTexCoord4fv(arg0);
	}

	@Override
	public void glTexCoord4fv(float[] arg0) {
		org.lwjgl.opengl.GL43.glTexCoord4fv(arg0);
	}

	@Override
	public void glGenTransformFeedbacks(java.nio.IntBuffer arg0) {
		org.lwjgl.opengl.GL43.glGenTransformFeedbacks(arg0);
	}

	@Override
	public void glGenTransformFeedbacks(int[] arg0) {
		org.lwjgl.opengl.GL43.glGenTransformFeedbacks(arg0);
	}

	@Override
	public int glGenTransformFeedbacks() {
		return org.lwjgl.opengl.GL43.glGenTransformFeedbacks();
	}

	@Override
	public void glMultiTexCoordP1uiv(int arg0,int arg1,int[] arg2) {
		org.lwjgl.opengl.GL43.glMultiTexCoordP1uiv(arg0,arg1,arg2);
	}

	@Override
	public void glMultiTexCoordP1uiv(int arg0,int arg1,java.nio.IntBuffer arg2) {
		org.lwjgl.opengl.GL43.glMultiTexCoordP1uiv(arg0,arg1,arg2);
	}

	@Override
	public void nglWindowPos2sv(long arg0) {
		org.lwjgl.opengl.GL43.nglWindowPos2sv(arg0);
	}

	@Override
	public void glTexCoord3i(int arg0,int arg1,int arg2) {
		org.lwjgl.opengl.GL43.glTexCoord3i(arg0,arg1,arg2);
	}

	@Override
	public void glVertexAttrib3fv(int arg0,float[] arg1) {
		org.lwjgl.opengl.GL43.glVertexAttrib3fv(arg0,arg1);
	}

	@Override
	public void glVertexAttrib3fv(int arg0,java.nio.FloatBuffer arg1) {
		org.lwjgl.opengl.GL43.glVertexAttrib3fv(arg0,arg1);
	}

	@Override
	public void glStencilMask(int arg0) {
		org.lwjgl.opengl.GL43.glStencilMask(arg0);
	}

	@Override
	public void glCopyTexImage1D(int arg0,int arg1,int arg2,int arg3,int arg4,int arg5,int arg6) {
		org.lwjgl.opengl.GL43.glCopyTexImage1D(arg0,arg1,arg2,arg3,arg4,arg5,arg6);
	}

	@Override
	public void nglUniform3uiv(int arg0,int arg1,long arg2) {
		org.lwjgl.opengl.GL43.nglUniform3uiv(arg0,arg1,arg2);
	}

	@Override
	public void glColor4bv(java.nio.ByteBuffer arg0) {
		org.lwjgl.opengl.GL43.glColor4bv(arg0);
	}

	@Override
	public int glGetInteger(int arg0) {
		return org.lwjgl.opengl.GL43.glGetInteger(arg0);
	}

	@Override
	public void glGetUniformdv(int arg0,int arg1,double[] arg2) {
		org.lwjgl.opengl.GL43.glGetUniformdv(arg0,arg1,arg2);
	}

	@Override
	public void glGetUniformdv(int arg0,int arg1,java.nio.DoubleBuffer arg2) {
		org.lwjgl.opengl.GL43.glGetUniformdv(arg0,arg1,arg2);
	}

	@Override
	public void glGetVertexAttribPointerv(int arg0,int arg1,org.lwjgl.PointerBuffer arg2) {
		org.lwjgl.opengl.GL43.glGetVertexAttribPointerv(arg0,arg1,arg2);
	}

	@Override
	public void glBlendEquationSeparate(int arg0,int arg1) {
		org.lwjgl.opengl.GL43.glBlendEquationSeparate(arg0,arg1);
	}

	@Override
	public void glViewportIndexedf(int arg0,float arg1,float arg2,float arg3,float arg4) {
		org.lwjgl.opengl.GL43.glViewportIndexedf(arg0,arg1,arg2,arg3,arg4);
	}

	@Override
	public void glPauseTransformFeedback() {
		org.lwjgl.opengl.GL43.glPauseTransformFeedback();
	}

	@Override
	public void glGetUniformuiv(int arg0,int arg1,int[] arg2) {
		org.lwjgl.opengl.GL43.glGetUniformuiv(arg0,arg1,arg2);
	}

	@Override
	public void glGetUniformuiv(int arg0,int arg1,java.nio.IntBuffer arg2) {
		org.lwjgl.opengl.GL43.glGetUniformuiv(arg0,arg1,arg2);
	}

	@Override
	public void glMultiTexCoord1sv(int arg0,short[] arg1) {
		org.lwjgl.opengl.GL43.glMultiTexCoord1sv(arg0,arg1);
	}

	@Override
	public void glMultiTexCoord1sv(int arg0,java.nio.ShortBuffer arg1) {
		org.lwjgl.opengl.GL43.glMultiTexCoord1sv(arg0,arg1);
	}

	@Override
	public void glMultiTexCoordP1ui(int arg0,int arg1,int arg2) {
		org.lwjgl.opengl.GL43.glMultiTexCoordP1ui(arg0,arg1,arg2);
	}

	@Override
	public void glSecondaryColor3ubv(java.nio.ByteBuffer arg0) {
		org.lwjgl.opengl.GL43.glSecondaryColor3ubv(arg0);
	}

	@Override
	public void glCopyTexImage2D(int arg0,int arg1,int arg2,int arg3,int arg4,int arg5,int arg6,int arg7) {
		org.lwjgl.opengl.GL43.glCopyTexImage2D(arg0,arg1,arg2,arg3,arg4,arg5,arg6,arg7);
	}

	@Override
	public void glProgramUniformMatrix4x3fv(int arg0,int arg1,boolean arg2,float[] arg3) {
		org.lwjgl.opengl.GL43.glProgramUniformMatrix4x3fv(arg0,arg1,arg2,arg3);
	}

	@Override
	public void glProgramUniformMatrix4x3fv(int arg0,int arg1,boolean arg2,java.nio.FloatBuffer arg3) {
		org.lwjgl.opengl.GL43.glProgramUniformMatrix4x3fv(arg0,arg1,arg2,arg3);
	}

	@Override
	public void glGetBufferSubData(int arg0,long arg1,float[] arg2) {
		org.lwjgl.opengl.GL43.glGetBufferSubData(arg0,arg1,arg2);
	}

	@Override
	public void glGetBufferSubData(int arg0,long arg1,int[] arg2) {
		org.lwjgl.opengl.GL43.glGetBufferSubData(arg0,arg1,arg2);
	}

	@Override
	public void glGetBufferSubData(int arg0,long arg1,double[] arg2) {
		org.lwjgl.opengl.GL43.glGetBufferSubData(arg0,arg1,arg2);
	}

	@Override
	public void glGetBufferSubData(int arg0,long arg1,long[] arg2) {
		org.lwjgl.opengl.GL43.glGetBufferSubData(arg0,arg1,arg2);
	}

	@Override
	public void glGetBufferSubData(int arg0,long arg1,short[] arg2) {
		org.lwjgl.opengl.GL43.glGetBufferSubData(arg0,arg1,arg2);
	}

	@Override
	public void glGetBufferSubData(int arg0,long arg1,java.nio.ShortBuffer arg2) {
		org.lwjgl.opengl.GL43.glGetBufferSubData(arg0,arg1,arg2);
	}

	@Override
	public void glGetBufferSubData(int arg0,long arg1,java.nio.IntBuffer arg2) {
		org.lwjgl.opengl.GL43.glGetBufferSubData(arg0,arg1,arg2);
	}

	@Override
	public void glGetBufferSubData(int arg0,long arg1,java.nio.ByteBuffer arg2) {
		org.lwjgl.opengl.GL43.glGetBufferSubData(arg0,arg1,arg2);
	}

	@Override
	public void glGetBufferSubData(int arg0,long arg1,java.nio.LongBuffer arg2) {
		org.lwjgl.opengl.GL43.glGetBufferSubData(arg0,arg1,arg2);
	}

	@Override
	public void glGetBufferSubData(int arg0,long arg1,java.nio.DoubleBuffer arg2) {
		org.lwjgl.opengl.GL43.glGetBufferSubData(arg0,arg1,arg2);
	}

	@Override
	public void glGetBufferSubData(int arg0,long arg1,java.nio.FloatBuffer arg2) {
		org.lwjgl.opengl.GL43.glGetBufferSubData(arg0,arg1,arg2);
	}

	@Override
	public void glIndexdv(double[] arg0) {
		org.lwjgl.opengl.GL43.glIndexdv(arg0);
	}

	@Override
	public void glIndexdv(java.nio.DoubleBuffer arg0) {
		org.lwjgl.opengl.GL43.glIndexdv(arg0);
	}

	@Override
	public void glClearDepth(double arg0) {
		org.lwjgl.opengl.GL43.glClearDepth(arg0);
	}

	@Override
	public void glDeleteTextures(int[] arg0) {
		org.lwjgl.opengl.GL43.glDeleteTextures(arg0);
	}

	@Override
	public void glDeleteTextures(java.nio.IntBuffer arg0) {
		org.lwjgl.opengl.GL43.glDeleteTextures(arg0);
	}

	@Override
	public void glDeleteTextures(int arg0) {
		org.lwjgl.opengl.GL43.glDeleteTextures(arg0);
	}

	@Override
	public void glMultiTexCoord4s(int arg0,short arg1,short arg2,short arg3,short arg4) {
		org.lwjgl.opengl.GL43.glMultiTexCoord4s(arg0,arg1,arg2,arg3,arg4);
	}

	@Override
	public void glColor3uiv(java.nio.IntBuffer arg0) {
		org.lwjgl.opengl.GL43.glColor3uiv(arg0);
	}

	@Override
	public void glColor3uiv(int[] arg0) {
		org.lwjgl.opengl.GL43.glColor3uiv(arg0);
	}

	@Override
	public long glGetBufferParameteri64(int arg0,int arg1) {
		return org.lwjgl.opengl.GL43.glGetBufferParameteri64(arg0,arg1);
	}

	@Override
	public void nglBindFragDataLocation(int arg0,int arg1,long arg2) {
		org.lwjgl.opengl.GL43.nglBindFragDataLocation(arg0,arg1,arg2);
	}

	@Override
	public void nglMultiTexCoord1sv(int arg0,long arg1) {
		org.lwjgl.opengl.GL43.nglMultiTexCoord1sv(arg0,arg1);
	}

	@Override
	public void nglUniform4dv(int arg0,int arg1,long arg2) {
		org.lwjgl.opengl.GL43.nglUniform4dv(arg0,arg1,arg2);
	}

	@Override
	public void glMultiTexCoord4d(int arg0,double arg1,double arg2,double arg3,double arg4) {
		org.lwjgl.opengl.GL43.glMultiTexCoord4d(arg0,arg1,arg2,arg3,arg4);
	}

	@Override
	public void nglVertexAttribL3dv(int arg0,long arg1) {
		org.lwjgl.opengl.GL43.nglVertexAttribL3dv(arg0,arg1);
	}

	@Override
	public void glGetUniformfv(int arg0,int arg1,float[] arg2) {
		org.lwjgl.opengl.GL43.glGetUniformfv(arg0,arg1,arg2);
	}

	@Override
	public void glGetUniformfv(int arg0,int arg1,java.nio.FloatBuffer arg2) {
		org.lwjgl.opengl.GL43.glGetUniformfv(arg0,arg1,arg2);
	}

	@Override
	public void glVertexAttrib3dv(int arg0,double[] arg1) {
		org.lwjgl.opengl.GL43.glVertexAttrib3dv(arg0,arg1);
	}

	@Override
	public void glVertexAttrib3dv(int arg0,java.nio.DoubleBuffer arg1) {
		org.lwjgl.opengl.GL43.glVertexAttrib3dv(arg0,arg1);
	}

	@Override
	public void glMultiTexCoord4i(int arg0,int arg1,int arg2,int arg3,int arg4) {
		org.lwjgl.opengl.GL43.glMultiTexCoord4i(arg0,arg1,arg2,arg3,arg4);
	}

	@Override
	public void glDrawElementsBaseVertex(int arg0,java.nio.IntBuffer arg1,int arg2) {
		org.lwjgl.opengl.GL43.glDrawElementsBaseVertex(arg0,arg1,arg2);
	}

	@Override
	public void glDrawElementsBaseVertex(int arg0,java.nio.ShortBuffer arg1,int arg2) {
		org.lwjgl.opengl.GL43.glDrawElementsBaseVertex(arg0,arg1,arg2);
	}

	@Override
	public void glDrawElementsBaseVertex(int arg0,int arg1,int arg2,long arg3,int arg4) {
		org.lwjgl.opengl.GL43.glDrawElementsBaseVertex(arg0,arg1,arg2,arg3,arg4);
	}

	@Override
	public void glDrawElementsBaseVertex(int arg0,int arg1,java.nio.ByteBuffer arg2,int arg3) {
		org.lwjgl.opengl.GL43.glDrawElementsBaseVertex(arg0,arg1,arg2,arg3);
	}

	@Override
	public void glDrawElementsBaseVertex(int arg0,java.nio.ByteBuffer arg1,int arg2) {
		org.lwjgl.opengl.GL43.glDrawElementsBaseVertex(arg0,arg1,arg2);
	}

	@Override
	public void glMultiTexCoord4f(int arg0,float arg1,float arg2,float arg3,float arg4) {
		org.lwjgl.opengl.GL43.glMultiTexCoord4f(arg0,arg1,arg2,arg3,arg4);
	}

	@Override
	public void glVertexAttribL4dv(int arg0,java.nio.DoubleBuffer arg1) {
		org.lwjgl.opengl.GL43.glVertexAttribL4dv(arg0,arg1);
	}

	@Override
	public void glVertexAttribL4dv(int arg0,double[] arg1) {
		org.lwjgl.opengl.GL43.glVertexAttribL4dv(arg0,arg1);
	}

	@Override
	public int glGetSubroutineIndex(int arg0,int arg1,java.nio.ByteBuffer arg2) {
		return org.lwjgl.opengl.GL43.glGetSubroutineIndex(arg0,arg1,arg2);
	}

	@Override
	public int glGetSubroutineIndex(int arg0,int arg1,java.lang.CharSequence arg2) {
		return org.lwjgl.opengl.GL43.glGetSubroutineIndex(arg0,arg1,arg2);
	}

	@Override
	public void glMultiTexCoord3s(int arg0,short arg1,short arg2,short arg3) {
		org.lwjgl.opengl.GL43.glMultiTexCoord3s(arg0,arg1,arg2,arg3);
	}

	@Override
	public void nglGetPixelMapusv(int arg0,long arg1) {
		org.lwjgl.opengl.GL43.nglGetPixelMapusv(arg0,arg1);
	}

	@Override
	public void nglGetTransformFeedbackVarying(int arg0,int arg1,int arg2,long arg3,long arg4,long arg5,long arg6) {
		org.lwjgl.opengl.GL43.nglGetTransformFeedbackVarying(arg0,arg1,arg2,arg3,arg4,arg5,arg6);
	}

	@Override
	public void nglVertexAttrib3fv(int arg0,long arg1) {
		org.lwjgl.opengl.GL43.nglVertexAttrib3fv(arg0,arg1);
	}

	@Override
	public void glProgramUniform1ui(int arg0,int arg1,int arg2) {
		org.lwjgl.opengl.GL43.glProgramUniform1ui(arg0,arg1,arg2);
	}

	@Override
	public void glMultiTexCoord3d(int arg0,double arg1,double arg2,double arg3) {
		org.lwjgl.opengl.GL43.glMultiTexCoord3d(arg0,arg1,arg2,arg3);
	}

	@Override
	public void glGetTexGendv(int arg0,int arg1,java.nio.DoubleBuffer arg2) {
		org.lwjgl.opengl.GL43.glGetTexGendv(arg0,arg1,arg2);
	}

	@Override
	public void glGetTexGendv(int arg0,int arg1,double[] arg2) {
		org.lwjgl.opengl.GL43.glGetTexGendv(arg0,arg1,arg2);
	}

	@Override
	public void glPopName() {
		org.lwjgl.opengl.GL43.glPopName();
	}

	@Override
	public void glMultiTexCoord3f(int arg0,float arg1,float arg2,float arg3) {
		org.lwjgl.opengl.GL43.glMultiTexCoord3f(arg0,arg1,arg2,arg3);
	}

	@Override
	public void glProgramUniformMatrix4x3dv(int arg0,int arg1,boolean arg2,java.nio.DoubleBuffer arg3) {
		org.lwjgl.opengl.GL43.glProgramUniformMatrix4x3dv(arg0,arg1,arg2,arg3);
	}

	@Override
	public void glProgramUniformMatrix4x3dv(int arg0,int arg1,boolean arg2,double[] arg3) {
		org.lwjgl.opengl.GL43.glProgramUniformMatrix4x3dv(arg0,arg1,arg2,arg3);
	}

	@Override
	public void glIndexfv(float[] arg0) {
		org.lwjgl.opengl.GL43.glIndexfv(arg0);
	}

	@Override
	public void glIndexfv(java.nio.FloatBuffer arg0) {
		org.lwjgl.opengl.GL43.glIndexfv(arg0);
	}

	@Override
	public boolean glIsList(int arg0) {
		return org.lwjgl.opengl.GL43.glIsList(arg0);
	}

	@Override
	public void glMultiTexCoord3i(int arg0,int arg1,int arg2,int arg3) {
		org.lwjgl.opengl.GL43.glMultiTexCoord3i(arg0,arg1,arg2,arg3);
	}

	@Override
	public void nglGetFloatv(int arg0,long arg1) {
		org.lwjgl.opengl.GL43.nglGetFloatv(arg0,arg1);
	}

	@Override
	public void glMultiTexCoord2s(int arg0,short arg1,short arg2) {
		org.lwjgl.opengl.GL43.glMultiTexCoord2s(arg0,arg1,arg2);
	}

	@Override
	public void nglProgramUniform2uiv(int arg0,int arg1,int arg2,long arg3) {
		org.lwjgl.opengl.GL43.nglProgramUniform2uiv(arg0,arg1,arg2,arg3);
	}

	@Override
	public void nglGetProgramResourceiv(int arg0,int arg1,int arg2,int arg3,long arg4,int arg5,long arg6,long arg7) {
		org.lwjgl.opengl.GL43.nglGetProgramResourceiv(arg0,arg1,arg2,arg3,arg4,arg5,arg6,arg7);
	}

	@Override
	public java.lang.String glGetString(int arg0) {
		return org.lwjgl.opengl.GL43.glGetString(arg0);
	}

	@Override
	public void nglDeleteSamplers(int arg0,long arg1) {
		org.lwjgl.opengl.GL43.nglDeleteSamplers(arg0,arg1);
	}

	@Override
	public void nglUniform3dv(int arg0,int arg1,long arg2) {
		org.lwjgl.opengl.GL43.nglUniform3dv(arg0,arg1,arg2);
	}

	@Override
	public void glVertexAttrib4dv(int arg0,double[] arg1) {
		org.lwjgl.opengl.GL43.glVertexAttrib4dv(arg0,arg1);
	}

	@Override
	public void glVertexAttrib4dv(int arg0,java.nio.DoubleBuffer arg1) {
		org.lwjgl.opengl.GL43.glVertexAttrib4dv(arg0,arg1);
	}

	@Override
	public void nglGetActiveUniformBlockiv(int arg0,int arg1,int arg2,long arg3) {
		org.lwjgl.opengl.GL43.nglGetActiveUniformBlockiv(arg0,arg1,arg2,arg3);
	}

	@Override
	public void glRenderbufferStorage(int arg0,int arg1,int arg2,int arg3) {
		org.lwjgl.opengl.GL43.glRenderbufferStorage(arg0,arg1,arg2,arg3);
	}

	@Override
	public void nglRectiv(long arg0,long arg1) {
		org.lwjgl.opengl.GL43.nglRectiv(arg0,arg1);
	}

	@Override
	public void glPixelZoom(float arg0,float arg1) {
		org.lwjgl.opengl.GL43.glPixelZoom(arg0,arg1);
	}

	@Override
	public int glGetSubroutineUniformLocation(int arg0,int arg1,java.lang.CharSequence arg2) {
		return org.lwjgl.opengl.GL43.glGetSubroutineUniformLocation(arg0,arg1,arg2);
	}

	@Override
	public int glGetSubroutineUniformLocation(int arg0,int arg1,java.nio.ByteBuffer arg2) {
		return org.lwjgl.opengl.GL43.glGetSubroutineUniformLocation(arg0,arg1,arg2);
	}

	@Override
	public void glTexGenf(int arg0,int arg1,float arg2) {
		org.lwjgl.opengl.GL43.glTexGenf(arg0,arg1,arg2);
	}

	@Override
	public void glTexGeni(int arg0,int arg1,int arg2) {
		org.lwjgl.opengl.GL43.glTexGeni(arg0,arg1,arg2);
	}

	@Override
	public void glMultiTexCoord2iv(int arg0,int[] arg1) {
		org.lwjgl.opengl.GL43.glMultiTexCoord2iv(arg0,arg1);
	}

	@Override
	public void glMultiTexCoord2iv(int arg0,java.nio.IntBuffer arg1) {
		org.lwjgl.opengl.GL43.glMultiTexCoord2iv(arg0,arg1);
	}

	@Override
	public void nglCallLists(int arg0,int arg1,long arg2) {
		org.lwjgl.opengl.GL43.nglCallLists(arg0,arg1,arg2);
	}

	@Override
	public float glGetFloat(int arg0) {
		return org.lwjgl.opengl.GL43.glGetFloat(arg0);
	}

	@Override
	public void glNormal3fv(java.nio.FloatBuffer arg0) {
		org.lwjgl.opengl.GL43.glNormal3fv(arg0);
	}

	@Override
	public void glNormal3fv(float[] arg0) {
		org.lwjgl.opengl.GL43.glNormal3fv(arg0);
	}

	@Override
	public int nglGetSubroutineUniformLocation(int arg0,int arg1,long arg2) {
		return org.lwjgl.opengl.GL43.nglGetSubroutineUniformLocation(arg0,arg1,arg2);
	}

	@Override
	public int glGetTexParameterIui(int arg0,int arg1) {
		return org.lwjgl.opengl.GL43.glGetTexParameterIui(arg0,arg1);
	}

	@Override
	public void glTexGend(int arg0,int arg1,double arg2) {
		org.lwjgl.opengl.GL43.glTexGend(arg0,arg1,arg2);
	}

	@Override
	public void glGetBooleani_v(int arg0,int arg1,java.nio.ByteBuffer arg2) {
		org.lwjgl.opengl.GL43.glGetBooleani_v(arg0,arg1,arg2);
	}

	@Override
	public void glGetQueryiv(int arg0,int arg1,int[] arg2) {
		org.lwjgl.opengl.GL43.glGetQueryiv(arg0,arg1,arg2);
	}

	@Override
	public void glGetQueryiv(int arg0,int arg1,java.nio.IntBuffer arg2) {
		org.lwjgl.opengl.GL43.glGetQueryiv(arg0,arg1,arg2);
	}

	@Override
	public void nglVertexAttrib4ubv(int arg0,long arg1) {
		org.lwjgl.opengl.GL43.nglVertexAttrib4ubv(arg0,arg1);
	}

	@Override
	public void glRasterPos3sv(java.nio.ShortBuffer arg0) {
		org.lwjgl.opengl.GL43.glRasterPos3sv(arg0);
	}

	@Override
	public void glRasterPos3sv(short[] arg0) {
		org.lwjgl.opengl.GL43.glRasterPos3sv(arg0);
	}

	@Override
	public void nglDrawElementsInstancedBaseVertexBaseInstance(int arg0,int arg1,int arg2,long arg3,int arg4,int arg5,int arg6) {
		org.lwjgl.opengl.GL43.nglDrawElementsInstancedBaseVertexBaseInstance(arg0,arg1,arg2,arg3,arg4,arg5,arg6);
	}

	@Override
	public void glGetInteger64v(int arg0,long[] arg1) {
		org.lwjgl.opengl.GL43.glGetInteger64v(arg0,arg1);
	}

	@Override
	public void glGetInteger64v(int arg0,java.nio.LongBuffer arg1) {
		org.lwjgl.opengl.GL43.glGetInteger64v(arg0,arg1);
	}

	@Override
	public void nglInvalidateSubFramebuffer(int arg0,int arg1,long arg2,int arg3,int arg4,int arg5,int arg6) {
		org.lwjgl.opengl.GL43.nglInvalidateSubFramebuffer(arg0,arg1,arg2,arg3,arg4,arg5,arg6);
	}

	@Override
	public void glGetPixelMapuiv(int arg0,int[] arg1) {
		org.lwjgl.opengl.GL43.glGetPixelMapuiv(arg0,arg1);
	}

	@Override
	public void glGetPixelMapuiv(int arg0,long arg1) {
		org.lwjgl.opengl.GL43.glGetPixelMapuiv(arg0,arg1);
	}

	@Override
	public void glGetPixelMapuiv(int arg0,java.nio.IntBuffer arg1) {
		org.lwjgl.opengl.GL43.glGetPixelMapuiv(arg0,arg1);
	}

	@Override
	public void glWindowPos2fv(float[] arg0) {
		org.lwjgl.opengl.GL43.glWindowPos2fv(arg0);
	}

	@Override
	public void glWindowPos2fv(java.nio.FloatBuffer arg0) {
		org.lwjgl.opengl.GL43.glWindowPos2fv(arg0);
	}

	@Override
	public void glGetSynciv(long arg0,int arg1,java.nio.IntBuffer arg2,java.nio.IntBuffer arg3) {
		org.lwjgl.opengl.GL43.glGetSynciv(arg0,arg1,arg2,arg3);
	}

	@Override
	public void glGetSynciv(long arg0,int arg1,int[] arg2,int[] arg3) {
		org.lwjgl.opengl.GL43.glGetSynciv(arg0,arg1,arg2,arg3);
	}

	@Override
	public void glGetActiveAtomicCounterBufferiv(int arg0,int arg1,int arg2,int[] arg3) {
		org.lwjgl.opengl.GL43.glGetActiveAtomicCounterBufferiv(arg0,arg1,arg2,arg3);
	}

	@Override
	public void glGetActiveAtomicCounterBufferiv(int arg0,int arg1,int arg2,java.nio.IntBuffer arg3) {
		org.lwjgl.opengl.GL43.glGetActiveAtomicCounterBufferiv(arg0,arg1,arg2,arg3);
	}

	@Override
	public void nglGetProgramPipelineiv(int arg0,int arg1,long arg2) {
		org.lwjgl.opengl.GL43.nglGetProgramPipelineiv(arg0,arg1,arg2);
	}

	@Override
	public void glVertexAttrib4bv(int arg0,java.nio.ByteBuffer arg1) {
		org.lwjgl.opengl.GL43.glVertexAttrib4bv(arg0,arg1);
	}

	@Override
	public void nglUniform3fv(int arg0,int arg1,long arg2) {
		org.lwjgl.opengl.GL43.nglUniform3fv(arg0,arg1,arg2);
	}

	@Override
	public void glGenBuffers(int[] arg0) {
		org.lwjgl.opengl.GL43.glGenBuffers(arg0);
	}

	@Override
	public int glGenBuffers() {
		return org.lwjgl.opengl.GL43.glGenBuffers();
	}

	@Override
	public void glGenBuffers(java.nio.IntBuffer arg0) {
		org.lwjgl.opengl.GL43.glGenBuffers(arg0);
	}

	@Override
	public int nglGetProgramResourceLocation(int arg0,int arg1,long arg2) {
		return org.lwjgl.opengl.GL43.nglGetProgramResourceLocation(arg0,arg1,arg2);
	}

	@Override
	public void nglGetObjectPtrLabel(long arg0,int arg1,long arg2,long arg3) {
		org.lwjgl.opengl.GL43.nglGetObjectPtrLabel(arg0,arg1,arg2,arg3);
	}

	@Override
	public void nglDeleteBuffers(int arg0,long arg1) {
		org.lwjgl.opengl.GL43.nglDeleteBuffers(arg0,arg1);
	}

	@Override
	public void glWindowPos2dv(double[] arg0) {
		org.lwjgl.opengl.GL43.glWindowPos2dv(arg0);
	}

	@Override
	public void glWindowPos2dv(java.nio.DoubleBuffer arg0) {
		org.lwjgl.opengl.GL43.glWindowPos2dv(arg0);
	}

	@Override
	public void glEvalMesh1(int arg0,int arg1,int arg2) {
		org.lwjgl.opengl.GL43.glEvalMesh1(arg0,arg1,arg2);
	}

	@Override
	public void glEvalMesh2(int arg0,int arg1,int arg2,int arg3,int arg4) {
		org.lwjgl.opengl.GL43.glEvalMesh2(arg0,arg1,arg2,arg3,arg4);
	}

	@Override
	public void glFramebufferParameteri(int arg0,int arg1,int arg2) {
		org.lwjgl.opengl.GL43.glFramebufferParameteri(arg0,arg1,arg2);
	}

	@Override
	public void glViewportArrayv(int arg0,java.nio.FloatBuffer arg1) {
		org.lwjgl.opengl.GL43.glViewportArrayv(arg0,arg1);
	}

	@Override
	public void glViewportArrayv(int arg0,float[] arg1) {
		org.lwjgl.opengl.GL43.glViewportArrayv(arg0,arg1);
	}

	@Override
	public void glNormal3iv(java.nio.IntBuffer arg0) {
		org.lwjgl.opengl.GL43.glNormal3iv(arg0);
	}

	@Override
	public void glNormal3iv(int[] arg0) {
		org.lwjgl.opengl.GL43.glNormal3iv(arg0);
	}

	@Override
	public void glProgramUniformMatrix2x3fv(int arg0,int arg1,boolean arg2,java.nio.FloatBuffer arg3) {
		org.lwjgl.opengl.GL43.glProgramUniformMatrix2x3fv(arg0,arg1,arg2,arg3);
	}

	@Override
	public void glProgramUniformMatrix2x3fv(int arg0,int arg1,boolean arg2,float[] arg3) {
		org.lwjgl.opengl.GL43.glProgramUniformMatrix2x3fv(arg0,arg1,arg2,arg3);
	}

	@Override
	public void nglGetActiveSubroutineName(int arg0,int arg1,int arg2,int arg3,long arg4,long arg5) {
		org.lwjgl.opengl.GL43.nglGetActiveSubroutineName(arg0,arg1,arg2,arg3,arg4,arg5);
	}

	@Override
	public void nglVertex4sv(long arg0) {
		org.lwjgl.opengl.GL43.nglVertex4sv(arg0);
	}

	@Override
	public void glTexCoordP2ui(int arg0,int arg1) {
		org.lwjgl.opengl.GL43.glTexCoordP2ui(arg0,arg1);
	}

	@Override
	public void glNormal3bv(java.nio.ByteBuffer arg0) {
		org.lwjgl.opengl.GL43.glNormal3bv(arg0);
	}

	@Override
	public void glIndexPointer(int arg0,int arg1,java.nio.ByteBuffer arg2) {
		org.lwjgl.opengl.GL43.glIndexPointer(arg0,arg1,arg2);
	}

	@Override
	public void glIndexPointer(int arg0,java.nio.ShortBuffer arg1) {
		org.lwjgl.opengl.GL43.glIndexPointer(arg0,arg1);
	}

	@Override
	public void glIndexPointer(int arg0,java.nio.ByteBuffer arg1) {
		org.lwjgl.opengl.GL43.glIndexPointer(arg0,arg1);
	}

	@Override
	public void glIndexPointer(int arg0,java.nio.IntBuffer arg1) {
		org.lwjgl.opengl.GL43.glIndexPointer(arg0,arg1);
	}

	@Override
	public void glIndexPointer(int arg0,int arg1,long arg2) {
		org.lwjgl.opengl.GL43.glIndexPointer(arg0,arg1,arg2);
	}

	@Override
	public int glCreateShaderProgramv(int arg0,java.lang.CharSequence... arg1) {
		return org.lwjgl.opengl.GL43.glCreateShaderProgramv(arg0,arg1);
	}

	@Override
	public int glCreateShaderProgramv(int arg0,org.lwjgl.PointerBuffer arg1) {
		return org.lwjgl.opengl.GL43.glCreateShaderProgramv(arg0,arg1);
	}

	@Override
	public int glCreateShaderProgramv(int arg0,java.lang.CharSequence arg1) {
		return org.lwjgl.opengl.GL43.glCreateShaderProgramv(arg0,arg1);
	}

	@Override
	public void nglRasterPos4sv(long arg0) {
		org.lwjgl.opengl.GL43.nglRasterPos4sv(arg0);
	}

	@Override
	public void nglUniform3iv(int arg0,int arg1,long arg2) {
		org.lwjgl.opengl.GL43.nglUniform3iv(arg0,arg1,arg2);
	}

	@Override
	public void glEndList() {
		org.lwjgl.opengl.GL43.glEndList();
	}

	@Override
	public void glProgramUniformMatrix4fv(int arg0,int arg1,boolean arg2,java.nio.FloatBuffer arg3) {
		org.lwjgl.opengl.GL43.glProgramUniformMatrix4fv(arg0,arg1,arg2,arg3);
	}

	@Override
	public void glProgramUniformMatrix4fv(int arg0,int arg1,boolean arg2,float[] arg3) {
		org.lwjgl.opengl.GL43.glProgramUniformMatrix4fv(arg0,arg1,arg2,arg3);
	}

	@Override
	public void glFramebufferTextureLayer(int arg0,int arg1,int arg2,int arg3,int arg4) {
		org.lwjgl.opengl.GL43.glFramebufferTextureLayer(arg0,arg1,arg2,arg3,arg4);
	}

	@Override
	public void glGetTransformFeedbackVarying(int arg0,int arg1,int[] arg2,int[] arg3,int[] arg4,java.nio.ByteBuffer arg5) {
		org.lwjgl.opengl.GL43.glGetTransformFeedbackVarying(arg0,arg1,arg2,arg3,arg4,arg5);
	}

	@Override
	public java.lang.String glGetTransformFeedbackVarying_String(int arg0,int arg1,int arg2,java.nio.IntBuffer arg3,java.nio.IntBuffer arg4) {
		return org.lwjgl.opengl.GL43.glGetTransformFeedbackVarying(arg0,arg1,arg2,arg3,arg4);
	}

	@Override
	public void glGetTransformFeedbackVarying(int arg0,int arg1,java.nio.IntBuffer arg2,java.nio.IntBuffer arg3,java.nio.IntBuffer arg4,java.nio.ByteBuffer arg5) {
		org.lwjgl.opengl.GL43.glGetTransformFeedbackVarying(arg0,arg1,arg2,arg3,arg4,arg5);
	}

	@Override
	public java.lang.String glGetTransformFeedbackVarying_String(int arg0,int arg1,java.nio.IntBuffer arg2,java.nio.IntBuffer arg3) {
		return org.lwjgl.opengl.GL43.glGetTransformFeedbackVarying(arg0,arg1,arg2,arg3);
	}

	@Override
	public void nglSecondaryColor3sv(long arg0) {
		org.lwjgl.opengl.GL43.nglSecondaryColor3sv(arg0);
	}

	@Override
	public void glGetVertexAttribLdv(int arg0,int arg1,java.nio.DoubleBuffer arg2) {
		org.lwjgl.opengl.GL43.glGetVertexAttribLdv(arg0,arg1,arg2);
	}

	@Override
	public void glGetVertexAttribLdv(int arg0,int arg1,double[] arg2) {
		org.lwjgl.opengl.GL43.glGetVertexAttribLdv(arg0,arg1,arg2);
	}

	@Override
	public void glVertexP4uiv(int arg0,java.nio.IntBuffer arg1) {
		org.lwjgl.opengl.GL43.glVertexP4uiv(arg0,arg1);
	}

	@Override
	public void glVertexP4uiv(int arg0,int[] arg1) {
		org.lwjgl.opengl.GL43.glVertexP4uiv(arg0,arg1);
	}

	@Override
	public void nglGenRenderbuffers(int arg0,long arg1) {
		org.lwjgl.opengl.GL43.nglGenRenderbuffers(arg0,arg1);
	}

	@Override
	public void nglProgramUniformMatrix4x2dv(int arg0,int arg1,int arg2,boolean arg3,long arg4) {
		org.lwjgl.opengl.GL43.nglProgramUniformMatrix4x2dv(arg0,arg1,arg2,arg3,arg4);
	}

	@Override
	public void nglRectfv(long arg0,long arg1) {
		org.lwjgl.opengl.GL43.nglRectfv(arg0,arg1);
	}

	@Override
	public void glVertexAttribLFormat(int arg0,int arg1,int arg2,int arg3) {
		org.lwjgl.opengl.GL43.glVertexAttribLFormat(arg0,arg1,arg2,arg3);
	}

	@Override
	public void glColorPointer(int arg0,int arg1,int arg2,java.nio.ByteBuffer arg3) {
		org.lwjgl.opengl.GL43.glColorPointer(arg0,arg1,arg2,arg3);
	}

	@Override
	public void glColorPointer(int arg0,int arg1,int arg2,java.nio.FloatBuffer arg3) {
		org.lwjgl.opengl.GL43.glColorPointer(arg0,arg1,arg2,arg3);
	}

	@Override
	public void glColorPointer(int arg0,int arg1,int arg2,java.nio.IntBuffer arg3) {
		org.lwjgl.opengl.GL43.glColorPointer(arg0,arg1,arg2,arg3);
	}

	@Override
	public void glColorPointer(int arg0,int arg1,int arg2,java.nio.ShortBuffer arg3) {
		org.lwjgl.opengl.GL43.glColorPointer(arg0,arg1,arg2,arg3);
	}

	@Override
	public void glColorPointer(int arg0,int arg1,int arg2,long arg3) {
		org.lwjgl.opengl.GL43.glColorPointer(arg0,arg1,arg2,arg3);
	}

	@Override
	public void nglIndexdv(long arg0) {
		org.lwjgl.opengl.GL43.nglIndexdv(arg0);
	}

	@Override
	public void glGetSamplerParameterIiv(int arg0,int arg1,java.nio.IntBuffer arg2) {
		org.lwjgl.opengl.GL43.glGetSamplerParameterIiv(arg0,arg1,arg2);
	}

	@Override
	public void glGetSamplerParameterIiv(int arg0,int arg1,int[] arg2) {
		org.lwjgl.opengl.GL43.glGetSamplerParameterIiv(arg0,arg1,arg2);
	}

	@Override
	public void nglProgramUniformMatrix3x4dv(int arg0,int arg1,int arg2,boolean arg3,long arg4) {
		org.lwjgl.opengl.GL43.nglProgramUniformMatrix3x4dv(arg0,arg1,arg2,arg3,arg4);
	}

	@Override
	public void glProgramUniformMatrix4dv(int arg0,int arg1,boolean arg2,double[] arg3) {
		org.lwjgl.opengl.GL43.glProgramUniformMatrix4dv(arg0,arg1,arg2,arg3);
	}

	@Override
	public void glProgramUniformMatrix4dv(int arg0,int arg1,boolean arg2,java.nio.DoubleBuffer arg3) {
		org.lwjgl.opengl.GL43.glProgramUniformMatrix4dv(arg0,arg1,arg2,arg3);
	}

	@Override
	public long nglGetString(int arg0) {
		return org.lwjgl.opengl.GL43.nglGetString(arg0);
	}

	@Override
	public void nglInterleavedArrays(int arg0,int arg1,long arg2) {
		org.lwjgl.opengl.GL43.nglInterleavedArrays(arg0,arg1,arg2);
	}

	@Override
	public void glProgramUniformMatrix2x3dv(int arg0,int arg1,boolean arg2,double[] arg3) {
		org.lwjgl.opengl.GL43.glProgramUniformMatrix2x3dv(arg0,arg1,arg2,arg3);
	}

	@Override
	public void glProgramUniformMatrix2x3dv(int arg0,int arg1,boolean arg2,java.nio.DoubleBuffer arg3) {
		org.lwjgl.opengl.GL43.glProgramUniformMatrix2x3dv(arg0,arg1,arg2,arg3);
	}

	@Override
	public void glNormal3dv(java.nio.DoubleBuffer arg0) {
		org.lwjgl.opengl.GL43.glNormal3dv(arg0);
	}

	@Override
	public void glNormal3dv(double[] arg0) {
		org.lwjgl.opengl.GL43.glNormal3dv(arg0);
	}

	@Override
	public void glWindowPos2iv(java.nio.IntBuffer arg0) {
		org.lwjgl.opengl.GL43.glWindowPos2iv(arg0);
	}

	@Override
	public void glWindowPos2iv(int[] arg0) {
		org.lwjgl.opengl.GL43.glWindowPos2iv(arg0);
	}

	@Override
	public long glGetInteger64i(int arg0,int arg1) {
		return org.lwjgl.opengl.GL43.glGetInteger64i(arg0,arg1);
	}

	@Override
	public void nglTexCoord2sv(long arg0) {
		org.lwjgl.opengl.GL43.nglTexCoord2sv(arg0);
	}

	@Override
	public void nglRectdv(long arg0,long arg1) {
		org.lwjgl.opengl.GL43.nglRectdv(arg0,arg1);
	}

	@Override
	public void glColor4iv(int[] arg0) {
		org.lwjgl.opengl.GL43.glColor4iv(arg0);
	}

	@Override
	public void glColor4iv(java.nio.IntBuffer arg0) {
		org.lwjgl.opengl.GL43.glColor4iv(arg0);
	}

	@Override
	public void nglIndexfv(long arg0) {
		org.lwjgl.opengl.GL43.nglIndexfv(arg0);
	}

	@Override
	public void nglProgramUniformMatrix4x2fv(int arg0,int arg1,int arg2,boolean arg3,long arg4) {
		org.lwjgl.opengl.GL43.nglProgramUniformMatrix4x2fv(arg0,arg1,arg2,arg3,arg4);
	}

	@Override
	public void nglVertexAttribPointer(int arg0,int arg1,int arg2,boolean arg3,int arg4,long arg5) {
		org.lwjgl.opengl.GL43.nglVertexAttribPointer(arg0,arg1,arg2,arg3,arg4,arg5);
	}

	@Override
	public void nglWindowPos3iv(long arg0) {
		org.lwjgl.opengl.GL43.nglWindowPos3iv(arg0);
	}

	@Override
	public void glVertexAttribI3ui(int arg0,int arg1,int arg2,int arg3) {
		org.lwjgl.opengl.GL43.glVertexAttribI3ui(arg0,arg1,arg2,arg3);
	}

	@Override
	public void nglProgramUniformMatrix3x4fv(int arg0,int arg1,int arg2,boolean arg3,long arg4) {
		org.lwjgl.opengl.GL43.nglProgramUniformMatrix3x4fv(arg0,arg1,arg2,arg3,arg4);
	}

	@Override
	public void nglEdgeFlagv(long arg0) {
		org.lwjgl.opengl.GL43.nglEdgeFlagv(arg0);
	}

	@Override
	public int glGetError() {
		return org.lwjgl.opengl.GL43.glGetError();
	}

	@Override
	public void nglLoadTransposeMatrixd(long arg0) {
		org.lwjgl.opengl.GL43.nglLoadTransposeMatrixd(arg0);
	}

	@Override
	public void nglDebugMessageInsert(int arg0,int arg1,int arg2,int arg3,int arg4,long arg5) {
		org.lwjgl.opengl.GL43.nglDebugMessageInsert(arg0,arg1,arg2,arg3,arg4,arg5);
	}

	@Override
	public void glPatchParameteri(int arg0,int arg1) {
		org.lwjgl.opengl.GL43.glPatchParameteri(arg0,arg1);
	}

	@Override
	public void nglLoadTransposeMatrixf(long arg0) {
		org.lwjgl.opengl.GL43.nglLoadTransposeMatrixf(arg0);
	}

	@Override
	public void nglWindowPos3dv(long arg0) {
		org.lwjgl.opengl.GL43.nglWindowPos3dv(arg0);
	}

	@Override
	public void nglSecondaryColor3fv(long arg0) {
		org.lwjgl.opengl.GL43.nglSecondaryColor3fv(arg0);
	}

	@Override
	public void glLogicOp(int arg0) {
		org.lwjgl.opengl.GL43.glLogicOp(arg0);
	}

	@Override
	public void glUniform3ui(int arg0,int arg1,int arg2,int arg3) {
		org.lwjgl.opengl.GL43.glUniform3ui(arg0,arg1,arg2,arg3);
	}

	@Override
	public void glScissor(int arg0,int arg1,int arg2,int arg3) {
		org.lwjgl.opengl.GL43.glScissor(arg0,arg1,arg2,arg3);
	}

	@Override
	public long glGetQueryObjectui64(int arg0,int arg1) {
		return org.lwjgl.opengl.GL43.glGetQueryObjectui64(arg0,arg1);
	}

	@Override
	public void glProgramUniform1d(int arg0,int arg1,double arg2) {
		org.lwjgl.opengl.GL43.glProgramUniform1d(arg0,arg1,arg2);
	}

	@Override
	public void glProgramUniform1f(int arg0,int arg1,float arg2) {
		org.lwjgl.opengl.GL43.glProgramUniform1f(arg0,arg1,arg2);
	}

	@Override
	public void glProgramUniform1i(int arg0,int arg1,int arg2) {
		org.lwjgl.opengl.GL43.glProgramUniform1i(arg0,arg1,arg2);
	}

	@Override
	public void nglGetBooleanv(int arg0,long arg1) {
		org.lwjgl.opengl.GL43.nglGetBooleanv(arg0,arg1);
	}

	@Override
	public void glColor4ui(int arg0,int arg1,int arg2,int arg3) {
		org.lwjgl.opengl.GL43.glColor4ui(arg0,arg1,arg2,arg3);
	}

	@Override
	public void nglMultTransposeMatrixd(long arg0) {
		org.lwjgl.opengl.GL43.nglMultTransposeMatrixd(arg0);
	}

	@Override
	public void nglVertexAttrib3sv(int arg0,long arg1) {
		org.lwjgl.opengl.GL43.nglVertexAttrib3sv(arg0,arg1);
	}

	@Override
	public void glColor4ub(byte arg0,byte arg1,byte arg2,byte arg3) {
		org.lwjgl.opengl.GL43.glColor4ub(arg0,arg1,arg2,arg3);
	}

	@Override
	public void nglMultTransposeMatrixf(long arg0) {
		org.lwjgl.opengl.GL43.nglMultTransposeMatrixf(arg0);
	}

	@Override
	public void nglGetTexEnviv(int arg0,int arg1,long arg2) {
		org.lwjgl.opengl.GL43.nglGetTexEnviv(arg0,arg1,arg2);
	}

	@Override
	public void glTexParameterIi(int arg0,int arg1,int arg2) {
		org.lwjgl.opengl.GL43.glTexParameterIi(arg0,arg1,arg2);
	}

	@Override
	public void nglWindowPos3fv(long arg0) {
		org.lwjgl.opengl.GL43.nglWindowPos3fv(arg0);
	}

	@Override
	public void nglMultiTexCoord2dv(int arg0,long arg1) {
		org.lwjgl.opengl.GL43.nglMultiTexCoord2dv(arg0,arg1);
	}

	@Override
	public void glColorP3uiv(int arg0,int[] arg1) {
		org.lwjgl.opengl.GL43.glColorP3uiv(arg0,arg1);
	}

	@Override
	public void glColorP3uiv(int arg0,java.nio.IntBuffer arg1) {
		org.lwjgl.opengl.GL43.glColorP3uiv(arg0,arg1);
	}

	@Override
	public int glClientWaitSync(long arg0,int arg1,long arg2) {
		return org.lwjgl.opengl.GL43.glClientWaitSync(arg0,arg1,arg2);
	}

	@Override
	public void nglSecondaryColor3iv(long arg0) {
		org.lwjgl.opengl.GL43.nglSecondaryColor3iv(arg0);
	}

	@Override
	public void glColor4us(short arg0,short arg1,short arg2,short arg3) {
		org.lwjgl.opengl.GL43.glColor4us(arg0,arg1,arg2,arg3);
	}

	@Override
	public void glViewportIndexedfv(int arg0,java.nio.FloatBuffer arg1) {
		org.lwjgl.opengl.GL43.glViewportIndexedfv(arg0,arg1);
	}

	@Override
	public void glViewportIndexedfv(int arg0,float[] arg1) {
		org.lwjgl.opengl.GL43.glViewportIndexedfv(arg0,arg1);
	}

	@Override
	public void glBlendEquationSeparatei(int arg0,int arg1,int arg2) {
		org.lwjgl.opengl.GL43.glBlendEquationSeparatei(arg0,arg1,arg2);
	}

	@Override
	public void nglShaderBinary(int arg0,long arg1,int arg2,long arg3,int arg4) {
		org.lwjgl.opengl.GL43.nglShaderBinary(arg0,arg1,arg2,arg3,arg4);
	}

	@Override
	public void nglPointParameterfv(int arg0,long arg1) {
		org.lwjgl.opengl.GL43.nglPointParameterfv(arg0,arg1);
	}

	@Override
	public void glVertexAttribI1uiv(int arg0,int[] arg1) {
		org.lwjgl.opengl.GL43.glVertexAttribI1uiv(arg0,arg1);
	}

	@Override
	public void glVertexAttribI1uiv(int arg0,java.nio.IntBuffer arg1) {
		org.lwjgl.opengl.GL43.glVertexAttribI1uiv(arg0,arg1);
	}

	@Override
	public void glColor3usv(java.nio.ShortBuffer arg0) {
		org.lwjgl.opengl.GL43.glColor3usv(arg0);
	}

	@Override
	public void glColor3usv(short[] arg0) {
		org.lwjgl.opengl.GL43.glColor3usv(arg0);
	}

	@Override
	public void glGetPixelMapusv(int arg0,long arg1) {
		org.lwjgl.opengl.GL43.glGetPixelMapusv(arg0,arg1);
	}

	@Override
	public void glGetPixelMapusv(int arg0,java.nio.ShortBuffer arg1) {
		org.lwjgl.opengl.GL43.glGetPixelMapusv(arg0,arg1);
	}

	@Override
	public void glGetPixelMapusv(int arg0,short[] arg1) {
		org.lwjgl.opengl.GL43.glGetPixelMapusv(arg0,arg1);
	}

	@Override
	public void glGetRenderbufferParameteriv(int arg0,int arg1,int[] arg2) {
		org.lwjgl.opengl.GL43.glGetRenderbufferParameteriv(arg0,arg1,arg2);
	}

	@Override
	public void glGetRenderbufferParameteriv(int arg0,int arg1,java.nio.IntBuffer arg2) {
		org.lwjgl.opengl.GL43.glGetRenderbufferParameteriv(arg0,arg1,arg2);
	}

	@Override
	public void nglSecondaryColorPointer(int arg0,int arg1,int arg2,long arg3) {
		org.lwjgl.opengl.GL43.nglSecondaryColorPointer(arg0,arg1,arg2,arg3);
	}

	@Override
	public void glPixelMapusv(int arg0,short[] arg1) {
		org.lwjgl.opengl.GL43.glPixelMapusv(arg0,arg1);
	}

	@Override
	public void glPixelMapusv(int arg0,java.nio.ShortBuffer arg1) {
		org.lwjgl.opengl.GL43.glPixelMapusv(arg0,arg1);
	}

	@Override
	public void glPixelMapusv(int arg0,int arg1,long arg2) {
		org.lwjgl.opengl.GL43.glPixelMapusv(arg0,arg1,arg2);
	}

	@Override
	public void glProgramUniform1fv(int arg0,int arg1,java.nio.FloatBuffer arg2) {
		org.lwjgl.opengl.GL43.glProgramUniform1fv(arg0,arg1,arg2);
	}

	@Override
	public void glProgramUniform1fv(int arg0,int arg1,float[] arg2) {
		org.lwjgl.opengl.GL43.glProgramUniform1fv(arg0,arg1,arg2);
	}

	@Override
	public void glIndexsv(short[] arg0) {
		org.lwjgl.opengl.GL43.glIndexsv(arg0);
	}

	@Override
	public void glIndexsv(java.nio.ShortBuffer arg0) {
		org.lwjgl.opengl.GL43.glIndexsv(arg0);
	}

	@Override
	public int glGetUniformui(int arg0,int arg1) {
		return org.lwjgl.opengl.GL43.glGetUniformui(arg0,arg1);
	}

	@Override
	public void nglWaitSync(long arg0,int arg1,long arg2) {
		org.lwjgl.opengl.GL43.nglWaitSync(arg0,arg1,arg2);
	}

	@Override
	public void nglVertexAttribI2uiv(int arg0,long arg1) {
		org.lwjgl.opengl.GL43.nglVertexAttribI2uiv(arg0,arg1);
	}

	@Override
	public void glMultiTexCoord2dv(int arg0,java.nio.DoubleBuffer arg1) {
		org.lwjgl.opengl.GL43.glMultiTexCoord2dv(arg0,arg1);
	}

	@Override
	public void glMultiTexCoord2dv(int arg0,double[] arg1) {
		org.lwjgl.opengl.GL43.glMultiTexCoord2dv(arg0,arg1);
	}

	@Override
	public void nglVertexAttrib4Nsv(int arg0,long arg1) {
		org.lwjgl.opengl.GL43.nglVertexAttrib4Nsv(arg0,arg1);
	}

	@Override
	public void glColor4sv(java.nio.ShortBuffer arg0) {
		org.lwjgl.opengl.GL43.glColor4sv(arg0);
	}

	@Override
	public void glColor4sv(short[] arg0) {
		org.lwjgl.opengl.GL43.glColor4sv(arg0);
	}

	@Override
	public void nglMultiTexCoord2fv(int arg0,long arg1) {
		org.lwjgl.opengl.GL43.nglMultiTexCoord2fv(arg0,arg1);
	}

	@Override
	public void glMap1d(int arg0,double arg1,double arg2,int arg3,int arg4,double[] arg5) {
		org.lwjgl.opengl.GL43.glMap1d(arg0,arg1,arg2,arg3,arg4,arg5);
	}

	@Override
	public void glMap1d(int arg0,double arg1,double arg2,int arg3,int arg4,java.nio.DoubleBuffer arg5) {
		org.lwjgl.opengl.GL43.glMap1d(arg0,arg1,arg2,arg3,arg4,arg5);
	}

	@Override
	public void glMap1f(int arg0,float arg1,float arg2,int arg3,int arg4,float[] arg5) {
		org.lwjgl.opengl.GL43.glMap1f(arg0,arg1,arg2,arg3,arg4,arg5);
	}

	@Override
	public void glMap1f(int arg0,float arg1,float arg2,int arg3,int arg4,java.nio.FloatBuffer arg5) {
		org.lwjgl.opengl.GL43.glMap1f(arg0,arg1,arg2,arg3,arg4,arg5);
	}

	@Override
	public void glAttachShader(int arg0,int arg1) {
		org.lwjgl.opengl.GL43.glAttachShader(arg0,arg1);
	}

	@Override
	public void nglGetRenderbufferParameteriv(int arg0,int arg1,long arg2) {
		org.lwjgl.opengl.GL43.nglGetRenderbufferParameteriv(arg0,arg1,arg2);
	}

	@Override
	public void glPatchParameterfv(int arg0,float[] arg1) {
		org.lwjgl.opengl.GL43.glPatchParameterfv(arg0,arg1);
	}

	@Override
	public void glPatchParameterfv(int arg0,java.nio.FloatBuffer arg1) {
		org.lwjgl.opengl.GL43.glPatchParameterfv(arg0,arg1);
	}

	@Override
	public void glClearIndex(float arg0) {
		org.lwjgl.opengl.GL43.glClearIndex(arg0);
	}

	@Override
	public void glIndexub(byte arg0) {
		org.lwjgl.opengl.GL43.glIndexub(arg0);
	}

	@Override
	public void nglEvalCoord1fv(long arg0) {
		org.lwjgl.opengl.GL43.nglEvalCoord1fv(arg0);
	}

	@Override
	public void glMap2d(int arg0,double arg1,double arg2,int arg3,int arg4,double arg5,double arg6,int arg7,int arg8,double[] arg9) {
		org.lwjgl.opengl.GL43.glMap2d(arg0,arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9);
	}

	@Override
	public void glMap2d(int arg0,double arg1,double arg2,int arg3,int arg4,double arg5,double arg6,int arg7,int arg8,java.nio.DoubleBuffer arg9) {
		org.lwjgl.opengl.GL43.glMap2d(arg0,arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9);
	}

	@Override
	public void glVertexP4ui(int arg0,int arg1) {
		org.lwjgl.opengl.GL43.glVertexP4ui(arg0,arg1);
	}

	@Override
	public void glMap2f(int arg0,float arg1,float arg2,int arg3,int arg4,float arg5,float arg6,int arg7,int arg8,java.nio.FloatBuffer arg9) {
		org.lwjgl.opengl.GL43.glMap2f(arg0,arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9);
	}

	@Override
	public void glMap2f(int arg0,float arg1,float arg2,int arg3,int arg4,float arg5,float arg6,int arg7,int arg8,float[] arg9) {
		org.lwjgl.opengl.GL43.glMap2f(arg0,arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9);
	}

	@Override
	public void nglGetVertexAttribLdv(int arg0,int arg1,long arg2) {
		org.lwjgl.opengl.GL43.nglGetVertexAttribLdv(arg0,arg1,arg2);
	}

	@Override
	public int glGetProgramResourceLocation(int arg0,int arg1,java.lang.CharSequence arg2) {
		return org.lwjgl.opengl.GL43.glGetProgramResourceLocation(arg0,arg1,arg2);
	}

	@Override
	public int glGetProgramResourceLocation(int arg0,int arg1,java.nio.ByteBuffer arg2) {
		return org.lwjgl.opengl.GL43.glGetProgramResourceLocation(arg0,arg1,arg2);
	}

	@Override
	public void glTexCoordPointer(int arg0,int arg1,int arg2,java.nio.FloatBuffer arg3) {
		org.lwjgl.opengl.GL43.glTexCoordPointer(arg0,arg1,arg2,arg3);
	}

	@Override
	public void glTexCoordPointer(int arg0,int arg1,int arg2,java.nio.ByteBuffer arg3) {
		org.lwjgl.opengl.GL43.glTexCoordPointer(arg0,arg1,arg2,arg3);
	}

	@Override
	public void glTexCoordPointer(int arg0,int arg1,int arg2,long arg3) {
		org.lwjgl.opengl.GL43.glTexCoordPointer(arg0,arg1,arg2,arg3);
	}

	@Override
	public void glTexCoordPointer(int arg0,int arg1,int arg2,java.nio.ShortBuffer arg3) {
		org.lwjgl.opengl.GL43.glTexCoordPointer(arg0,arg1,arg2,arg3);
	}

	@Override
	public void glTexCoordPointer(int arg0,int arg1,int arg2,java.nio.IntBuffer arg3) {
		org.lwjgl.opengl.GL43.glTexCoordPointer(arg0,arg1,arg2,arg3);
	}

	@Override
	public void glProgramUniform1dv(int arg0,int arg1,double[] arg2) {
		org.lwjgl.opengl.GL43.glProgramUniform1dv(arg0,arg1,arg2);
	}

	@Override
	public void glProgramUniform1dv(int arg0,int arg1,java.nio.DoubleBuffer arg2) {
		org.lwjgl.opengl.GL43.glProgramUniform1dv(arg0,arg1,arg2);
	}

	@Override
	public void glMultiTexCoord2fv(int arg0,float[] arg1) {
		org.lwjgl.opengl.GL43.glMultiTexCoord2fv(arg0,arg1);
	}

	@Override
	public void glMultiTexCoord2fv(int arg0,java.nio.FloatBuffer arg1) {
		org.lwjgl.opengl.GL43.glMultiTexCoord2fv(arg0,arg1);
	}

	@Override
	public void glGetFramebufferParameteriv(int arg0,int arg1,int[] arg2) {
		org.lwjgl.opengl.GL43.glGetFramebufferParameteriv(arg0,arg1,arg2);
	}

	@Override
	public void glGetFramebufferParameteriv(int arg0,int arg1,java.nio.IntBuffer arg2) {
		org.lwjgl.opengl.GL43.glGetFramebufferParameteriv(arg0,arg1,arg2);
	}

	@Override
	public void nglPointParameteriv(int arg0,long arg1) {
		org.lwjgl.opengl.GL43.nglPointParameteriv(arg0,arg1);
	}

	@Override
	public void glDrawRangeElementsBaseVertex(int arg0,int arg1,int arg2,java.nio.ShortBuffer arg3,int arg4) {
		org.lwjgl.opengl.GL43.glDrawRangeElementsBaseVertex(arg0,arg1,arg2,arg3,arg4);
	}

	@Override
	public void glDrawRangeElementsBaseVertex(int arg0,int arg1,int arg2,java.nio.IntBuffer arg3,int arg4) {
		org.lwjgl.opengl.GL43.glDrawRangeElementsBaseVertex(arg0,arg1,arg2,arg3,arg4);
	}

	@Override
	public void glDrawRangeElementsBaseVertex(int arg0,int arg1,int arg2,int arg3,int arg4,long arg5,int arg6) {
		org.lwjgl.opengl.GL43.glDrawRangeElementsBaseVertex(arg0,arg1,arg2,arg3,arg4,arg5,arg6);
	}

	@Override
	public void glDrawRangeElementsBaseVertex(int arg0,int arg1,int arg2,int arg3,java.nio.ByteBuffer arg4,int arg5) {
		org.lwjgl.opengl.GL43.glDrawRangeElementsBaseVertex(arg0,arg1,arg2,arg3,arg4,arg5);
	}

	@Override
	public void glDrawRangeElementsBaseVertex(int arg0,int arg1,int arg2,java.nio.ByteBuffer arg3,int arg4) {
		org.lwjgl.opengl.GL43.glDrawRangeElementsBaseVertex(arg0,arg1,arg2,arg3,arg4);
	}

	@Override
	public void nglGetTexEnvfv(int arg0,int arg1,long arg2) {
		org.lwjgl.opengl.GL43.nglGetTexEnvfv(arg0,arg1,arg2);
	}

	@Override
	public void nglClearBufferSubData(int arg0,int arg1,long arg2,long arg3,int arg4,int arg5,long arg6) {
		org.lwjgl.opengl.GL43.nglClearBufferSubData(arg0,arg1,arg2,arg3,arg4,arg5,arg6);
	}

	@Override
	public void nglProgramUniform4iv(int arg0,int arg1,int arg2,long arg3) {
		org.lwjgl.opengl.GL43.nglProgramUniform4iv(arg0,arg1,arg2,arg3);
	}

	@Override
	public void glBeginTransformFeedback(int arg0) {
		org.lwjgl.opengl.GL43.glBeginTransformFeedback(arg0);
	}

	@Override
	public void glObjectPtrLabel(long arg0,java.lang.CharSequence arg1) {
		org.lwjgl.opengl.GL43.glObjectPtrLabel(arg0,arg1);
	}

	@Override
	public void glObjectPtrLabel(long arg0,java.nio.ByteBuffer arg1) {
		org.lwjgl.opengl.GL43.glObjectPtrLabel(arg0,arg1);
	}

	@Override
	public void glTexBufferRange(int arg0,int arg1,int arg2,long arg3,long arg4) {
		org.lwjgl.opengl.GL43.glTexBufferRange(arg0,arg1,arg2,arg3,arg4);
	}

	@Override
	public void glGetTexParameterIiv(int arg0,int arg1,java.nio.IntBuffer arg2) {
		org.lwjgl.opengl.GL43.glGetTexParameterIiv(arg0,arg1,arg2);
	}

	@Override
	public void glGetTexParameterIiv(int arg0,int arg1,int[] arg2) {
		org.lwjgl.opengl.GL43.glGetTexParameterIiv(arg0,arg1,arg2);
	}

	@Override
	public void nglEvalCoord1dv(long arg0) {
		org.lwjgl.opengl.GL43.nglEvalCoord1dv(arg0);
	}

	@Override
	public void glDrawArraysInstancedBaseInstance(int arg0,int arg1,int arg2,int arg3,int arg4) {
		org.lwjgl.opengl.GL43.glDrawArraysInstancedBaseInstance(arg0,arg1,arg2,arg3,arg4);
	}

	@Override
	public void glVertexAttrib4Nub(int arg0,byte arg1,byte arg2,byte arg3,byte arg4) {
		org.lwjgl.opengl.GL43.glVertexAttrib4Nub(arg0,arg1,arg2,arg3,arg4);
	}

	@Override
	public void glSecondaryColor3iv(int[] arg0) {
		org.lwjgl.opengl.GL43.glSecondaryColor3iv(arg0);
	}

	@Override
	public void glSecondaryColor3iv(java.nio.IntBuffer arg0) {
		org.lwjgl.opengl.GL43.glSecondaryColor3iv(arg0);
	}

	@Override
	public boolean glIsQuery(int arg0) {
		return org.lwjgl.opengl.GL43.glIsQuery(arg0);
	}

	@Override
	public void glSelectBuffer(java.nio.IntBuffer arg0) {
		org.lwjgl.opengl.GL43.glSelectBuffer(arg0);
	}

	@Override
	public void glSelectBuffer(int[] arg0) {
		org.lwjgl.opengl.GL43.glSelectBuffer(arg0);
	}

	@Override
	public void nglNormal3sv(long arg0) {
		org.lwjgl.opengl.GL43.nglNormal3sv(arg0);
	}

	@Override
	public void glVertexAttrib4Nsv(int arg0,java.nio.ShortBuffer arg1) {
		org.lwjgl.opengl.GL43.glVertexAttrib4Nsv(arg0,arg1);
	}

	@Override
	public void glVertexAttrib4Nsv(int arg0,short[] arg1) {
		org.lwjgl.opengl.GL43.glVertexAttrib4Nsv(arg0,arg1);
	}

	@Override
	public void nglDrawElementsInstancedBaseInstance(int arg0,int arg1,int arg2,long arg3,int arg4,int arg5) {
		org.lwjgl.opengl.GL43.nglDrawElementsInstancedBaseInstance(arg0,arg1,arg2,arg3,arg4,arg5);
	}

	@Override
	public void glVertex4dv(java.nio.DoubleBuffer arg0) {
		org.lwjgl.opengl.GL43.glVertex4dv(arg0);
	}

	@Override
	public void glVertex4dv(double[] arg0) {
		org.lwjgl.opengl.GL43.glVertex4dv(arg0);
	}

	@Override
	public void nglProgramUniform3dv(int arg0,int arg1,int arg2,long arg3) {
		org.lwjgl.opengl.GL43.nglProgramUniform3dv(arg0,arg1,arg2,arg3);
	}

	@Override
	public void nglIndexsv(long arg0) {
		org.lwjgl.opengl.GL43.nglIndexsv(arg0);
	}

	@Override
	public int glGetQueryObjectui(int arg0,int arg1) {
		return org.lwjgl.opengl.GL43.glGetQueryObjectui(arg0,arg1);
	}

	@Override
	public void nglRasterPos2dv(long arg0) {
		org.lwjgl.opengl.GL43.nglRasterPos2dv(arg0);
	}

	@Override
	public void glScissorArrayv(int arg0,int[] arg1) {
		org.lwjgl.opengl.GL43.glScissorArrayv(arg0,arg1);
	}

	@Override
	public void glScissorArrayv(int arg0,java.nio.IntBuffer arg1) {
		org.lwjgl.opengl.GL43.glScissorArrayv(arg0,arg1);
	}

	@Override
	public void glVertexAttrib4Nubv(int arg0,java.nio.ByteBuffer arg1) {
		org.lwjgl.opengl.GL43.glVertexAttrib4Nubv(arg0,arg1);
	}

	@Override
	public void glVertexAttrib4ubv(int arg0,java.nio.ByteBuffer arg1) {
		org.lwjgl.opengl.GL43.glVertexAttrib4ubv(arg0,arg1);
	}

	@Override
	public void nglGetShaderiv(int arg0,int arg1,long arg2) {
		org.lwjgl.opengl.GL43.nglGetShaderiv(arg0,arg1,arg2);
	}

	@Override
	public int glGetProgramResourceIndex(int arg0,int arg1,java.nio.ByteBuffer arg2) {
		return org.lwjgl.opengl.GL43.glGetProgramResourceIndex(arg0,arg1,arg2);
	}

	@Override
	public int glGetProgramResourceIndex(int arg0,int arg1,java.lang.CharSequence arg2) {
		return org.lwjgl.opengl.GL43.glGetProgramResourceIndex(arg0,arg1,arg2);
	}

	@Override
	public int glGetVertexAttribIui(int arg0,int arg1) {
		return org.lwjgl.opengl.GL43.glGetVertexAttribIui(arg0,arg1);
	}

	@Override
	public void nglUniform2uiv(int arg0,int arg1,long arg2) {
		org.lwjgl.opengl.GL43.nglUniform2uiv(arg0,arg1,arg2);
	}

	@Override
	public void glVertex4fv(java.nio.FloatBuffer arg0) {
		org.lwjgl.opengl.GL43.glVertex4fv(arg0);
	}

	@Override
	public void glVertex4fv(float[] arg0) {
		org.lwjgl.opengl.GL43.glVertex4fv(arg0);
	}

	@Override
	public void glLightModeliv(int arg0,java.nio.IntBuffer arg1) {
		org.lwjgl.opengl.GL43.glLightModeliv(arg0,arg1);
	}

	@Override
	public void glLightModeliv(int arg0,int[] arg1) {
		org.lwjgl.opengl.GL43.glLightModeliv(arg0,arg1);
	}

	@Override
	public void nglTexCoord4iv(long arg0) {
		org.lwjgl.opengl.GL43.nglTexCoord4iv(arg0);
	}

	@Override
	public int glGetUniformLocation(int arg0,java.lang.CharSequence arg1) {
		return org.lwjgl.opengl.GL43.glGetUniformLocation(arg0,arg1);
	}

	@Override
	public int glGetUniformLocation(int arg0,java.nio.ByteBuffer arg1) {
		return org.lwjgl.opengl.GL43.glGetUniformLocation(arg0,arg1);
	}

	@Override
	public void glVertexP3ui(int arg0,int arg1) {
		org.lwjgl.opengl.GL43.glVertexP3ui(arg0,arg1);
	}

	@Override
	public void glGetTexParameteriv(int arg0,int arg1,int[] arg2) {
		org.lwjgl.opengl.GL43.glGetTexParameteriv(arg0,arg1,arg2);
	}

	@Override
	public void glGetTexParameteriv(int arg0,int arg1,java.nio.IntBuffer arg2) {
		org.lwjgl.opengl.GL43.glGetTexParameteriv(arg0,arg1,arg2);
	}

	@Override
	public void nglRasterPos2fv(long arg0) {
		org.lwjgl.opengl.GL43.nglRasterPos2fv(arg0);
	}

	@Override
	public void nglMultiDrawElementsBaseVertex(int arg0,long arg1,int arg2,long arg3,int arg4,long arg5) {
		org.lwjgl.opengl.GL43.nglMultiDrawElementsBaseVertex(arg0,arg1,arg2,arg3,arg4,arg5);
	}

	@Override
	public void glLightModelfv(int arg0,java.nio.FloatBuffer arg1) {
		org.lwjgl.opengl.GL43.glLightModelfv(arg0,arg1);
	}

	@Override
	public void glLightModelfv(int arg0,float[] arg1) {
		org.lwjgl.opengl.GL43.glLightModelfv(arg0,arg1);
	}

	@Override
	public void glTexCoord3sv(short[] arg0) {
		org.lwjgl.opengl.GL43.glTexCoord3sv(arg0);
	}

	@Override
	public void glTexCoord3sv(java.nio.ShortBuffer arg0) {
		org.lwjgl.opengl.GL43.glTexCoord3sv(arg0);
	}

	@Override
	public void glVertexAttribIFormat(int arg0,int arg1,int arg2,int arg3) {
		org.lwjgl.opengl.GL43.glVertexAttribIFormat(arg0,arg1,arg2,arg3);
	}

	@Override
	public void glUniform2d(int arg0,double arg1,double arg2) {
		org.lwjgl.opengl.GL43.glUniform2d(arg0,arg1,arg2);
	}

	@Override
	public void nglTexCoord4dv(long arg0) {
		org.lwjgl.opengl.GL43.nglTexCoord4dv(arg0);
	}

	@Override
	public void glUniform2f(int arg0,float arg1,float arg2) {
		org.lwjgl.opengl.GL43.glUniform2f(arg0,arg1,arg2);
	}

	@Override
	public void glGetMultisamplefv(int arg0,int arg1,float[] arg2) {
		org.lwjgl.opengl.GL43.glGetMultisamplefv(arg0,arg1,arg2);
	}

	@Override
	public void glGetMultisamplefv(int arg0,int arg1,java.nio.FloatBuffer arg2) {
		org.lwjgl.opengl.GL43.glGetMultisamplefv(arg0,arg1,arg2);
	}

	@Override
	public void glGetInternalformativ(int arg0,int arg1,int arg2,int[] arg3) {
		org.lwjgl.opengl.GL43.glGetInternalformativ(arg0,arg1,arg2,arg3);
	}

	@Override
	public void glGetInternalformativ(int arg0,int arg1,int arg2,java.nio.IntBuffer arg3) {
		org.lwjgl.opengl.GL43.glGetInternalformativ(arg0,arg1,arg2,arg3);
	}

	@Override
	public void glUniform2i(int arg0,int arg1,int arg2) {
		org.lwjgl.opengl.GL43.glUniform2i(arg0,arg1,arg2);
	}

	@Override
	public void glBufferSubData(int arg0,long arg1,double[] arg2) {
		org.lwjgl.opengl.GL43.glBufferSubData(arg0,arg1,arg2);
	}

	@Override
	public void glBufferSubData(int arg0,long arg1,short[] arg2) {
		org.lwjgl.opengl.GL43.glBufferSubData(arg0,arg1,arg2);
	}

	@Override
	public void glBufferSubData(int arg0,long arg1,int[] arg2) {
		org.lwjgl.opengl.GL43.glBufferSubData(arg0,arg1,arg2);
	}

	@Override
	public void glBufferSubData(int arg0,long arg1,long[] arg2) {
		org.lwjgl.opengl.GL43.glBufferSubData(arg0,arg1,arg2);
	}

	@Override
	public void glBufferSubData(int arg0,long arg1,java.nio.ShortBuffer arg2) {
		org.lwjgl.opengl.GL43.glBufferSubData(arg0,arg1,arg2);
	}

	@Override
	public void glBufferSubData(int arg0,long arg1,java.nio.IntBuffer arg2) {
		org.lwjgl.opengl.GL43.glBufferSubData(arg0,arg1,arg2);
	}

	@Override
	public void glBufferSubData(int arg0,long arg1,java.nio.FloatBuffer arg2) {
		org.lwjgl.opengl.GL43.glBufferSubData(arg0,arg1,arg2);
	}

	@Override
	public void glBufferSubData(int arg0,long arg1,java.nio.LongBuffer arg2) {
		org.lwjgl.opengl.GL43.glBufferSubData(arg0,arg1,arg2);
	}

	@Override
	public void glBufferSubData(int arg0,long arg1,java.nio.DoubleBuffer arg2) {
		org.lwjgl.opengl.GL43.glBufferSubData(arg0,arg1,arg2);
	}

	@Override
	public void glBufferSubData(int arg0,long arg1,java.nio.ByteBuffer arg2) {
		org.lwjgl.opengl.GL43.glBufferSubData(arg0,arg1,arg2);
	}

	@Override
	public void glBufferSubData(int arg0,long arg1,float[] arg2) {
		org.lwjgl.opengl.GL43.glBufferSubData(arg0,arg1,arg2);
	}

	@Override
	public void glRasterPos3fv(float[] arg0) {
		org.lwjgl.opengl.GL43.glRasterPos3fv(arg0);
	}

	@Override
	public void glRasterPos3fv(java.nio.FloatBuffer arg0) {
		org.lwjgl.opengl.GL43.glRasterPos3fv(arg0);
	}

	@Override
	public void nglGetQueryObjectiv(int arg0,int arg1,long arg2) {
		org.lwjgl.opengl.GL43.nglGetQueryObjectiv(arg0,arg1,arg2);
	}

	@Override
	public void nglMultiDrawElements(int arg0,long arg1,int arg2,long arg3,int arg4) {
		org.lwjgl.opengl.GL43.nglMultiDrawElements(arg0,arg1,arg2,arg3,arg4);
	}

	@Override
	public void glProgramUniform4ui(int arg0,int arg1,int arg2,int arg3,int arg4,int arg5) {
		org.lwjgl.opengl.GL43.glProgramUniform4ui(arg0,arg1,arg2,arg3,arg4,arg5);
	}

	@Override
	public boolean glIsEnabled(int arg0) {
		return org.lwjgl.opengl.GL43.glIsEnabled(arg0);
	}

	@Override
	public long glGetInternalformati64(int arg0,int arg1,int arg2) {
		return org.lwjgl.opengl.GL43.glGetInternalformati64(arg0,arg1,arg2);
	}

	@Override
	public void glVertexAttribP2uiv(int arg0,int arg1,boolean arg2,java.nio.IntBuffer arg3) {
		org.lwjgl.opengl.GL43.glVertexAttribP2uiv(arg0,arg1,arg2,arg3);
	}

	@Override
	public void glVertexAttribP2uiv(int arg0,int arg1,boolean arg2,int[] arg3) {
		org.lwjgl.opengl.GL43.glVertexAttribP2uiv(arg0,arg1,arg2,arg3);
	}

	@Override
	public void glUniform3d(int arg0,double arg1,double arg2,double arg3) {
		org.lwjgl.opengl.GL43.glUniform3d(arg0,arg1,arg2,arg3);
	}

	@Override
	public void glUniform3f(int arg0,float arg1,float arg2,float arg3) {
		org.lwjgl.opengl.GL43.glUniform3f(arg0,arg1,arg2,arg3);
	}

	@Override
	public int nglGetFragDataLocation(int arg0,long arg1) {
		return org.lwjgl.opengl.GL43.nglGetFragDataLocation(arg0,arg1);
	}

	@Override
	public void glUniform2fv(int arg0,float[] arg1) {
		org.lwjgl.opengl.GL43.glUniform2fv(arg0,arg1);
	}

	@Override
	public void glUniform2fv(int arg0,java.nio.FloatBuffer arg1) {
		org.lwjgl.opengl.GL43.glUniform2fv(arg0,arg1);
	}

	@Override
	public void glUniform3i(int arg0,int arg1,int arg2,int arg3) {
		org.lwjgl.opengl.GL43.glUniform3i(arg0,arg1,arg2,arg3);
	}

	@Override
	public void glSecondaryColor3fv(float[] arg0) {
		org.lwjgl.opengl.GL43.glSecondaryColor3fv(arg0);
	}

	@Override
	public void glSecondaryColor3fv(java.nio.FloatBuffer arg0) {
		org.lwjgl.opengl.GL43.glSecondaryColor3fv(arg0);
	}

	@Override
	public void glClearDepthf(float arg0) {
		org.lwjgl.opengl.GL43.glClearDepthf(arg0);
	}

	@Override
	public void glDisableVertexAttribArray(int arg0) {
		org.lwjgl.opengl.GL43.glDisableVertexAttribArray(arg0);
	}

	@Override
	public void nglVertexAttribP1uiv(int arg0,int arg1,boolean arg2,long arg3) {
		org.lwjgl.opengl.GL43.nglVertexAttribP1uiv(arg0,arg1,arg2,arg3);
	}

	@Override
	public void glUniform4d(int arg0,double arg1,double arg2,double arg3,double arg4) {
		org.lwjgl.opengl.GL43.glUniform4d(arg0,arg1,arg2,arg3,arg4);
	}

	@Override
	public void glGetQueryIndexediv(int arg0,int arg1,int arg2,int[] arg3) {
		org.lwjgl.opengl.GL43.glGetQueryIndexediv(arg0,arg1,arg2,arg3);
	}

	@Override
	public void glGetQueryIndexediv(int arg0,int arg1,int arg2,java.nio.IntBuffer arg3) {
		org.lwjgl.opengl.GL43.glGetQueryIndexediv(arg0,arg1,arg2,arg3);
	}

	@Override
	public void glGetActiveSubroutineUniformName(int arg0,int arg1,int arg2,java.nio.IntBuffer arg3,java.nio.ByteBuffer arg4) {
		org.lwjgl.opengl.GL43.glGetActiveSubroutineUniformName(arg0,arg1,arg2,arg3,arg4);
	}

	@Override
	public void glGetActiveSubroutineUniformName(int arg0,int arg1,int arg2,int[] arg3,java.nio.ByteBuffer arg4) {
		org.lwjgl.opengl.GL43.glGetActiveSubroutineUniformName(arg0,arg1,arg2,arg3,arg4);
	}

	@Override
	public java.lang.String glGetActiveSubroutineUniformName_String(int arg0,int arg1,int arg2,int arg3) {
		return org.lwjgl.opengl.GL43.glGetActiveSubroutineUniformName(arg0,arg1,arg2,arg3);
	}

	@Override
	public java.lang.String glGetActiveSubroutineUniformName_String(int arg0,int arg1,int arg2) {
		return org.lwjgl.opengl.GL43.glGetActiveSubroutineUniformName(arg0,arg1,arg2);
	}

	@Override
	public void glUniform2iv(int arg0,java.nio.IntBuffer arg1) {
		org.lwjgl.opengl.GL43.glUniform2iv(arg0,arg1);
	}

	@Override
	public void glUniform2iv(int arg0,int[] arg1) {
		org.lwjgl.opengl.GL43.glUniform2iv(arg0,arg1);
	}

	@Override
	public void glVertex4iv(java.nio.IntBuffer arg0) {
		org.lwjgl.opengl.GL43.glVertex4iv(arg0);
	}

	@Override
	public void glVertex4iv(int[] arg0) {
		org.lwjgl.opengl.GL43.glVertex4iv(arg0);
	}

	@Override
	public void nglTexCoord4fv(long arg0) {
		org.lwjgl.opengl.GL43.nglTexCoord4fv(arg0);
	}

	@Override
	public void glBindFragDataLocationIndexed(int arg0,int arg1,int arg2,java.lang.CharSequence arg3) {
		org.lwjgl.opengl.GL43.glBindFragDataLocationIndexed(arg0,arg1,arg2,arg3);
	}

	@Override
	public void glBindFragDataLocationIndexed(int arg0,int arg1,int arg2,java.nio.ByteBuffer arg3) {
		org.lwjgl.opengl.GL43.glBindFragDataLocationIndexed(arg0,arg1,arg2,arg3);
	}

	@Override
	public void nglDepthRangeArrayv(int arg0,int arg1,long arg2) {
		org.lwjgl.opengl.GL43.nglDepthRangeArrayv(arg0,arg1,arg2);
	}

	@Override
	public void glRasterPos3dv(double[] arg0) {
		org.lwjgl.opengl.GL43.glRasterPos3dv(arg0);
	}

	@Override
	public void glRasterPos3dv(java.nio.DoubleBuffer arg0) {
		org.lwjgl.opengl.GL43.glRasterPos3dv(arg0);
	}

	@Override
	public void glMultiTexCoordP4ui(int arg0,int arg1,int arg2) {
		org.lwjgl.opengl.GL43.glMultiTexCoordP4ui(arg0,arg1,arg2);
	}

	@Override
	public void glGetTexParameterfv(int arg0,int arg1,float[] arg2) {
		org.lwjgl.opengl.GL43.glGetTexParameterfv(arg0,arg1,arg2);
	}

	@Override
	public void glGetTexParameterfv(int arg0,int arg1,java.nio.FloatBuffer arg2) {
		org.lwjgl.opengl.GL43.glGetTexParameterfv(arg0,arg1,arg2);
	}

	@Override
	public void glInvalidateTexImage(int arg0,int arg1) {
		org.lwjgl.opengl.GL43.glInvalidateTexImage(arg0,arg1);
	}

	@Override
	public void glGetBooleanv(int arg0,java.nio.ByteBuffer arg1) {
		org.lwjgl.opengl.GL43.glGetBooleanv(arg0,arg1);
	}

	@Override
	public void glEndQuery(int arg0) {
		org.lwjgl.opengl.GL43.glEndQuery(arg0);
	}

	@Override
	public void glUniform1d(int arg0,double arg1) {
		org.lwjgl.opengl.GL43.glUniform1d(arg0,arg1);
	}

	@Override
	public void glUniform1f(int arg0,float arg1) {
		org.lwjgl.opengl.GL43.glUniform1f(arg0,arg1);
	}

	@Override
	public boolean glGetBooleani(int arg0,int arg1) {
		return org.lwjgl.opengl.GL43.glGetBooleani(arg0,arg1);
	}

	@Override
	public void glDisablei(int arg0,int arg1) {
		org.lwjgl.opengl.GL43.glDisablei(arg0,arg1);
	}

	@Override
	public void glBlitFramebuffer(int arg0,int arg1,int arg2,int arg3,int arg4,int arg5,int arg6,int arg7,int arg8,int arg9) {
		org.lwjgl.opengl.GL43.glBlitFramebuffer(arg0,arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9);
	}

	@Override
	public void glUniform1i(int arg0,int arg1) {
		org.lwjgl.opengl.GL43.glUniform1i(arg0,arg1);
	}

	@Override
	public void glUniformSubroutinesuiv(int arg0,java.nio.IntBuffer arg1) {
		org.lwjgl.opengl.GL43.glUniformSubroutinesuiv(arg0,arg1);
	}

	@Override
	public void glUniformSubroutinesuiv(int arg0,int[] arg1) {
		org.lwjgl.opengl.GL43.glUniformSubroutinesuiv(arg0,arg1);
	}

	@Override
	public void nglMultiTexCoord4sv(int arg0,long arg1) {
		org.lwjgl.opengl.GL43.nglMultiTexCoord4sv(arg0,arg1);
	}

	@Override
	public void nglVertexAttribL4dv(int arg0,long arg1) {
		org.lwjgl.opengl.GL43.nglVertexAttribL4dv(arg0,arg1);
	}

	@Override
	public void nglGetBufferParameteriv(int arg0,int arg1,long arg2) {
		org.lwjgl.opengl.GL43.nglGetBufferParameteriv(arg0,arg1,arg2);
	}

	@Override
	public void glColor3dv(java.nio.DoubleBuffer arg0) {
		org.lwjgl.opengl.GL43.glColor3dv(arg0);
	}

	@Override
	public void glColor3dv(double[] arg0) {
		org.lwjgl.opengl.GL43.glColor3dv(arg0);
	}

	@Override
	public void glScissorIndexedv(int arg0,int[] arg1) {
		org.lwjgl.opengl.GL43.glScissorIndexedv(arg0,arg1);
	}

	@Override
	public void glScissorIndexedv(int arg0,java.nio.IntBuffer arg1) {
		org.lwjgl.opengl.GL43.glScissorIndexedv(arg0,arg1);
	}

	@Override
	public void nglIndexiv(long arg0) {
		org.lwjgl.opengl.GL43.nglIndexiv(arg0);
	}

	@Override
	public int glGetSamplerParameterIui(int arg0,int arg1) {
		return org.lwjgl.opengl.GL43.glGetSamplerParameterIui(arg0,arg1);
	}

	@Override
	public int nglGetDebugMessageLog(int arg0,int arg1,long arg2,long arg3,long arg4,long arg5,long arg6,long arg7) {
		return org.lwjgl.opengl.GL43.nglGetDebugMessageLog(arg0,arg1,arg2,arg3,arg4,arg5,arg6,arg7);
	}

	@Override
	public void nglProgramUniform1uiv(int arg0,int arg1,int arg2,long arg3) {
		org.lwjgl.opengl.GL43.nglProgramUniform1uiv(arg0,arg1,arg2,arg3);
	}

	@Override
	public void glMultiTexCoordP2uiv(int arg0,int arg1,java.nio.IntBuffer arg2) {
		org.lwjgl.opengl.GL43.glMultiTexCoordP2uiv(arg0,arg1,arg2);
	}

	@Override
	public void glMultiTexCoordP2uiv(int arg0,int arg1,int[] arg2) {
		org.lwjgl.opengl.GL43.glMultiTexCoordP2uiv(arg0,arg1,arg2);
	}

	@Override
	public void glVertexAttribI4i(int arg0,int arg1,int arg2,int arg3,int arg4) {
		org.lwjgl.opengl.GL43.glVertexAttribI4i(arg0,arg1,arg2,arg3,arg4);
	}

	@Override
	public void glPushAttrib(int arg0) {
		org.lwjgl.opengl.GL43.glPushAttrib(arg0);
	}

	@Override
	public void glGetObjectLabel(int arg0,int arg1,int[] arg2,java.nio.ByteBuffer arg3) {
		org.lwjgl.opengl.GL43.glGetObjectLabel(arg0,arg1,arg2,arg3);
	}

	@Override
	public java.lang.String glGetObjectLabel_String(int arg0,int arg1) {
		return org.lwjgl.opengl.GL43.glGetObjectLabel(arg0,arg1);
	}

	@Override
	public java.lang.String glGetObjectLabel_String(int arg0,int arg1,int arg2) {
		return org.lwjgl.opengl.GL43.glGetObjectLabel(arg0,arg1,arg2);
	}

	@Override
	public void glGetObjectLabel(int arg0,int arg1,java.nio.IntBuffer arg2,java.nio.ByteBuffer arg3) {
		org.lwjgl.opengl.GL43.glGetObjectLabel(arg0,arg1,arg2,arg3);
	}

	@Override
	public void glSecondaryColor3bv(java.nio.ByteBuffer arg0) {
		org.lwjgl.opengl.GL43.glSecondaryColor3bv(arg0);
	}

	@Override
	public void glTexCoord3fv(float[] arg0) {
		org.lwjgl.opengl.GL43.glTexCoord3fv(arg0);
	}

	@Override
	public void glTexCoord3fv(java.nio.FloatBuffer arg0) {
		org.lwjgl.opengl.GL43.glTexCoord3fv(arg0);
	}

	@Override
	public void glColor3bv(java.nio.ByteBuffer arg0) {
		org.lwjgl.opengl.GL43.glColor3bv(arg0);
	}

	@Override
	public void nglSamplerParameteriv(int arg0,int arg1,long arg2) {
		org.lwjgl.opengl.GL43.nglSamplerParameteriv(arg0,arg1,arg2);
	}

	@Override
	public void nglVertexAttribI3iv(int arg0,long arg1) {
		org.lwjgl.opengl.GL43.nglVertexAttribI3iv(arg0,arg1);
	}

	@Override
	public void glBeginConditionalRender(int arg0,int arg1) {
		org.lwjgl.opengl.GL43.glBeginConditionalRender(arg0,arg1);
	}

	@Override
	public void glUniform1uiv(int arg0,int[] arg1) {
		org.lwjgl.opengl.GL43.glUniform1uiv(arg0,arg1);
	}

	@Override
	public void glUniform1uiv(int arg0,java.nio.IntBuffer arg1) {
		org.lwjgl.opengl.GL43.glUniform1uiv(arg0,arg1);
	}

	@Override
	public void glGenerateMipmap(int arg0) {
		org.lwjgl.opengl.GL43.glGenerateMipmap(arg0);
	}

	@Override
	public void glBlendEquation(int arg0) {
		org.lwjgl.opengl.GL43.glBlendEquation(arg0);
	}

	@Override
	public void glMemoryBarrier(int arg0) {
		org.lwjgl.opengl.GL43.glMemoryBarrier(arg0);
	}

	@Override
	public void glVertexAttribDivisor(int arg0,int arg1) {
		org.lwjgl.opengl.GL43.glVertexAttribDivisor(arg0,arg1);
	}

	@Override
	public void glTexStorage2DMultisample(int arg0,int arg1,int arg2,int arg3,int arg4,boolean arg5) {
		org.lwjgl.opengl.GL43.glTexStorage2DMultisample(arg0,arg1,arg2,arg3,arg4,arg5);
	}

	@Override
	public void nglPixelMapuiv(int arg0,int arg1,long arg2) {
		org.lwjgl.opengl.GL43.nglPixelMapuiv(arg0,arg1,arg2);
	}

	@Override
	public void glUniformMatrix4x2dv(int arg0,boolean arg1,double[] arg2) {
		org.lwjgl.opengl.GL43.glUniformMatrix4x2dv(arg0,arg1,arg2);
	}

	@Override
	public void glUniformMatrix4x2dv(int arg0,boolean arg1,java.nio.DoubleBuffer arg2) {
		org.lwjgl.opengl.GL43.glUniformMatrix4x2dv(arg0,arg1,arg2);
	}

	@Override
	public void glClearColor(float arg0,float arg1,float arg2,float arg3) {
		org.lwjgl.opengl.GL43.glClearColor(arg0,arg1,arg2,arg3);
	}

	@Override
	public void glSamplerParameterIuiv(int arg0,int arg1,java.nio.IntBuffer arg2) {
		org.lwjgl.opengl.GL43.glSamplerParameterIuiv(arg0,arg1,arg2);
	}

	@Override
	public void glSamplerParameterIuiv(int arg0,int arg1,int[] arg2) {
		org.lwjgl.opengl.GL43.glSamplerParameterIuiv(arg0,arg1,arg2);
	}

	@Override
	public void nglTexCoord4sv(long arg0) {
		org.lwjgl.opengl.GL43.nglTexCoord4sv(arg0);
	}

	@Override
	public void glStencilFunc(int arg0,int arg1,int arg2) {
		org.lwjgl.opengl.GL43.glStencilFunc(arg0,arg1,arg2);
	}

	@Override
	public void glVertexAttribI2i(int arg0,int arg1,int arg2) {
		org.lwjgl.opengl.GL43.glVertexAttribI2i(arg0,arg1,arg2);
	}

	@Override
	public void nglMultiDrawArrays(int arg0,long arg1,long arg2,int arg3) {
		org.lwjgl.opengl.GL43.nglMultiDrawArrays(arg0,arg1,arg2,arg3);
	}

	@Override
	public void glTexCoordP2uiv(int arg0,int[] arg1) {
		org.lwjgl.opengl.GL43.glTexCoordP2uiv(arg0,arg1);
	}

	@Override
	public void glTexCoordP2uiv(int arg0,java.nio.IntBuffer arg1) {
		org.lwjgl.opengl.GL43.glTexCoordP2uiv(arg0,arg1);
	}

	@Override
	public void glDeleteSync(long arg0) {
		org.lwjgl.opengl.GL43.glDeleteSync(arg0);
	}

	@Override
	public void glVertexAttrib2fv(int arg0,java.nio.FloatBuffer arg1) {
		org.lwjgl.opengl.GL43.glVertexAttrib2fv(arg0,arg1);
	}

	@Override
	public void glVertexAttrib2fv(int arg0,float[] arg1) {
		org.lwjgl.opengl.GL43.glVertexAttrib2fv(arg0,arg1);
	}

	@Override
	public void glRasterPos3iv(java.nio.IntBuffer arg0) {
		org.lwjgl.opengl.GL43.glRasterPos3iv(arg0);
	}

	@Override
	public void glRasterPos3iv(int[] arg0) {
		org.lwjgl.opengl.GL43.glRasterPos3iv(arg0);
	}

	@Override
	public void glUniform2dv(int arg0,double[] arg1) {
		org.lwjgl.opengl.GL43.glUniform2dv(arg0,arg1);
	}

	@Override
	public void glUniform2dv(int arg0,java.nio.DoubleBuffer arg1) {
		org.lwjgl.opengl.GL43.glUniform2dv(arg0,arg1);
	}

	@Override
	public void glSecondaryColor3dv(java.nio.DoubleBuffer arg0) {
		org.lwjgl.opengl.GL43.glSecondaryColor3dv(arg0);
	}

	@Override
	public void glSecondaryColor3dv(double[] arg0) {
		org.lwjgl.opengl.GL43.glSecondaryColor3dv(arg0);
	}

	@Override
	public void glTexCoord3dv(double[] arg0) {
		org.lwjgl.opengl.GL43.glTexCoord3dv(arg0);
	}

	@Override
	public void glTexCoord3dv(java.nio.DoubleBuffer arg0) {
		org.lwjgl.opengl.GL43.glTexCoord3dv(arg0);
	}

	@Override
	public void glColorP4ui(int arg0,int arg1) {
		org.lwjgl.opengl.GL43.glColorP4ui(arg0,arg1);
	}

	@Override
	public void glVertexAttrib4uiv(int arg0,java.nio.IntBuffer arg1) {
		org.lwjgl.opengl.GL43.glVertexAttrib4uiv(arg0,arg1);
	}

	@Override
	public void glVertexAttrib4uiv(int arg0,int[] arg1) {
		org.lwjgl.opengl.GL43.glVertexAttrib4uiv(arg0,arg1);
	}

	@Override
	public void glVertexAttribI3i(int arg0,int arg1,int arg2,int arg3) {
		org.lwjgl.opengl.GL43.glVertexAttribI3i(arg0,arg1,arg2,arg3);
	}

	@Override
	public void nglGetPointerv(int arg0,long arg1) {
		org.lwjgl.opengl.GL43.nglGetPointerv(arg0,arg1);
	}

	@Override
	public long glGetPointer(int arg0) {
		return org.lwjgl.opengl.GL43.glGetPointer(arg0);
	}

	@Override
	public void glVertexAttrib2dv(int arg0,double[] arg1) {
		org.lwjgl.opengl.GL43.glVertexAttrib2dv(arg0,arg1);
	}

	@Override
	public void glVertexAttrib2dv(int arg0,java.nio.DoubleBuffer arg1) {
		org.lwjgl.opengl.GL43.glVertexAttrib2dv(arg0,arg1);
	}

	@Override
	public void glRotated(double arg0,double arg1,double arg2,double arg3) {
		org.lwjgl.opengl.GL43.glRotated(arg0,arg1,arg2,arg3);
	}

	@Override
	public void glIndexubv(java.nio.ByteBuffer arg0) {
		org.lwjgl.opengl.GL43.glIndexubv(arg0);
	}

	@Override
	public void glRotatef(float arg0,float arg1,float arg2,float arg3) {
		org.lwjgl.opengl.GL43.glRotatef(arg0,arg1,arg2,arg3);
	}

	@Override
	public void glVertexAttribL3dv(int arg0,double[] arg1) {
		org.lwjgl.opengl.GL43.glVertexAttribL3dv(arg0,arg1);
	}

	@Override
	public void glVertexAttribL3dv(int arg0,java.nio.DoubleBuffer arg1) {
		org.lwjgl.opengl.GL43.glVertexAttribL3dv(arg0,arg1);
	}

	@Override
	public void glUniformMatrix4x2fv(int arg0,boolean arg1,java.nio.FloatBuffer arg2) {
		org.lwjgl.opengl.GL43.glUniformMatrix4x2fv(arg0,arg1,arg2);
	}

	@Override
	public void glUniformMatrix4x2fv(int arg0,boolean arg1,float[] arg2) {
		org.lwjgl.opengl.GL43.glUniformMatrix4x2fv(arg0,arg1,arg2);
	}

	@Override
	public void glDeleteSamplers(int arg0) {
		org.lwjgl.opengl.GL43.glDeleteSamplers(arg0);
	}

	@Override
	public void glDeleteSamplers(int[] arg0) {
		org.lwjgl.opengl.GL43.glDeleteSamplers(arg0);
	}

	@Override
	public void glDeleteSamplers(java.nio.IntBuffer arg0) {
		org.lwjgl.opengl.GL43.glDeleteSamplers(arg0);
	}

	@Override
	public void nglDebugMessageControl(int arg0,int arg1,int arg2,int arg3,long arg4,boolean arg5) {
		org.lwjgl.opengl.GL43.nglDebugMessageControl(arg0,arg1,arg2,arg3,arg4,arg5);
	}

	@Override
	public void glMultiDrawArrays(int arg0,int[] arg1,int[] arg2) {
		org.lwjgl.opengl.GL43.glMultiDrawArrays(arg0,arg1,arg2);
	}

	@Override
	public void glMultiDrawArrays(int arg0,java.nio.IntBuffer arg1,java.nio.IntBuffer arg2) {
		org.lwjgl.opengl.GL43.glMultiDrawArrays(arg0,arg1,arg2);
	}

	@Override
	public void nglUniformMatrix2fv(int arg0,int arg1,boolean arg2,long arg3) {
		org.lwjgl.opengl.GL43.nglUniformMatrix2fv(arg0,arg1,arg2,arg3);
	}

	@Override
	public void nglVertexAttrib2fv(int arg0,long arg1) {
		org.lwjgl.opengl.GL43.nglVertexAttrib2fv(arg0,arg1);
	}

	@Override
	public void glProgramUniformMatrix3x4dv(int arg0,int arg1,boolean arg2,java.nio.DoubleBuffer arg3) {
		org.lwjgl.opengl.GL43.glProgramUniformMatrix3x4dv(arg0,arg1,arg2,arg3);
	}

	@Override
	public void glProgramUniformMatrix3x4dv(int arg0,int arg1,boolean arg2,double[] arg3) {
		org.lwjgl.opengl.GL43.glProgramUniformMatrix3x4dv(arg0,arg1,arg2,arg3);
	}

	@Override
	public int glGetAttribLocation(int arg0,java.nio.ByteBuffer arg1) {
		return org.lwjgl.opengl.GL43.glGetAttribLocation(arg0,arg1);
	}

	@Override
	public int glGetAttribLocation(int arg0,java.lang.CharSequence arg1) {
		return org.lwjgl.opengl.GL43.glGetAttribLocation(arg0,arg1);
	}

	@Override
	public void glWindowPos2sv(short[] arg0) {
		org.lwjgl.opengl.GL43.glWindowPos2sv(arg0);
	}

	@Override
	public void glWindowPos2sv(java.nio.ShortBuffer arg0) {
		org.lwjgl.opengl.GL43.glWindowPos2sv(arg0);
	}

	@Override
	public int glCreateShader(int arg0) {
		return org.lwjgl.opengl.GL43.glCreateShader(arg0);
	}

	@Override
	public void nglSamplerParameterfv(int arg0,int arg1,long arg2) {
		org.lwjgl.opengl.GL43.nglSamplerParameterfv(arg0,arg1,arg2);
	}

	@Override
	public void glProgramUniformMatrix4x2dv(int arg0,int arg1,boolean arg2,double[] arg3) {
		org.lwjgl.opengl.GL43.glProgramUniformMatrix4x2dv(arg0,arg1,arg2,arg3);
	}

	@Override
	public void glProgramUniformMatrix4x2dv(int arg0,int arg1,boolean arg2,java.nio.DoubleBuffer arg3) {
		org.lwjgl.opengl.GL43.glProgramUniformMatrix4x2dv(arg0,arg1,arg2,arg3);
	}

	@Override
	public void nglVertex2fv(long arg0) {
		org.lwjgl.opengl.GL43.nglVertex2fv(arg0);
	}

	@Override
	public void glMultiDrawArraysIndirect(int arg0,java.nio.ByteBuffer arg1,int arg2,int arg3) {
		org.lwjgl.opengl.GL43.glMultiDrawArraysIndirect(arg0,arg1,arg2,arg3);
	}

	@Override
	public void glMultiDrawArraysIndirect(int arg0,long arg1,int arg2,int arg3) {
		org.lwjgl.opengl.GL43.glMultiDrawArraysIndirect(arg0,arg1,arg2,arg3);
	}

	@Override
	public void glMultiDrawArraysIndirect(int arg0,java.nio.IntBuffer arg1,int arg2,int arg3) {
		org.lwjgl.opengl.GL43.glMultiDrawArraysIndirect(arg0,arg1,arg2,arg3);
	}

	@Override
	public void glMultiDrawArraysIndirect(int arg0,int[] arg1,int arg2,int arg3) {
		org.lwjgl.opengl.GL43.glMultiDrawArraysIndirect(arg0,arg1,arg2,arg3);
	}

	@Override
	public void glVertexAttribLPointer(int arg0,int arg1,int arg2,int arg3,long arg4) {
		org.lwjgl.opengl.GL43.glVertexAttribLPointer(arg0,arg1,arg2,arg3,arg4);
	}

	@Override
	public void glVertexAttribLPointer(int arg0,int arg1,int arg2,java.nio.DoubleBuffer arg3) {
		org.lwjgl.opengl.GL43.glVertexAttribLPointer(arg0,arg1,arg2,arg3);
	}

	@Override
	public void glVertexAttribLPointer(int arg0,int arg1,int arg2,int arg3,java.nio.ByteBuffer arg4) {
		org.lwjgl.opengl.GL43.glVertexAttribLPointer(arg0,arg1,arg2,arg3,arg4);
	}

	@Override
	public void nglMultiTexCoordP1uiv(int arg0,int arg1,long arg2) {
		org.lwjgl.opengl.GL43.nglMultiTexCoordP1uiv(arg0,arg1,arg2);
	}

	@Override
	public void nglGetInternalformati64v(int arg0,int arg1,int arg2,int arg3,long arg4) {
		org.lwjgl.opengl.GL43.nglGetInternalformati64v(arg0,arg1,arg2,arg3,arg4);
	}

	@Override
	public void glUniformMatrix2dv(int arg0,boolean arg1,java.nio.DoubleBuffer arg2) {
		org.lwjgl.opengl.GL43.glUniformMatrix2dv(arg0,arg1,arg2);
	}

	@Override
	public void glUniformMatrix2dv(int arg0,boolean arg1,double[] arg2) {
		org.lwjgl.opengl.GL43.glUniformMatrix2dv(arg0,arg1,arg2);
	}

	@Override
	public int glGetProgramStagei(int arg0,int arg1,int arg2) {
		return org.lwjgl.opengl.GL43.glGetProgramStagei(arg0,arg1,arg2);
	}

	@Override
	public void nglDrawRangeElements(int arg0,int arg1,int arg2,int arg3,int arg4,long arg5) {
		org.lwjgl.opengl.GL43.nglDrawRangeElements(arg0,arg1,arg2,arg3,arg4,arg5);
	}

	@Override
	public void glVertexAttribI1i(int arg0,int arg1) {
		org.lwjgl.opengl.GL43.glVertexAttribI1i(arg0,arg1);
	}

	@Override
	public void nglGetActiveAttrib(int arg0,int arg1,int arg2,long arg3,long arg4,long arg5,long arg6) {
		org.lwjgl.opengl.GL43.nglGetActiveAttrib(arg0,arg1,arg2,arg3,arg4,arg5,arg6);
	}

	@Override
	public void nglVertexP3uiv(int arg0,long arg1) {
		org.lwjgl.opengl.GL43.nglVertexP3uiv(arg0,arg1);
	}

	@Override
	public void glWindowPos2i(int arg0,int arg1) {
		org.lwjgl.opengl.GL43.glWindowPos2i(arg0,arg1);
	}

	@Override
	public void glProgramBinary(int arg0,int arg1,java.nio.ByteBuffer arg2) {
		org.lwjgl.opengl.GL43.glProgramBinary(arg0,arg1,arg2);
	}

	@Override
	public void glVertexAttribI2iv(int arg0,int[] arg1) {
		org.lwjgl.opengl.GL43.glVertexAttribI2iv(arg0,arg1);
	}

	@Override
	public void glVertexAttribI2iv(int arg0,java.nio.IntBuffer arg1) {
		org.lwjgl.opengl.GL43.glVertexAttribI2iv(arg0,arg1);
	}

	@Override
	public void glWindowPos2f(float arg0,float arg1) {
		org.lwjgl.opengl.GL43.glWindowPos2f(arg0,arg1);
	}

	@Override
	public void glVertexAttribP2ui(int arg0,int arg1,boolean arg2,int arg3) {
		org.lwjgl.opengl.GL43.glVertexAttribP2ui(arg0,arg1,arg2,arg3);
	}

	@Override
	public void glWindowPos2d(double arg0,double arg1) {
		org.lwjgl.opengl.GL43.glWindowPos2d(arg0,arg1);
	}

	@Override
	public void glTexCoord3iv(java.nio.IntBuffer arg0) {
		org.lwjgl.opengl.GL43.glTexCoord3iv(arg0);
	}

	@Override
	public void glTexCoord3iv(int[] arg0) {
		org.lwjgl.opengl.GL43.glTexCoord3iv(arg0);
	}

	@Override
	public void nglRasterPos2iv(long arg0) {
		org.lwjgl.opengl.GL43.nglRasterPos2iv(arg0);
	}

	@Override
	public void nglUniformMatrix2dv(int arg0,int arg1,boolean arg2,long arg3) {
		org.lwjgl.opengl.GL43.nglUniformMatrix2dv(arg0,arg1,arg2,arg3);
	}

	@Override
	public void nglVertexAttrib2dv(int arg0,long arg1) {
		org.lwjgl.opengl.GL43.nglVertexAttrib2dv(arg0,arg1);
	}

	@Override
	public void glWindowPos3s(short arg0,short arg1,short arg2) {
		org.lwjgl.opengl.GL43.glWindowPos3s(arg0,arg1,arg2);
	}

	@Override
	public java.lang.String glGetActiveAttrib_String(int arg0,int arg1,java.nio.IntBuffer arg2,java.nio.IntBuffer arg3) {
		return org.lwjgl.opengl.GL43.glGetActiveAttrib(arg0,arg1,arg2,arg3);
	}

	@Override
	public java.lang.String glGetActiveAttrib_String(int arg0,int arg1,int arg2,java.nio.IntBuffer arg3,java.nio.IntBuffer arg4) {
		return org.lwjgl.opengl.GL43.glGetActiveAttrib(arg0,arg1,arg2,arg3,arg4);
	}

	@Override
	public void glGetActiveAttrib(int arg0,int arg1,int[] arg2,int[] arg3,int[] arg4,java.nio.ByteBuffer arg5) {
		org.lwjgl.opengl.GL43.glGetActiveAttrib(arg0,arg1,arg2,arg3,arg4,arg5);
	}

	@Override
	public void glGetActiveAttrib(int arg0,int arg1,java.nio.IntBuffer arg2,java.nio.IntBuffer arg3,java.nio.IntBuffer arg4,java.nio.ByteBuffer arg5) {
		org.lwjgl.opengl.GL43.glGetActiveAttrib(arg0,arg1,arg2,arg3,arg4,arg5);
	}

	@Override
	public void nglVertex2dv(long arg0) {
		org.lwjgl.opengl.GL43.nglVertex2dv(arg0);
	}

	@Override
	public void glWindowPos3i(int arg0,int arg1,int arg2) {
		org.lwjgl.opengl.GL43.glWindowPos3i(arg0,arg1,arg2);
	}

	@Override
	public void glWindowPos3f(float arg0,float arg1,float arg2) {
		org.lwjgl.opengl.GL43.glWindowPos3f(arg0,arg1,arg2);
	}

	@Override
	public void glWindowPos3d(double arg0,double arg1,double arg2) {
		org.lwjgl.opengl.GL43.glWindowPos3d(arg0,arg1,arg2);
	}

	@Override
	public void glUniformMatrix2fv(int arg0,boolean arg1,float[] arg2) {
		org.lwjgl.opengl.GL43.glUniformMatrix2fv(arg0,arg1,arg2);
	}

	@Override
	public void glUniformMatrix2fv(int arg0,boolean arg1,java.nio.FloatBuffer arg2) {
		org.lwjgl.opengl.GL43.glUniformMatrix2fv(arg0,arg1,arg2);
	}

	@Override
	public void glDrawElementsIndirect(int arg0,int arg1,int[] arg2) {
		org.lwjgl.opengl.GL43.glDrawElementsIndirect(arg0,arg1,arg2);
	}

	@Override
	public void glDrawElementsIndirect(int arg0,int arg1,long arg2) {
		org.lwjgl.opengl.GL43.glDrawElementsIndirect(arg0,arg1,arg2);
	}

	@Override
	public void glDrawElementsIndirect(int arg0,int arg1,java.nio.ByteBuffer arg2) {
		org.lwjgl.opengl.GL43.glDrawElementsIndirect(arg0,arg1,arg2);
	}

	@Override
	public void glDrawElementsIndirect(int arg0,int arg1,java.nio.IntBuffer arg2) {
		org.lwjgl.opengl.GL43.glDrawElementsIndirect(arg0,arg1,arg2);
	}

	@Override
	public long glGetBufferPointer(int arg0,int arg1) {
		return org.lwjgl.opengl.GL43.glGetBufferPointer(arg0,arg1);
	}

	@Override
	public void glQueryCounter(int arg0,int arg1) {
		org.lwjgl.opengl.GL43.glQueryCounter(arg0,arg1);
	}

	@Override
	public void nglGenTransformFeedbacks(int arg0,long arg1) {
		org.lwjgl.opengl.GL43.nglGenTransformFeedbacks(arg0,arg1);
	}

	@Override
	public void glGetVertexAttribIiv(int arg0,int arg1,java.nio.IntBuffer arg2) {
		org.lwjgl.opengl.GL43.glGetVertexAttribIiv(arg0,arg1,arg2);
	}

	@Override
	public void glGetVertexAttribIiv(int arg0,int arg1,int[] arg2) {
		org.lwjgl.opengl.GL43.glGetVertexAttribIiv(arg0,arg1,arg2);
	}

	@Override
	public int nglClientWaitSync(long arg0,int arg1,long arg2) {
		return org.lwjgl.opengl.GL43.nglClientWaitSync(arg0,arg1,arg2);
	}

	@Override
	public void glWindowPos2s(short arg0,short arg1) {
		org.lwjgl.opengl.GL43.glWindowPos2s(arg0,arg1);
	}

	@Override
	public void glPointSize(float arg0) {
		org.lwjgl.opengl.GL43.glPointSize(arg0);
	}

	@Override
	public void glShaderSource(int arg0,org.lwjgl.PointerBuffer arg1,int[] arg2) {
		org.lwjgl.opengl.GL43.glShaderSource(arg0,arg1,arg2);
	}

	@Override
	public void glShaderSource(int arg0,java.lang.CharSequence... arg1) {
		org.lwjgl.opengl.GL43.glShaderSource(arg0,arg1);
	}

	@Override
	public void glShaderSource(int arg0,org.lwjgl.PointerBuffer arg1,java.nio.IntBuffer arg2) {
		org.lwjgl.opengl.GL43.glShaderSource(arg0,arg1,arg2);
	}

	@Override
	public void glShaderSource(int arg0,java.lang.CharSequence arg1) {
		org.lwjgl.opengl.GL43.glShaderSource(arg0,arg1);
	}

	@Override
	public void nglUniform4fv(int arg0,int arg1,long arg2) {
		org.lwjgl.opengl.GL43.nglUniform4fv(arg0,arg1,arg2);
	}

	@Override
	public void nglObjectLabel(int arg0,int arg1,int arg2,long arg3) {
		org.lwjgl.opengl.GL43.nglObjectLabel(arg0,arg1,arg2,arg3);
	}

	@Override
	public void nglNormal3bv(long arg0) {
		org.lwjgl.opengl.GL43.nglNormal3bv(arg0);
	}

	@Override
	public void nglTexImage3D(int arg0,int arg1,int arg2,int arg3,int arg4,int arg5,int arg6,int arg7,int arg8,long arg9) {
		org.lwjgl.opengl.GL43.nglTexImage3D(arg0,arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9);
	}

	@Override
	public void glBlendFuncSeparatei(int arg0,int arg1,int arg2,int arg3,int arg4) {
		org.lwjgl.opengl.GL43.glBlendFuncSeparatei(arg0,arg1,arg2,arg3,arg4);
	}

	@Override
	public void glWindowPos3iv(int[] arg0) {
		org.lwjgl.opengl.GL43.glWindowPos3iv(arg0);
	}

	@Override
	public void glWindowPos3iv(java.nio.IntBuffer arg0) {
		org.lwjgl.opengl.GL43.glWindowPos3iv(arg0);
	}

	@Override
	public void glTexImage2DMultisample(int arg0,int arg1,int arg2,int arg3,int arg4,boolean arg5) {
		org.lwjgl.opengl.GL43.glTexImage2DMultisample(arg0,arg1,arg2,arg3,arg4,arg5);
	}

	@Override
	public void nglObjectPtrLabel(long arg0,int arg1,long arg2) {
		org.lwjgl.opengl.GL43.nglObjectPtrLabel(arg0,arg1,arg2);
	}

	@Override
	public void glVertex4sv(short[] arg0) {
		org.lwjgl.opengl.GL43.glVertex4sv(arg0);
	}

	@Override
	public void glVertex4sv(java.nio.ShortBuffer arg0) {
		org.lwjgl.opengl.GL43.glVertex4sv(arg0);
	}

	@Override
	public void glVertexAttrib4f(int arg0,float arg1,float arg2,float arg3,float arg4) {
		org.lwjgl.opengl.GL43.glVertexAttrib4f(arg0,arg1,arg2,arg3,arg4);
	}

	@Override
	public void glVertexAttrib4d(int arg0,double arg1,double arg2,double arg3,double arg4) {
		org.lwjgl.opengl.GL43.glVertexAttrib4d(arg0,arg1,arg2,arg3,arg4);
	}

	@Override
	public void glGetVertexAttribdv(int arg0,int arg1,double[] arg2) {
		org.lwjgl.opengl.GL43.glGetVertexAttribdv(arg0,arg1,arg2);
	}

	@Override
	public void glGetVertexAttribdv(int arg0,int arg1,java.nio.DoubleBuffer arg2) {
		org.lwjgl.opengl.GL43.glGetVertexAttribdv(arg0,arg1,arg2);
	}

	@Override
	public void nglGetCompressedTexImage(int arg0,int arg1,long arg2) {
		org.lwjgl.opengl.GL43.nglGetCompressedTexImage(arg0,arg1,arg2);
	}

	@Override
	public void nglGetProgramiv(int arg0,int arg1,long arg2) {
		org.lwjgl.opengl.GL43.nglGetProgramiv(arg0,arg1,arg2);
	}

	@Override
	public void nglWindowPos2iv(long arg0) {
		org.lwjgl.opengl.GL43.nglWindowPos2iv(arg0);
	}

	@Override
	public void glVertexAttrib4s(int arg0,short arg1,short arg2,short arg3,short arg4) {
		org.lwjgl.opengl.GL43.glVertexAttrib4s(arg0,arg1,arg2,arg3,arg4);
	}

	@Override
	public void glVertexP3uiv(int arg0,int[] arg1) {
		org.lwjgl.opengl.GL43.glVertexP3uiv(arg0,arg1);
	}

	@Override
	public void glVertexP3uiv(int arg0,java.nio.IntBuffer arg1) {
		org.lwjgl.opengl.GL43.glVertexP3uiv(arg0,arg1);
	}

	@Override
	public void glArrayElement(int arg0) {
		org.lwjgl.opengl.GL43.glArrayElement(arg0);
	}

	@Override
	public void glVertexAttrib4usv(int arg0,java.nio.ShortBuffer arg1) {
		org.lwjgl.opengl.GL43.glVertexAttrib4usv(arg0,arg1);
	}

	@Override
	public void glVertexAttrib4usv(int arg0,short[] arg1) {
		org.lwjgl.opengl.GL43.glVertexAttrib4usv(arg0,arg1);
	}

	@Override
	public int glGetVertexAttribi(int arg0,int arg1) {
		return org.lwjgl.opengl.GL43.glGetVertexAttribi(arg0,arg1);
	}

	@Override
	public void nglGetObjectLabel(int arg0,int arg1,int arg2,long arg3,long arg4) {
		org.lwjgl.opengl.GL43.nglGetObjectLabel(arg0,arg1,arg2,arg3,arg4);
	}

	@Override
	public void glMultiTexCoord1iv(int arg0,java.nio.IntBuffer arg1) {
		org.lwjgl.opengl.GL43.glMultiTexCoord1iv(arg0,arg1);
	}

	@Override
	public void glMultiTexCoord1iv(int arg0,int[] arg1) {
		org.lwjgl.opengl.GL43.glMultiTexCoord1iv(arg0,arg1);
	}

	@Override
	public void nglColor3uiv(long arg0) {
		org.lwjgl.opengl.GL43.nglColor3uiv(arg0);
	}

	@Override
	public void glBlendColor(float arg0,float arg1,float arg2,float arg3) {
		org.lwjgl.opengl.GL43.glBlendColor(arg0,arg1,arg2,arg3);
	}

	@Override
	public void nglDrawPixels(int arg0,int arg1,int arg2,int arg3,long arg4) {
		org.lwjgl.opengl.GL43.nglDrawPixels(arg0,arg1,arg2,arg3,arg4);
	}

	@Override
	public void glProgramUniformMatrix3x4fv(int arg0,int arg1,boolean arg2,float[] arg3) {
		org.lwjgl.opengl.GL43.glProgramUniformMatrix3x4fv(arg0,arg1,arg2,arg3);
	}

	@Override
	public void glProgramUniformMatrix3x4fv(int arg0,int arg1,boolean arg2,java.nio.FloatBuffer arg3) {
		org.lwjgl.opengl.GL43.glProgramUniformMatrix3x4fv(arg0,arg1,arg2,arg3);
	}

	@Override
	public void nglUniform4iv(int arg0,int arg1,long arg2) {
		org.lwjgl.opengl.GL43.nglUniform4iv(arg0,arg1,arg2);
	}

	@Override
	public int glGetUniformBlockIndex(int arg0,java.nio.ByteBuffer arg1) {
		return org.lwjgl.opengl.GL43.glGetUniformBlockIndex(arg0,arg1);
	}

	@Override
	public int glGetUniformBlockIndex(int arg0,java.lang.CharSequence arg1) {
		return org.lwjgl.opengl.GL43.glGetUniformBlockIndex(arg0,arg1);
	}

	@Override
	public void nglGetLightfv(int arg0,int arg1,long arg2) {
		org.lwjgl.opengl.GL43.nglGetLightfv(arg0,arg1,arg2);
	}

	@Override
	public void glInvalidateBufferData(int arg0) {
		org.lwjgl.opengl.GL43.glInvalidateBufferData(arg0);
	}

	@Override
	public void glProgramUniformMatrix4x2fv(int arg0,int arg1,boolean arg2,float[] arg3) {
		org.lwjgl.opengl.GL43.glProgramUniformMatrix4x2fv(arg0,arg1,arg2,arg3);
	}

	@Override
	public void glProgramUniformMatrix4x2fv(int arg0,int arg1,boolean arg2,java.nio.FloatBuffer arg3) {
		org.lwjgl.opengl.GL43.glProgramUniformMatrix4x2fv(arg0,arg1,arg2,arg3);
	}

	@Override
	public void nglBufferSubData(int arg0,long arg1,long arg2,long arg3) {
		org.lwjgl.opengl.GL43.nglBufferSubData(arg0,arg1,arg2,arg3);
	}

	@Override
	public void glWindowPos3fv(float[] arg0) {
		org.lwjgl.opengl.GL43.glWindowPos3fv(arg0);
	}

	@Override
	public void glWindowPos3fv(java.nio.FloatBuffer arg0) {
		org.lwjgl.opengl.GL43.glWindowPos3fv(arg0);
	}

	@Override
	public void nglColorPointer(int arg0,int arg1,int arg2,long arg3) {
		org.lwjgl.opengl.GL43.nglColorPointer(arg0,arg1,arg2,arg3);
	}

	@Override
	public void glGetVertexAttribfv(int arg0,int arg1,java.nio.FloatBuffer arg2) {
		org.lwjgl.opengl.GL43.glGetVertexAttribfv(arg0,arg1,arg2);
	}

	@Override
	public void glGetVertexAttribfv(int arg0,int arg1,float[] arg2) {
		org.lwjgl.opengl.GL43.glGetVertexAttribfv(arg0,arg1,arg2);
	}

	@Override
	public void glUniformMatrix3x4fv(int arg0,boolean arg1,float[] arg2) {
		org.lwjgl.opengl.GL43.glUniformMatrix3x4fv(arg0,arg1,arg2);
	}

	@Override
	public void glUniformMatrix3x4fv(int arg0,boolean arg1,java.nio.FloatBuffer arg2) {
		org.lwjgl.opengl.GL43.glUniformMatrix3x4fv(arg0,arg1,arg2);
	}

	@Override
	public void nglMap1d(int arg0,double arg1,double arg2,int arg3,int arg4,long arg5) {
		org.lwjgl.opengl.GL43.nglMap1d(arg0,arg1,arg2,arg3,arg4,arg5);
	}

	@Override
	public void nglMap1f(int arg0,float arg1,float arg2,int arg3,int arg4,long arg5) {
		org.lwjgl.opengl.GL43.nglMap1f(arg0,arg1,arg2,arg3,arg4,arg5);
	}

	@Override
	public void glCompressedTexImage3D(int arg0,int arg1,int arg2,int arg3,int arg4,int arg5,int arg6,int arg7,long arg8) {
		org.lwjgl.opengl.GL43.glCompressedTexImage3D(arg0,arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8);
	}

	@Override
	public void glCompressedTexImage3D(int arg0,int arg1,int arg2,int arg3,int arg4,int arg5,int arg6,java.nio.ByteBuffer arg7) {
		org.lwjgl.opengl.GL43.glCompressedTexImage3D(arg0,arg1,arg2,arg3,arg4,arg5,arg6,arg7);
	}

	@Override
	public boolean glUnmapBuffer(int arg0) {
		return org.lwjgl.opengl.GL43.glUnmapBuffer(arg0);
	}

	@Override
	public float glGetTexLevelParameterf(int arg0,int arg1,int arg2) {
		return org.lwjgl.opengl.GL43.glGetTexLevelParameterf(arg0,arg1,arg2);
	}

	@Override
	public void nglWindowPos2fv(long arg0) {
		org.lwjgl.opengl.GL43.nglWindowPos2fv(arg0);
	}

	@Override
	public void nglMultiTexCoordP4uiv(int arg0,int arg1,long arg2) {
		org.lwjgl.opengl.GL43.nglMultiTexCoordP4uiv(arg0,arg1,arg2);
	}

	@Override
	public int glGetTexLevelParameteri(int arg0,int arg1,int arg2) {
		return org.lwjgl.opengl.GL43.glGetTexLevelParameteri(arg0,arg1,arg2);
	}

	@Override
	public void glPointParameteri(int arg0,int arg1) {
		org.lwjgl.opengl.GL43.glPointParameteri(arg0,arg1);
	}

	@Override
	public void nglUniformMatrix3x2dv(int arg0,int arg1,boolean arg2,long arg3) {
		org.lwjgl.opengl.GL43.nglUniformMatrix3x2dv(arg0,arg1,arg2,arg3);
	}

	@Override
	public void glPointParameterf(int arg0,float arg1) {
		org.lwjgl.opengl.GL43.glPointParameterf(arg0,arg1);
	}

	@Override
	public void glDepthRangeArrayv(int arg0,double[] arg1) {
		org.lwjgl.opengl.GL43.glDepthRangeArrayv(arg0,arg1);
	}

	@Override
	public void glDepthRangeArrayv(int arg0,java.nio.DoubleBuffer arg1) {
		org.lwjgl.opengl.GL43.glDepthRangeArrayv(arg0,arg1);
	}

	@Override
	public void nglReadPixels(int arg0,int arg1,int arg2,int arg3,int arg4,int arg5,long arg6) {
		org.lwjgl.opengl.GL43.nglReadPixels(arg0,arg1,arg2,arg3,arg4,arg5,arg6);
	}

	@Override
	public void nglTexCoord3sv(long arg0) {
		org.lwjgl.opengl.GL43.nglTexCoord3sv(arg0);
	}

	@Override
	public void nglGetQueryIndexediv(int arg0,int arg1,int arg2,long arg3) {
		org.lwjgl.opengl.GL43.nglGetQueryIndexediv(arg0,arg1,arg2,arg3);
	}

	@Override
	public void glProgramUniform4dv(int arg0,int arg1,double[] arg2) {
		org.lwjgl.opengl.GL43.glProgramUniform4dv(arg0,arg1,arg2);
	}

	@Override
	public void glProgramUniform4dv(int arg0,int arg1,java.nio.DoubleBuffer arg2) {
		org.lwjgl.opengl.GL43.glProgramUniform4dv(arg0,arg1,arg2);
	}

	@Override
	public void nglUniformMatrix2x4dv(int arg0,int arg1,boolean arg2,long arg3) {
		org.lwjgl.opengl.GL43.nglUniformMatrix2x4dv(arg0,arg1,arg2,arg3);
	}

	@Override
	public void nglMap2d(int arg0,double arg1,double arg2,int arg3,int arg4,double arg5,double arg6,int arg7,int arg8,long arg9) {
		org.lwjgl.opengl.GL43.nglMap2d(arg0,arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9);
	}

	@Override
	public void glUniformMatrix3x4dv(int arg0,boolean arg1,java.nio.DoubleBuffer arg2) {
		org.lwjgl.opengl.GL43.glUniformMatrix3x4dv(arg0,arg1,arg2);
	}

	@Override
	public void glUniformMatrix3x4dv(int arg0,boolean arg1,double[] arg2) {
		org.lwjgl.opengl.GL43.glUniformMatrix3x4dv(arg0,arg1,arg2);
	}

	@Override
	public void nglMap2f(int arg0,float arg1,float arg2,int arg3,int arg4,float arg5,float arg6,int arg7,int arg8,long arg9) {
		org.lwjgl.opengl.GL43.nglMap2f(arg0,arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9);
	}

	@Override
	public void glColor3iv(int[] arg0) {
		org.lwjgl.opengl.GL43.glColor3iv(arg0);
	}

	@Override
	public void glColor3iv(java.nio.IntBuffer arg0) {
		org.lwjgl.opengl.GL43.glColor3iv(arg0);
	}

	@Override
	public void nglGetPixelMapuiv(int arg0,long arg1) {
		org.lwjgl.opengl.GL43.nglGetPixelMapuiv(arg0,arg1);
	}

	@Override
	public void glInitNames() {
		org.lwjgl.opengl.GL43.glInitNames();
	}

	@Override
	public void glTexCoord4dv(java.nio.DoubleBuffer arg0) {
		org.lwjgl.opengl.GL43.glTexCoord4dv(arg0);
	}

	@Override
	public void glTexCoord4dv(double[] arg0) {
		org.lwjgl.opengl.GL43.glTexCoord4dv(arg0);
	}

	@Override
	public void nglGetInternalformativ(int arg0,int arg1,int arg2,int arg3,long arg4) {
		org.lwjgl.opengl.GL43.nglGetInternalformativ(arg0,arg1,arg2,arg3,arg4);
	}

	@Override
	public void glVertexAttribI2ui(int arg0,int arg1,int arg2) {
		org.lwjgl.opengl.GL43.glVertexAttribI2ui(arg0,arg1,arg2);
	}

	@Override
	public void glPrimitiveRestartIndex(int arg0) {
		org.lwjgl.opengl.GL43.glPrimitiveRestartIndex(arg0);
	}

	@Override
	public void glTranslatef(float arg0,float arg1,float arg2) {
		org.lwjgl.opengl.GL43.glTranslatef(arg0,arg1,arg2);
	}

	@Override
	public void glPopMatrix() {
		org.lwjgl.opengl.GL43.glPopMatrix();
	}

	@Override
	public java.lang.String glGetActiveSubroutineName_String(int arg0,int arg1,int arg2,int arg3) {
		return org.lwjgl.opengl.GL43.glGetActiveSubroutineName(arg0,arg1,arg2,arg3);
	}

	@Override
	public void glGetActiveSubroutineName(int arg0,int arg1,int arg2,int[] arg3,java.nio.ByteBuffer arg4) {
		org.lwjgl.opengl.GL43.glGetActiveSubroutineName(arg0,arg1,arg2,arg3,arg4);
	}

	@Override
	public void glGetActiveSubroutineName(int arg0,int arg1,int arg2,java.nio.IntBuffer arg3,java.nio.ByteBuffer arg4) {
		org.lwjgl.opengl.GL43.glGetActiveSubroutineName(arg0,arg1,arg2,arg3,arg4);
	}

	@Override
	public java.lang.String glGetActiveSubroutineName_String(int arg0,int arg1,int arg2) {
		return org.lwjgl.opengl.GL43.glGetActiveSubroutineName(arg0,arg1,arg2);
	}

	@Override
	public void glTranslated(double arg0,double arg1,double arg2) {
		org.lwjgl.opengl.GL43.glTranslated(arg0,arg1,arg2);
	}

	@Override
	public java.nio.ByteBuffer glMapBufferRange_ByteBuffer(int arg0,long arg1,long arg2,int arg3,java.nio.ByteBuffer arg4) {
		return org.lwjgl.opengl.GL43.glMapBufferRange(arg0,arg1,arg2,arg3,arg4);
	}

	@Override
	public java.nio.ByteBuffer glMapBufferRange_ByteBuffer(int arg0,long arg1,long arg2,int arg3) {
		return org.lwjgl.opengl.GL43.glMapBufferRange(arg0,arg1,arg2,arg3);
	}

	@Override
	public boolean glIsFramebuffer(int arg0) {
		return org.lwjgl.opengl.GL43.glIsFramebuffer(arg0);
	}

	@Override
	public void glColor3s(short arg0,short arg1,short arg2) {
		org.lwjgl.opengl.GL43.glColor3s(arg0,arg1,arg2);
	}

	@Override
	public void glColor3f(float arg0,float arg1,float arg2) {
		org.lwjgl.opengl.GL43.glColor3f(arg0,arg1,arg2);
	}

	@Override
	public void glTexCoordP1ui(int arg0,int arg1) {
		org.lwjgl.opengl.GL43.glTexCoordP1ui(arg0,arg1);
	}

	@Override
	public void nglGetLightiv(int arg0,int arg1,long arg2) {
		org.lwjgl.opengl.GL43.nglGetLightiv(arg0,arg1,arg2);
	}

	@Override
	public void glColor3fv(float[] arg0) {
		org.lwjgl.opengl.GL43.glColor3fv(arg0);
	}

	@Override
	public void glColor3fv(java.nio.FloatBuffer arg0) {
		org.lwjgl.opengl.GL43.glColor3fv(arg0);
	}

	@Override
	public void glColor3i(int arg0,int arg1,int arg2) {
		org.lwjgl.opengl.GL43.glColor3i(arg0,arg1,arg2);
	}

	@Override
	public void glCompressedTexImage1D(int arg0,int arg1,int arg2,int arg3,int arg4,int arg5,long arg6) {
		org.lwjgl.opengl.GL43.glCompressedTexImage1D(arg0,arg1,arg2,arg3,arg4,arg5,arg6);
	}

	@Override
	public void glCompressedTexImage1D(int arg0,int arg1,int arg2,int arg3,int arg4,java.nio.ByteBuffer arg5) {
		org.lwjgl.opengl.GL43.glCompressedTexImage1D(arg0,arg1,arg2,arg3,arg4,arg5);
	}

	@Override
	public void glGetShaderSource(int arg0,java.nio.IntBuffer arg1,java.nio.ByteBuffer arg2) {
		org.lwjgl.opengl.GL43.glGetShaderSource(arg0,arg1,arg2);
	}

	@Override
	public void glGetShaderSource(int arg0,int[] arg1,java.nio.ByteBuffer arg2) {
		org.lwjgl.opengl.GL43.glGetShaderSource(arg0,arg1,arg2);
	}

	@Override
	public java.lang.String glGetShaderSource_String(int arg0,int arg1) {
		return org.lwjgl.opengl.GL43.glGetShaderSource(arg0,arg1);
	}

	@Override
	public java.lang.String glGetShaderSource_String(int arg0) {
		return org.lwjgl.opengl.GL43.glGetShaderSource(arg0);
	}

	@Override
	public void glColor3b(byte arg0,byte arg1,byte arg2) {
		org.lwjgl.opengl.GL43.glColor3b(arg0,arg1,arg2);
	}

	@Override
	public void glColor3d(double arg0,double arg1,double arg2) {
		org.lwjgl.opengl.GL43.glColor3d(arg0,arg1,arg2);
	}

	@Override
	public void nglUniformMatrix3x2fv(int arg0,int arg1,boolean arg2,long arg3) {
		org.lwjgl.opengl.GL43.nglUniformMatrix3x2fv(arg0,arg1,arg2,arg3);
	}

	@Override
	public void glGetVertexAttribiv(int arg0,int arg1,java.nio.IntBuffer arg2) {
		org.lwjgl.opengl.GL43.glGetVertexAttribiv(arg0,arg1,arg2);
	}

	@Override
	public void glGetVertexAttribiv(int arg0,int arg1,int[] arg2) {
		org.lwjgl.opengl.GL43.glGetVertexAttribiv(arg0,arg1,arg2);
	}

	@Override
	public void glStencilOpSeparate(int arg0,int arg1,int arg2,int arg3) {
		org.lwjgl.opengl.GL43.glStencilOpSeparate(arg0,arg1,arg2,arg3);
	}

	@Override
	public void glRasterPos2sv(java.nio.ShortBuffer arg0) {
		org.lwjgl.opengl.GL43.glRasterPos2sv(arg0);
	}

	@Override
	public void glRasterPos2sv(short[] arg0) {
		org.lwjgl.opengl.GL43.glRasterPos2sv(arg0);
	}

	@Override
	public void nglUniformMatrix2x4fv(int arg0,int arg1,boolean arg2,long arg3) {
		org.lwjgl.opengl.GL43.nglUniformMatrix2x4fv(arg0,arg1,arg2,arg3);
	}

	@Override
	public void glColor4s(short arg0,short arg1,short arg2,short arg3) {
		org.lwjgl.opengl.GL43.glColor4s(arg0,arg1,arg2,arg3);
	}

	@Override
	public void glGetProgramBinary(int arg0,int[] arg1,int[] arg2,java.nio.ByteBuffer arg3) {
		org.lwjgl.opengl.GL43.glGetProgramBinary(arg0,arg1,arg2,arg3);
	}

	@Override
	public void glGetProgramBinary(int arg0,java.nio.IntBuffer arg1,java.nio.IntBuffer arg2,java.nio.ByteBuffer arg3) {
		org.lwjgl.opengl.GL43.glGetProgramBinary(arg0,arg1,arg2,arg3);
	}

	@Override
	public void glColor4f(float arg0,float arg1,float arg2,float arg3) {
		org.lwjgl.opengl.GL43.glColor4f(arg0,arg1,arg2,arg3);
	}

	@Override
	public void glColor4i(int arg0,int arg1,int arg2,int arg3) {
		org.lwjgl.opengl.GL43.glColor4i(arg0,arg1,arg2,arg3);
	}

	@Override
	public void glGetQueryObjectiv(int arg0,int arg1,int[] arg2) {
		org.lwjgl.opengl.GL43.glGetQueryObjectiv(arg0,arg1,arg2);
	}

	@Override
	public void glGetQueryObjectiv(int arg0,int arg1,java.nio.IntBuffer arg2) {
		org.lwjgl.opengl.GL43.glGetQueryObjectiv(arg0,arg1,arg2);
	}

	@Override
	public void glGetQueryObjectiv(int arg0,int arg1,long arg2) {
		org.lwjgl.opengl.GL43.glGetQueryObjectiv(arg0,arg1,arg2);
	}

	@Override
	public void glCompressedTexImage2D(int arg0,int arg1,int arg2,int arg3,int arg4,int arg5,java.nio.ByteBuffer arg6) {
		org.lwjgl.opengl.GL43.glCompressedTexImage2D(arg0,arg1,arg2,arg3,arg4,arg5,arg6);
	}

	@Override
	public void glCompressedTexImage2D(int arg0,int arg1,int arg2,int arg3,int arg4,int arg5,int arg6,long arg7) {
		org.lwjgl.opengl.GL43.glCompressedTexImage2D(arg0,arg1,arg2,arg3,arg4,arg5,arg6,arg7);
	}

	@Override
	public void glDepthRangeIndexed(int arg0,double arg1,double arg2) {
		org.lwjgl.opengl.GL43.glDepthRangeIndexed(arg0,arg1,arg2);
	}

	@Override
	public void glColorP4uiv(int arg0,int[] arg1) {
		org.lwjgl.opengl.GL43.glColorP4uiv(arg0,arg1);
	}

	@Override
	public void glColorP4uiv(int arg0,java.nio.IntBuffer arg1) {
		org.lwjgl.opengl.GL43.glColorP4uiv(arg0,arg1);
	}

	@Override
	public void glColor4b(byte arg0,byte arg1,byte arg2,byte arg3) {
		org.lwjgl.opengl.GL43.glColor4b(arg0,arg1,arg2,arg3);
	}

	@Override
	public void glCopyPixels(int arg0,int arg1,int arg2,int arg3,int arg4) {
		org.lwjgl.opengl.GL43.glCopyPixels(arg0,arg1,arg2,arg3,arg4);
	}

	@Override
	public void glColor4d(double arg0,double arg1,double arg2,double arg3) {
		org.lwjgl.opengl.GL43.glColor4d(arg0,arg1,arg2,arg3);
	}

	@Override
	public void glBindTransformFeedback(int arg0,int arg1) {
		org.lwjgl.opengl.GL43.glBindTransformFeedback(arg0,arg1);
	}

	@Override
	public int glGetProgramPipelinei(int arg0,int arg1) {
		return org.lwjgl.opengl.GL43.glGetProgramPipelinei(arg0,arg1);
	}

	@Override
	public void glDeleteBuffers(int[] arg0) {
		org.lwjgl.opengl.GL43.glDeleteBuffers(arg0);
	}

	@Override
	public void glDeleteBuffers(int arg0) {
		org.lwjgl.opengl.GL43.glDeleteBuffers(arg0);
	}

	@Override
	public void glDeleteBuffers(java.nio.IntBuffer arg0) {
		org.lwjgl.opengl.GL43.glDeleteBuffers(arg0);
	}

	@Override
	public boolean nglAreTexturesResident(int arg0,long arg1,long arg2) {
		return org.lwjgl.opengl.GL43.nglAreTexturesResident(arg0,arg1,arg2);
	}

	@Override
	public void glColor3ui(int arg0,int arg1,int arg2) {
		org.lwjgl.opengl.GL43.glColor3ui(arg0,arg1,arg2);
	}

	@Override
	public void glCopyTexSubImage3D(int arg0,int arg1,int arg2,int arg3,int arg4,int arg5,int arg6,int arg7,int arg8) {
		org.lwjgl.opengl.GL43.glCopyTexSubImage3D(arg0,arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8);
	}

	@Override
	public void glNormalP3ui(int arg0,int arg1) {
		org.lwjgl.opengl.GL43.glNormalP3ui(arg0,arg1);
	}

	@Override
	public void nglVertexAttrib2sv(int arg0,long arg1) {
		org.lwjgl.opengl.GL43.nglVertexAttrib2sv(arg0,arg1);
	}

	@Override
	public void glColor3ub(byte arg0,byte arg1,byte arg2) {
		org.lwjgl.opengl.GL43.glColor3ub(arg0,arg1,arg2);
	}

	@Override
	public void glObjectLabel(int arg0,int arg1,java.nio.ByteBuffer arg2) {
		org.lwjgl.opengl.GL43.glObjectLabel(arg0,arg1,arg2);
	}

	@Override
	public void glObjectLabel(int arg0,int arg1,java.lang.CharSequence arg2) {
		org.lwjgl.opengl.GL43.glObjectLabel(arg0,arg1,arg2);
	}

	@Override
	public void glColor3us(short arg0,short arg1,short arg2) {
		org.lwjgl.opengl.GL43.glColor3us(arg0,arg1,arg2);
	}

	@Override
	public void glVertex2d(double arg0,double arg1) {
		org.lwjgl.opengl.GL43.glVertex2d(arg0,arg1);
	}

	@Override
	public void glDrawElementsInstancedBaseVertexBaseInstance(int arg0,int arg1,int arg2,long arg3,int arg4,int arg5,int arg6) {
		org.lwjgl.opengl.GL43.glDrawElementsInstancedBaseVertexBaseInstance(arg0,arg1,arg2,arg3,arg4,arg5,arg6);
	}

	@Override
	public void glDrawElementsInstancedBaseVertexBaseInstance(int arg0,int arg1,java.nio.ByteBuffer arg2,int arg3,int arg4,int arg5) {
		org.lwjgl.opengl.GL43.glDrawElementsInstancedBaseVertexBaseInstance(arg0,arg1,arg2,arg3,arg4,arg5);
	}

	@Override
	public void glDrawElementsInstancedBaseVertexBaseInstance(int arg0,java.nio.IntBuffer arg1,int arg2,int arg3,int arg4) {
		org.lwjgl.opengl.GL43.glDrawElementsInstancedBaseVertexBaseInstance(arg0,arg1,arg2,arg3,arg4);
	}

	@Override
	public void glDrawElementsInstancedBaseVertexBaseInstance(int arg0,java.nio.ShortBuffer arg1,int arg2,int arg3,int arg4) {
		org.lwjgl.opengl.GL43.glDrawElementsInstancedBaseVertexBaseInstance(arg0,arg1,arg2,arg3,arg4);
	}

	@Override
	public void glDrawElementsInstancedBaseVertexBaseInstance(int arg0,java.nio.ByteBuffer arg1,int arg2,int arg3,int arg4) {
		org.lwjgl.opengl.GL43.glDrawElementsInstancedBaseVertexBaseInstance(arg0,arg1,arg2,arg3,arg4);
	}

	@Override
	public void glVertex2f(float arg0,float arg1) {
		org.lwjgl.opengl.GL43.glVertex2f(arg0,arg1);
	}

	@Override
	public void nglColor3usv(long arg0) {
		org.lwjgl.opengl.GL43.nglColor3usv(arg0);
	}

	@Override
	public void glVertex2i(int arg0,int arg1) {
		org.lwjgl.opengl.GL43.glVertex2i(arg0,arg1);
	}

	@Override
	public void glVertexAttribI4ubv(int arg0,java.nio.ByteBuffer arg1) {
		org.lwjgl.opengl.GL43.glVertexAttribI4ubv(arg0,arg1);
	}

	@Override
	public void glProgramUniform4iv(int arg0,int arg1,int[] arg2) {
		org.lwjgl.opengl.GL43.glProgramUniform4iv(arg0,arg1,arg2);
	}

	@Override
	public void glProgramUniform4iv(int arg0,int arg1,java.nio.IntBuffer arg2) {
		org.lwjgl.opengl.GL43.glProgramUniform4iv(arg0,arg1,arg2);
	}

	@Override
	public void glPixelStoref(int arg0,float arg1) {
		org.lwjgl.opengl.GL43.glPixelStoref(arg0,arg1);
	}

	@Override
	public void nglNormal3iv(long arg0) {
		org.lwjgl.opengl.GL43.nglNormal3iv(arg0);
	}

	@Override
	public void nglPixelMapfv(int arg0,int arg1,long arg2) {
		org.lwjgl.opengl.GL43.nglPixelMapfv(arg0,arg1,arg2);
	}

	@Override
	public void glStencilFuncSeparate(int arg0,int arg1,int arg2,int arg3) {
		org.lwjgl.opengl.GL43.glStencilFuncSeparate(arg0,arg1,arg2,arg3);
	}

	@Override
	public void nglGetQueryObjectuiv(int arg0,int arg1,long arg2) {
		org.lwjgl.opengl.GL43.nglGetQueryObjectuiv(arg0,arg1,arg2);
	}

	@Override
	public void glVertex2s(short arg0,short arg1) {
		org.lwjgl.opengl.GL43.glVertex2s(arg0,arg1);
	}

	@Override
	public void glPixelStorei(int arg0,int arg1) {
		org.lwjgl.opengl.GL43.glPixelStorei(arg0,arg1);
	}

	@Override
	public void glGetInteger64i_v(int arg0,int arg1,java.nio.LongBuffer arg2) {
		org.lwjgl.opengl.GL43.glGetInteger64i_v(arg0,arg1,arg2);
	}

	@Override
	public void glGetInteger64i_v(int arg0,int arg1,long[] arg2) {
		org.lwjgl.opengl.GL43.glGetInteger64i_v(arg0,arg1,arg2);
	}

	@Override
	public int glGetProgramResourceLocationIndex(int arg0,int arg1,java.lang.CharSequence arg2) {
		return org.lwjgl.opengl.GL43.glGetProgramResourceLocationIndex(arg0,arg1,arg2);
	}

	@Override
	public int glGetProgramResourceLocationIndex(int arg0,int arg1,java.nio.ByteBuffer arg2) {
		return org.lwjgl.opengl.GL43.glGetProgramResourceLocationIndex(arg0,arg1,arg2);
	}

	@Override
	public void nglEvalCoord2dv(long arg0) {
		org.lwjgl.opengl.GL43.nglEvalCoord2dv(arg0);
	}

	@Override
	public void glVertex3d(double arg0,double arg1,double arg2) {
		org.lwjgl.opengl.GL43.glVertex3d(arg0,arg1,arg2);
	}

	@Override
	public void glVertex3f(float arg0,float arg1,float arg2) {
		org.lwjgl.opengl.GL43.glVertex3f(arg0,arg1,arg2);
	}

	@Override
	public void glVertex3i(int arg0,int arg1,int arg2) {
		org.lwjgl.opengl.GL43.glVertex3i(arg0,arg1,arg2);
	}

	@Override
	public void glProgramUniform4fv(int arg0,int arg1,float[] arg2) {
		org.lwjgl.opengl.GL43.glProgramUniform4fv(arg0,arg1,arg2);
	}

	@Override
	public void glProgramUniform4fv(int arg0,int arg1,java.nio.FloatBuffer arg2) {
		org.lwjgl.opengl.GL43.glProgramUniform4fv(arg0,arg1,arg2);
	}

	@Override
	public void glSecondaryColor3sv(short[] arg0) {
		org.lwjgl.opengl.GL43.glSecondaryColor3sv(arg0);
	}

	@Override
	public void glSecondaryColor3sv(java.nio.ShortBuffer arg0) {
		org.lwjgl.opengl.GL43.glSecondaryColor3sv(arg0);
	}

	@Override
	public void nglFeedbackBuffer(int arg0,int arg1,long arg2) {
		org.lwjgl.opengl.GL43.nglFeedbackBuffer(arg0,arg1,arg2);
	}

	@Override
	public void glCopyTexSubImage1D(int arg0,int arg1,int arg2,int arg3,int arg4,int arg5) {
		org.lwjgl.opengl.GL43.glCopyTexSubImage1D(arg0,arg1,arg2,arg3,arg4,arg5);
	}

	@Override
	public void glVertex3s(short arg0,short arg1,short arg2) {
		org.lwjgl.opengl.GL43.glVertex3s(arg0,arg1,arg2);
	}

	@Override
	public void nglWindowPos2dv(long arg0) {
		org.lwjgl.opengl.GL43.nglWindowPos2dv(arg0);
	}

	@Override
	public void glColor3sv(java.nio.ShortBuffer arg0) {
		org.lwjgl.opengl.GL43.glColor3sv(arg0);
	}

	@Override
	public void glColor3sv(short[] arg0) {
		org.lwjgl.opengl.GL43.glColor3sv(arg0);
	}

	@Override
	public void glGetPixelMapfv(int arg0,java.nio.FloatBuffer arg1) {
		org.lwjgl.opengl.GL43.glGetPixelMapfv(arg0,arg1);
	}

	@Override
	public void glGetPixelMapfv(int arg0,long arg1) {
		org.lwjgl.opengl.GL43.glGetPixelMapfv(arg0,arg1);
	}

	@Override
	public void glGetPixelMapfv(int arg0,float[] arg1) {
		org.lwjgl.opengl.GL43.glGetPixelMapfv(arg0,arg1);
	}

	@Override
	public void nglProgramUniformMatrix4dv(int arg0,int arg1,int arg2,boolean arg3,long arg4) {
		org.lwjgl.opengl.GL43.nglProgramUniformMatrix4dv(arg0,arg1,arg2,arg3,arg4);
	}

	@Override
	public void glVertex4d(double arg0,double arg1,double arg2,double arg3) {
		org.lwjgl.opengl.GL43.glVertex4d(arg0,arg1,arg2,arg3);
	}

	@Override
	public void glVertex4f(float arg0,float arg1,float arg2,float arg3) {
		org.lwjgl.opengl.GL43.glVertex4f(arg0,arg1,arg2,arg3);
	}

	@Override
	public void nglMultiDrawArraysIndirect(int arg0,long arg1,int arg2,int arg3) {
		org.lwjgl.opengl.GL43.nglMultiDrawArraysIndirect(arg0,arg1,arg2,arg3);
	}

	@Override
	public void glVertex4i(int arg0,int arg1,int arg2,int arg3) {
		org.lwjgl.opengl.GL43.glVertex4i(arg0,arg1,arg2,arg3);
	}

	@Override
	public void glColorMaterial(int arg0,int arg1) {
		org.lwjgl.opengl.GL43.glColorMaterial(arg0,arg1);
	}

	@Override
	public void glValidateProgramPipeline(int arg0) {
		org.lwjgl.opengl.GL43.glValidateProgramPipeline(arg0);
	}

	@Override
	public void glGetProgramPipelineiv(int arg0,int arg1,int[] arg2) {
		org.lwjgl.opengl.GL43.glGetProgramPipelineiv(arg0,arg1,arg2);
	}

	@Override
	public void glGetProgramPipelineiv(int arg0,int arg1,java.nio.IntBuffer arg2) {
		org.lwjgl.opengl.GL43.glGetProgramPipelineiv(arg0,arg1,arg2);
	}

	@Override
	public void nglVertexAttribI3uiv(int arg0,long arg1) {
		org.lwjgl.opengl.GL43.nglVertexAttribI3uiv(arg0,arg1);
	}

	@Override
	public void glCopyTexSubImage2D(int arg0,int arg1,int arg2,int arg3,int arg4,int arg5,int arg6,int arg7) {
		org.lwjgl.opengl.GL43.glCopyTexSubImage2D(arg0,arg1,arg2,arg3,arg4,arg5,arg6,arg7);
	}

	@Override
	public void nglGenSamplers(int arg0,long arg1) {
		org.lwjgl.opengl.GL43.nglGenSamplers(arg0,arg1);
	}

	@Override
	public void glVertex4s(short arg0,short arg1,short arg2,short arg3) {
		org.lwjgl.opengl.GL43.glVertex4s(arg0,arg1,arg2,arg3);
	}

	@Override
	public void glSecondaryColor3ub(byte arg0,byte arg1,byte arg2) {
		org.lwjgl.opengl.GL43.glSecondaryColor3ub(arg0,arg1,arg2);
	}

	@Override
	public void glUniform2ui(int arg0,int arg1,int arg2) {
		org.lwjgl.opengl.GL43.glUniform2ui(arg0,arg1,arg2);
	}

	@Override
	public void glSecondaryColor3ui(int arg0,int arg1,int arg2) {
		org.lwjgl.opengl.GL43.glSecondaryColor3ui(arg0,arg1,arg2);
	}

	@Override
	public int glGetQueryObjecti(int arg0,int arg1) {
		return org.lwjgl.opengl.GL43.glGetQueryObjecti(arg0,arg1);
	}

	@Override
	public void nglGetQueryObjecti64v(int arg0,int arg1,long arg2) {
		org.lwjgl.opengl.GL43.nglGetQueryObjecti64v(arg0,arg1,arg2);
	}

	@Override
	public void glBlendEquationi(int arg0,int arg1) {
		org.lwjgl.opengl.GL43.glBlendEquationi(arg0,arg1);
	}

	@Override
	public void glSecondaryColor3us(short arg0,short arg1,short arg2) {
		org.lwjgl.opengl.GL43.glSecondaryColor3us(arg0,arg1,arg2);
	}

	@Override
	public boolean glIsProgramPipeline(int arg0) {
		return org.lwjgl.opengl.GL43.glIsProgramPipeline(arg0);
	}

	@Override
	public void glVertexAttrib1d(int arg0,double arg1) {
		org.lwjgl.opengl.GL43.glVertexAttrib1d(arg0,arg1);
	}

	@Override
	public void nglNormal3fv(long arg0) {
		org.lwjgl.opengl.GL43.nglNormal3fv(arg0);
	}

	@Override
	public void glVertexAttrib1f(int arg0,float arg1) {
		org.lwjgl.opengl.GL43.glVertexAttrib1f(arg0,arg1);
	}

	@Override
	public void nglMultiTexCoord1dv(int arg0,long arg1) {
		org.lwjgl.opengl.GL43.nglMultiTexCoord1dv(arg0,arg1);
	}

	@Override
	public void glVertexAttrib1s(int arg0,short arg1) {
		org.lwjgl.opengl.GL43.glVertexAttrib1s(arg0,arg1);
	}

	@Override
	public void glEndConditionalRender() {
		org.lwjgl.opengl.GL43.glEndConditionalRender();
	}

	@Override
	public void nglBufferData(int arg0,long arg1,long arg2,int arg3) {
		org.lwjgl.opengl.GL43.nglBufferData(arg0,arg1,arg2,arg3);
	}

	@Override
	public void nglProgramUniformMatrix4fv(int arg0,int arg1,int arg2,boolean arg3,long arg4) {
		org.lwjgl.opengl.GL43.nglProgramUniformMatrix4fv(arg0,arg1,arg2,arg3,arg4);
	}

	@Override
	public void nglGetSynciv(long arg0,int arg1,int arg2,long arg3,long arg4) {
		org.lwjgl.opengl.GL43.nglGetSynciv(arg0,arg1,arg2,arg3,arg4);
	}

	@Override
	public void glDeleteLists(int arg0,int arg1) {
		org.lwjgl.opengl.GL43.glDeleteLists(arg0,arg1);
	}

	@Override
	public void nglTexEnvfv(int arg0,int arg1,long arg2) {
		org.lwjgl.opengl.GL43.nglTexEnvfv(arg0,arg1,arg2);
	}

	@Override
	public void glGenSamplers(int[] arg0) {
		org.lwjgl.opengl.GL43.glGenSamplers(arg0);
	}

	@Override
	public void glGenSamplers(java.nio.IntBuffer arg0) {
		org.lwjgl.opengl.GL43.glGenSamplers(arg0);
	}

	@Override
	public int glGenSamplers() {
		return org.lwjgl.opengl.GL43.glGenSamplers();
	}

	@Override
	public void nglProgramUniform3iv(int arg0,int arg1,int arg2,long arg3) {
		org.lwjgl.opengl.GL43.nglProgramUniform3iv(arg0,arg1,arg2,arg3);
	}

	@Override
	public void nglGetShaderPrecisionFormat(int arg0,int arg1,long arg2,long arg3) {
		org.lwjgl.opengl.GL43.nglGetShaderPrecisionFormat(arg0,arg1,arg2,arg3);
	}

	@Override
	public void nglFogCoordPointer(int arg0,int arg1,long arg2) {
		org.lwjgl.opengl.GL43.nglFogCoordPointer(arg0,arg1,arg2);
	}

	@Override
	public void glWindowPos3dv(java.nio.DoubleBuffer arg0) {
		org.lwjgl.opengl.GL43.glWindowPos3dv(arg0);
	}

	@Override
	public void glWindowPos3dv(double[] arg0) {
		org.lwjgl.opengl.GL43.glWindowPos3dv(arg0);
	}

	@Override
	public void glSecondaryColor3usv(java.nio.ShortBuffer arg0) {
		org.lwjgl.opengl.GL43.glSecondaryColor3usv(arg0);
	}

	@Override
	public void glSecondaryColor3usv(short[] arg0) {
		org.lwjgl.opengl.GL43.glSecondaryColor3usv(arg0);
	}

	@Override
	public void glEvalCoord1d(double arg0) {
		org.lwjgl.opengl.GL43.glEvalCoord1d(arg0);
	}

	@Override
	public int glGetBufferParameteri(int arg0,int arg1) {
		return org.lwjgl.opengl.GL43.glGetBufferParameteri(arg0,arg1);
	}

	@Override
	public void glDebugMessageCallback(org.lwjgl.opengl.GLDebugMessageCallbackI arg0,long arg1) {
		org.lwjgl.opengl.GL43.glDebugMessageCallback(arg0,arg1);
	}

	@Override
	public void glEvalCoord1f(float arg0) {
		org.lwjgl.opengl.GL43.glEvalCoord1f(arg0);
	}

	@Override
	public void glSecondaryColorPointer(int arg0,int arg1,int arg2,long arg3) {
		org.lwjgl.opengl.GL43.glSecondaryColorPointer(arg0,arg1,arg2,arg3);
	}

	@Override
	public void glSecondaryColorPointer(int arg0,int arg1,int arg2,java.nio.FloatBuffer arg3) {
		org.lwjgl.opengl.GL43.glSecondaryColorPointer(arg0,arg1,arg2,arg3);
	}

	@Override
	public void glSecondaryColorPointer(int arg0,int arg1,int arg2,java.nio.IntBuffer arg3) {
		org.lwjgl.opengl.GL43.glSecondaryColorPointer(arg0,arg1,arg2,arg3);
	}

	@Override
	public void glSecondaryColorPointer(int arg0,int arg1,int arg2,java.nio.ShortBuffer arg3) {
		org.lwjgl.opengl.GL43.glSecondaryColorPointer(arg0,arg1,arg2,arg3);
	}

	@Override
	public void glSecondaryColorPointer(int arg0,int arg1,int arg2,java.nio.ByteBuffer arg3) {
		org.lwjgl.opengl.GL43.glSecondaryColorPointer(arg0,arg1,arg2,arg3);
	}

	@Override
	public void glVertexAttrib3f(int arg0,float arg1,float arg2,float arg3) {
		org.lwjgl.opengl.GL43.glVertexAttrib3f(arg0,arg1,arg2,arg3);
	}

	@Override
	public void glVertexAttrib3d(int arg0,double arg1,double arg2,double arg3) {
		org.lwjgl.opengl.GL43.glVertexAttrib3d(arg0,arg1,arg2,arg3);
	}

	@Override
	public void glPixelTransferf(int arg0,float arg1) {
		org.lwjgl.opengl.GL43.glPixelTransferf(arg0,arg1);
	}

	@Override
	public void glPixelTransferi(int arg0,int arg1) {
		org.lwjgl.opengl.GL43.glPixelTransferi(arg0,arg1);
	}

	@Override
	public void glFogCoordPointer(int arg0,int arg1,long arg2) {
		org.lwjgl.opengl.GL43.glFogCoordPointer(arg0,arg1,arg2);
	}

	@Override
	public void glFogCoordPointer(int arg0,int arg1,java.nio.ByteBuffer arg2) {
		org.lwjgl.opengl.GL43.glFogCoordPointer(arg0,arg1,arg2);
	}

	@Override
	public void glFogCoordPointer(int arg0,int arg1,java.nio.FloatBuffer arg2) {
		org.lwjgl.opengl.GL43.glFogCoordPointer(arg0,arg1,arg2);
	}

	@Override
	public void glFogCoordPointer(int arg0,int arg1,java.nio.ShortBuffer arg2) {
		org.lwjgl.opengl.GL43.glFogCoordPointer(arg0,arg1,arg2);
	}

	@Override
	public void glMultiTexCoord1dv(int arg0,double[] arg1) {
		org.lwjgl.opengl.GL43.glMultiTexCoord1dv(arg0,arg1);
	}

	@Override
	public void glMultiTexCoord1dv(int arg0,java.nio.DoubleBuffer arg1) {
		org.lwjgl.opengl.GL43.glMultiTexCoord1dv(arg0,arg1);
	}

	@Override
	public void nglNormal3dv(long arg0) {
		org.lwjgl.opengl.GL43.nglNormal3dv(arg0);
	}

	@Override
	public void nglTexEnviv(int arg0,int arg1,long arg2) {
		org.lwjgl.opengl.GL43.nglTexEnviv(arg0,arg1,arg2);
	}

	@Override
	public void nglTexImage1D(int arg0,int arg1,int arg2,int arg3,int arg4,int arg5,int arg6,long arg7) {
		org.lwjgl.opengl.GL43.nglTexImage1D(arg0,arg1,arg2,arg3,arg4,arg5,arg6,arg7);
	}

	@Override
	public void nglGetSamplerParameterIiv(int arg0,int arg1,long arg2) {
		org.lwjgl.opengl.GL43.nglGetSamplerParameterIiv(arg0,arg1,arg2);
	}

	@Override
	public void nglMultiTexCoord1fv(int arg0,long arg1) {
		org.lwjgl.opengl.GL43.nglMultiTexCoord1fv(arg0,arg1);
	}

	@Override
	public void glVertexAttrib3s(int arg0,short arg1,short arg2,short arg3) {
		org.lwjgl.opengl.GL43.glVertexAttrib3s(arg0,arg1,arg2,arg3);
	}

	@Override
	public void nglDeleteQueries(int arg0,long arg1) {
		org.lwjgl.opengl.GL43.nglDeleteQueries(arg0,arg1);
	}

	@Override
	public void glMultTransposeMatrixf(java.nio.FloatBuffer arg0) {
		org.lwjgl.opengl.GL43.glMultTransposeMatrixf(arg0);
	}

	@Override
	public void glMultTransposeMatrixf(float[] arg0) {
		org.lwjgl.opengl.GL43.glMultTransposeMatrixf(arg0);
	}

	@Override
	public void glEvalCoord2d(double arg0,double arg1) {
		org.lwjgl.opengl.GL43.glEvalCoord2d(arg0,arg1);
	}

	@Override
	public void glEvalCoord2f(float arg0,float arg1) {
		org.lwjgl.opengl.GL43.glEvalCoord2f(arg0,arg1);
	}

	@Override
	public void nglTexCoordP2uiv(int arg0,long arg1) {
		org.lwjgl.opengl.GL43.nglTexCoordP2uiv(arg0,arg1);
	}

	@Override
	public void glVertexAttribIPointer(int arg0,int arg1,int arg2,int arg3,java.nio.ShortBuffer arg4) {
		org.lwjgl.opengl.GL43.glVertexAttribIPointer(arg0,arg1,arg2,arg3,arg4);
	}

	@Override
	public void glVertexAttribIPointer(int arg0,int arg1,int arg2,int arg3,java.nio.IntBuffer arg4) {
		org.lwjgl.opengl.GL43.glVertexAttribIPointer(arg0,arg1,arg2,arg3,arg4);
	}

	@Override
	public void glVertexAttribIPointer(int arg0,int arg1,int arg2,int arg3,long arg4) {
		org.lwjgl.opengl.GL43.glVertexAttribIPointer(arg0,arg1,arg2,arg3,arg4);
	}

	@Override
	public void glVertexAttribIPointer(int arg0,int arg1,int arg2,int arg3,java.nio.ByteBuffer arg4) {
		org.lwjgl.opengl.GL43.glVertexAttribIPointer(arg0,arg1,arg2,arg3,arg4);
	}

	@Override
	public void glVertexAttrib2f(int arg0,float arg1,float arg2) {
		org.lwjgl.opengl.GL43.glVertexAttrib2f(arg0,arg1,arg2);
	}

	@Override
	public float glGetTexParameterf(int arg0,int arg1) {
		return org.lwjgl.opengl.GL43.glGetTexParameterf(arg0,arg1);
	}

	@Override
	public void nglGetProgramStageiv(int arg0,int arg1,int arg2,long arg3) {
		org.lwjgl.opengl.GL43.nglGetProgramStageiv(arg0,arg1,arg2,arg3);
	}

	@Override
	public void glVertexAttrib2d(int arg0,double arg1,double arg2) {
		org.lwjgl.opengl.GL43.glVertexAttrib2d(arg0,arg1,arg2);
	}

	@Override
	public int glGetTexParameteri(int arg0,int arg1) {
		return org.lwjgl.opengl.GL43.glGetTexParameteri(arg0,arg1);
	}

	@Override
	public void glCopyImageSubData(int arg0,int arg1,int arg2,int arg3,int arg4,int arg5,int arg6,int arg7,int arg8,int arg9,int arg10,int arg11,int arg12,int arg13,int arg14) {
		org.lwjgl.opengl.GL43.glCopyImageSubData(arg0,arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11,arg12,arg13,arg14);
	}

	@Override
	public void nglViewportIndexedfv(int arg0,long arg1) {
		org.lwjgl.opengl.GL43.nglViewportIndexedfv(arg0,arg1);
	}

	@Override
	public void glMultTransposeMatrixd(double[] arg0) {
		org.lwjgl.opengl.GL43.glMultTransposeMatrixd(arg0);
	}

	@Override
	public void glMultTransposeMatrixd(java.nio.DoubleBuffer arg0) {
		org.lwjgl.opengl.GL43.glMultTransposeMatrixd(arg0);
	}

	@Override
	public boolean glIsSync(long arg0) {
		return org.lwjgl.opengl.GL43.glIsSync(arg0);
	}

	@Override
	public void nglTexImage2D(int arg0,int arg1,int arg2,int arg3,int arg4,int arg5,int arg6,int arg7,long arg8) {
		org.lwjgl.opengl.GL43.nglTexImage2D(arg0,arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8);
	}

	@Override
	public void glFinish() {
		org.lwjgl.opengl.GL43.glFinish();
	}

	@Override
	public void glVertexAttrib2sv(int arg0,short[] arg1) {
		org.lwjgl.opengl.GL43.glVertexAttrib2sv(arg0,arg1);
	}

	@Override
	public void glVertexAttrib2sv(int arg0,java.nio.ShortBuffer arg1) {
		org.lwjgl.opengl.GL43.glVertexAttrib2sv(arg0,arg1);
	}

	@Override
	public void glFramebufferRenderbuffer(int arg0,int arg1,int arg2,int arg3) {
		org.lwjgl.opengl.GL43.glFramebufferRenderbuffer(arg0,arg1,arg2,arg3);
	}

	@Override
	public void glVertexAttrib2s(int arg0,short arg1,short arg2) {
		org.lwjgl.opengl.GL43.glVertexAttrib2s(arg0,arg1,arg2);
	}

	@Override
	public void glMultiTexCoord1fv(int arg0,float[] arg1) {
		org.lwjgl.opengl.GL43.glMultiTexCoord1fv(arg0,arg1);
	}

	@Override
	public void glMultiTexCoord1fv(int arg0,java.nio.FloatBuffer arg1) {
		org.lwjgl.opengl.GL43.glMultiTexCoord1fv(arg0,arg1);
	}

	@Override
	public void nglEvalCoord2fv(long arg0) {
		org.lwjgl.opengl.GL43.nglEvalCoord2fv(arg0);
	}

	@Override
	public void nglProgramUniform3fv(int arg0,int arg1,int arg2,long arg3) {
		org.lwjgl.opengl.GL43.nglProgramUniform3fv(arg0,arg1,arg2,arg3);
	}

	@Override
	public void glActiveTexture(int arg0) {
		org.lwjgl.opengl.GL43.glActiveTexture(arg0);
	}

	@Override
	public void glVertexAttribFormat(int arg0,int arg1,int arg2,boolean arg3,int arg4) {
		org.lwjgl.opengl.GL43.glVertexAttribFormat(arg0,arg1,arg2,arg3,arg4);
	}

	@Override
	public void glDisableClientState(int arg0) {
		org.lwjgl.opengl.GL43.glDisableClientState(arg0);
	}

	@Override
	public void glLinkProgram(int arg0) {
		org.lwjgl.opengl.GL43.glLinkProgram(arg0);
	}

	@Override
	public boolean checkError(String message) {
		lu.kbra.standalone.gameengine.utils.GameEngineUtils.checkGlError(message);
		return true;
	}
	@Override
	public boolean isGLES() {
		return false;
	}
	@Override
	public boolean isGL() {
		return true;
	}
}
